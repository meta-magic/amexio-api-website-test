(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{BLWB:function(e,o,a){"use strict";a.r(o);var t=a("CcnG"),n=a("ZYCi"),i=a("JQBr"),l=a("Ip0R"),r=a("gIcY"),m=a("O4vx"),s=a("t/Na"),c=a("9NvV"),b=a("QVLW"),d=function(e,o,a,t){var n,i=arguments.length,l=i<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,o,a,t);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(l=(i<3?n(l):i>3?n(o,a,l):n(o,a))||l);return i>3&&l&&Object.defineProperty(o,a,l),l},x=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},h=function(){function e(e,o,a,t){this.http=e,this.httpService=o,this.cookieService=a,this.themeServiceService=t,this.hasThemeInit=!1}return e.prototype.ngOnInit=function(){var e,o=this;this.http.get("assets/data/theme/themes-api-showcase.json",{responseType:"json"}).subscribe(function(o){e=o},function(e){},function(){o.mdThemeData=e}),this.http.get("assets/data/theme/theme-api-showcase-amexio.json",{responseType:"json"}).subscribe(function(o){e=o},function(e){},function(){o.amexioThemeData=e})},e.prototype.addNewTheme=function(e,o){var a=this,t=document.createElement("link");t.onload=function(){a.removeExistingTheme(o)},t.setAttribute("rel","stylesheet"),t.id="themeid",t.href=e,document.head.appendChild(t)},e.prototype.removeExistingTheme=function(e){if(null!=e&&e&&0!=e.length)for(var o=0;o<e.length;o++){var a=e[o];"themeid"==a.id&&document.head.removeChild(a)}},e.prototype.themeChange=function(e){this.themeServiceService.getTheme(e)},e=d([Object(t.n)({selector:"theme-page",template:'\n\n    <amexio-image [path]="\'assets/images/logos/amexio_colors.jpeg\'"[tooltip]="\'Image\'"></amexio-image>\n\n    <amexio-tab-view  [closable]="false">\n        <amexio-tab title="Material Design" [active]="true">\n            <amexio-row *ngFor="let row of mdThemeData">\n                <amexio-column [fit]="true" [size]="(12/row.length)" *ngFor="let col of row">\n                    <div class="card-container">\n                        <header class="card-header flex-start" [ngStyle]="{\'background-color\':col.navBarBGColor, \'color\':col.navBarFontColor}" >\n                            <amexio-label>{{col.themeName}}</amexio-label>\n                        </header>\n                        <div class="card-body cardbody">\n                            <amexio-image [path]="\'assets/images/theme-icons/\'+col.themeImageFile"></amexio-image> <br/>\n                            <amexio-label [size]="\'small\'">Version: {{col.version}}</amexio-label> <br/>\n                            <amexio-label>Style: {{col.style}}</amexio-label> <br/>\n                        </div> \n                        <footer class="card-footer flex-end">\n                            <amexio-button [label]="\'Test\'" [type]="\'default\'" (onClick)="themeChange(col)"></amexio-button>\n                        </footer>\n                    </div>\n                </amexio-column>\n            </amexio-row>\n        </amexio-tab>\n        <amexio-tab title="Amexio">\n            <amexio-row *ngFor="let row of amexioThemeData">\n                <amexio-column [fit]="true" [size]="(12/row.length)" *ngFor="let col of row">\n                    <div class="card-container">\n                        <header class="card-header flex-start" [ngStyle]="{\'background-color\':col.navBarBGColor, \'color\':col.navBarFontColor}" >\n                            <amexio-label>{{col.themeName}}</amexio-label>\n                        </header>\n                        <div class="card-body cardbody">\n                            <amexio-image [path]="\'assets/images/theme-icons/\'+col.link"></amexio-image> <br/>\n                            <amexio-label [size]="\'small\'">Version: {{col.version}}</amexio-label> <br/>\n                            <amexio-label>Style: {{col.style}}</amexio-label> <br/>\n                        </div> \n                    </div>\n                </amexio-column>\n            </amexio-row>\n        </amexio-tab>\n        <amexio-tab title="Colors">\n        Eventually we can apply this attribute [amexio-color] to all components, currently we can apply to progress bar and datapoints. \n        To know more refer the API reference section\n        <amexio-datagrid title="Amexio Colors" [enable-column-fiter]="false"\n        [http-method]="\'get\'"\n        [http-url]="\'assets/data/theme/amexio-colours.json\'"\n        [data-reader]="\'colors\'"\n        [enable-data-filter]="false">\n<amexio-data-table-column [width]="15" [data-index]="\'name\'" [data-type]="\'string\'" [hidden]="false"\n                   [text]="\'Name\'"></amexio-data-table-column>\n<amexio-data-table-column [width]="15" [data-index]="\'css\'" [data-type]="\'string\'" [hidden]="false"\n[text]="\'CSS Class Name\'"><ng-template #amexioBodyTmpl let-column let-row="row">\n<span>\n[amexio-color] = \'{{row.css}}\' </span>\n</ng-template>\n</amexio-data-table-column>\n<amexio-data-table-column [width]="15" [data-index]="\'BG\'" [data-type]="\'string\'" [hidden]="false"\n                   [text]="\'Color\'">\n                   <ng-template #amexioBodyTmpl let-column let-row="row">\n                   <span>\n                    <div [ngStyle]="{\'background-color\':row.BG, \'color\' : row.font}">\n                    This is amexio color {{ row.name }} background <b> {{ row.BG }} </b> with opposite font color <b> {{ row.font }} </b>             \n                    </div>                  \n                   </span>\n                    </ng-template>\n                   </amexio-data-table-column>\n</amexio-datagrid>\n        </amexio-tab>\n        <amexio-tab title="Getting Started">\n        <amexio-label size="large">To install the Amexio Colors:</amexio-label>\n        <amexio-box background-color="blue" border="left" border-color="blue" padding="true">\n            <amexio-label size="medium-bold">$ sudo npm install -g amexio-colors</amexio-label>\n        </amexio-box>\n        <amexio-label size="large">Check the Amexio Colors version:</amexio-label>\n        <amexio-box background-color="blue" border="left" border-color="blue" padding="true" >\n            <amexio-label size="medium-bold"> $ ac </amexio-label><br/>\n            <amexio-label> Amexio Colors v1.0 </amexio-label><br/>\n            <amexio-label> Copyright (c) 2018, MetaMagic Global Inc, NJ, USA </amexio-label><br/>\n            <amexio-label> ..... </amexio-label><br/>\n        </amexio-box>\n        <amexio-label size="large">To Generate Amexio Material Design Themes</amexio-label>\n        \n        <amexio-box background-color="blue" border="left" border-color="blue" padding="true" >       \n        <amexio-label size="medium-bold">$ pwd</amexio-label><br/>\n        <amexio-label size="medium">/home/user/</amexio-label><br/><br/>\n        <amexio-label size="medium-bold">$ mkdir mythemes</amexio-label><br/>\n        <amexio-label size="medium-bold">$ echo "// Amexio Themes v0.0 " >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size="medium-bold">$ echo "// Design-Type : Material Design " >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size="medium-bold">$ echo "// Theme-Version : 4.0 " >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size="medium-bold">$ echo "army-olive,#4B5320,#708238" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size="medium-bold">$ echo "ash-stone-black,#544C4A,#877F7D" >> Themes-Data.txt</amexio-label><br/>\n        <br />\n        <amexio-label size="medium-bold">$ ac Themes-Data.txt /home/user/mythemes/</amexio-label><br/>\n        </amexio-box>\n        <amexio-label size="large"> Amexio Colors API Documentation</amexio-label>\n        <p>\n        <amexio-label>\n            Checkout the Amexio Colors API Documentation published in </amexio-label>\n            <a href="https://meta-magic.github.io/AmexioColors/" target="_blank"> GitHub Pages</a>\n            <br/>\n            <amexio-label>For Testing the Themes Autogenerated by the Amexio Colors Checkout the Amexio</amexio-label>\n            <a href="https://api.amexio.org" target="_blank"> API Site</a>\n        </p>\n            \n        </amexio-tab>\n    </amexio-tab-view>\n\n  '}),x("design:paramtypes",[s.a,c.a,i.a,b.a])],e)}();a.d(o,"ThemeModule",function(){return g}),a.d(o,"routedComponents",function(){return f});var u=function(e,o,a,t){var n,i=arguments.length,l=i<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,o,a,t);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(l=(i<3?n(l):i>3?n(o,a,l):n(o,a))||l);return i>3&&l&&Object.defineProperty(o,a,l),l},p=[{path:"",component:h}],g=function(){function e(){}return e=u([Object(t.J)({imports:[l.b,s.b,r.d,m.j,n.d.forChild(p)],exports:[n.d],declarations:[h],providers:[i.a]})],e)}(),f=[h]}}]);