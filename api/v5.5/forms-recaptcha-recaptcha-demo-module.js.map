{"version":3,"sources":["webpack:///./src/app/forms/recaptcha/recaptcha.demo.module.ts","webpack:///./src/app/forms/recaptcha/recaptcha.demo.ts"],"names":[],"mappings":"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","file":"forms-recaptcha-recaptcha-demo-module.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule, LoadRecaptchaService} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {RecaptchaDemo} from \"./recaptcha.demo\";\nimport {HttpClientModule} from \"@angular/common/http\";\n/**\n * Created by kedar on 12/9/18.\n */\n@NgModule({\n  declarations: [RecaptchaDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: RecaptchaDemo, pathMatch: 'full'\n  }])],\n  providers: [LoadRecaptchaService]\n})\nexport class RecaptchaDemoModule {\n\n}\n","/**\n * Created by kedar on 12/9/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'recaptcha-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n        Amexio google recaptcha\n      </amexio-header>\n      <amexio-body>\n        <p>Amexio google recaptcha used for google security check. </p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n         \n\n         \n          <amexio-row>\n          <amexio-column [size]=\"12\">\n            <amexio-card [header]=\"true\">\n\n            \n              <amexio-header>Captcha Response data</amexio-header>\n              <amexio-body>\n\n        <amexio-google-recaptcha (onSuccess)=\"onSuccess($event)\" \n        (onFailure)=\"onFailure($event)\"\n        [site-key]=\"'6LeZ5W8UAAAAAIHXZf35oYoUhpsICnJzqSxx3fpf'\">\n                              \n        </amexio-google-recaptcha>\n              \n              </amexio-body>\n            </amexio-card>\n          </amexio-column>\n        </amexio-row>\n        \n      \n\n          </amexio-tab>\n\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties <amexio-google-recaptcha>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/forms/recaptcha.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\" >\n              <amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Version'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            \n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/forms/recaptcha.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [width]=\"20\"[data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"80\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n              <amexio-vertical-tab-view>\n                <amexio-tab title=\"HTML\" [active]=\"true\">\n                  <ng-container *ngIf=\"htmlCode\">\n                    <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                    <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                  </ng-container>\n                </amexio-tab>\n                <amexio-tab title=\"Type Script\">\n                  <ng-container *ngIf=\"typeScriptCode\">\n                    <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                  </ng-container>\n                </amexio-tab>\n                <amexio-tab title=\"Module\">\n                <ng-container *ngIf=\"moduleCode\">\n                  <prism-block [code]=\"moduleCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n      <p align=\"center\">Amexio Sandbox</p>\n      <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-recaptcha1?embed=1&file=app/recaptcha-demo/recaptcha/recaptcha.demo.html&view=editor\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n    <!--<amexio-notification [data]=\"copyMsgArray\"></amexio-notification>-->\n\n  `\n})\nexport class RecaptchaDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  moduleCode:string;\n  copyMsgArray: any[];\n  response: any;\n  age:number=10;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs:any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/forms/recaptcha/recaptcha.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/forms/recaptcha/recaptcha.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n    // MODULE FILE\n    this.http.get('assets/data/code/forms/recaptcha/module.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.moduleCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  onSuccess(event: any) {\n    this.response = event;\n  }\n  onFailure(event: any) {\n    this.response = event;    \n  }\n}\n\n\n"],"sourceRoot":""}