{"version":3,"sources":["webpack:///./src/app/data/spinner/spinner.demo.html","webpack:///./src/app/data/spinner/spinner.demo.module.ts","webpack:///./src/app/data/spinner/spinner.demo.ts","webpack:///./src/app/data/spinner/spinner.model.ts"],"names":[],"mappings":"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","file":"data-spinner-spinner-demo-module.js","sourcesContent":["module.exports = \"<amexio-card header=\\\"true\\\">\\n    <amexio-header>\\n        Data Loading Indicator\\n    </amexio-header>\\n    <amexio-body>\\n        <p>Data Loading Indicator Component Provides up-to-date feedback on the progress of a workflow or action with\\n            simple yet flexible spinner and easy to configure.</p>\\n        <amexio-tab-view>\\n            <amexio-tab title=\\\"Demo\\\" active=\\\"true\\\">\\n                <amexio-row>\\n                    <amexio-column size=\\\"12\\\">\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Data Loading Indicator\\n                            </amexio-header>\\n                            <amexio-body>\\n\\n                                <amexio-button [label]=\\\"text\\\" [type]=\\\"'yellow'\\\" [tooltip]=\\\"'show'\\\" (onClick)=\\\"onButtonClick()\\\">\\n                                </amexio-button>\\n                                <br />\\n                                <amexio-label size=\\\"small-bold\\\">Select Color For Spinner : -</amexio-label>\\n                                <input type=\\\"color\\\" id=\\\"head\\\" name=\\\"color\\\" (input)=\\\"setColorForIndictor($event)\\\" value=\\\"colorModel.color\\\" />\\n\\n\\n                                <amexio-row>\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'right'\\\">\\n                                            <amexio-header>\\n                                                Advanced Spinner\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                    <amexio-spinner *ngIf=\\\"isBoxShow\\\" [type]=\\\"spinnerModel.spinnerType\\\"\\n                                                        [vertical-position]=\\\"spinnerModel.vposition\\\" [horizontal-position]=\\\"spinnerModel.hposition\\\"\\n                                                        [color]=\\\"colorModel.color\\\">\\n                                                    </amexio-spinner>\\n                                                <amexio-dropdown  [place-holder]=\\\"'Choose'\\\" [(ngModel)]=\\\"spinnerModel.spinnerType\\\"\\n                                                    [data-reader]=\\\"'type'\\\" [field-label]=\\\"'Choose Spinner Type'\\\" [data]=\\\"spinnerData\\\"\\n                                                    [display-field]=\\\"'spinnerType'\\\" [value-field]=\\\"'spinnerType'\\\">\\n                                                </amexio-dropdown>\\n\\n                                                <amexio-dropdown [(ngModel)]=\\\"spinnerModel.vposition\\\" [place-holder]=\\\"'Choose'\\\"\\n                                                    [data-reader]=\\\"'verticalPosition'\\\" [field-label]=\\\"'Choose Vertical Position'\\\"\\n                                                    [data]=\\\"spinnerData\\\" [display-field]=\\\"'vposition'\\\" [value-field]=\\\"'vposition'\\\" >\\n                                                </amexio-dropdown>\\n\\n                                                <amexio-dropdown [(ngModel)]=\\\"spinnerModel.hposition\\\" [place-holder]=\\\"'Choose'\\\"\\n                                                    [data-reader]=\\\"'horizontalPosition'\\\" [field-label]=\\\"'Choose Horizontal Position'\\\"\\n                                                    [data]=\\\"spinnerData\\\" [display-field]=\\\"'hposition'\\\" [value-field]=\\\"'hposition'\\\">\\n                                                </amexio-dropdown>\\n                                            </amexio-body>\\n\\n                                            <amexio-action>\\n                                                <amexio-button [label]=\\\"buttonShowHide\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'show'\\\"\\n                                                    (onClick)=\\\"onAdvanceClick()\\\">\\n                                                </amexio-button>\\n                                            </amexio-action>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\">\\n                                            <amexio-header>\\n                                                fading circle round loader\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                <amexio-spinner [show]=clickShow [size]=\\\"'10px'\\\" relative=\\\"true\\\" [type]=\\\"'fadingcircle'\\\"\\n                                                    [color]=\\\"colorModel.color\\\">\\n                                                </amexio-spinner>\\n                                            </amexio-body>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\">\\n                                            <amexio-header>\\n                                                ball spin loader\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                <amexio-spinner [show]=clickShow [size]=\\\"'9px'\\\" relative=\\\"true\\\" [type]=\\\"'ballspin'\\\"\\n                                                    [color]=\\\"colorModel.color\\\">\\n                                                </amexio-spinner>\\n                                            </amexio-body>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n                                </amexio-row>\\n\\n                                <amexio-row>\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                            <amexio-header>\\n                                                fire spin loader\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                <amexio-spinner [show]=clickShow [size]=\\\"'50px'\\\" relative=\\\"true\\\" [type]=\\\"'firespin'\\\"\\n                                                    [color]=\\\"colorModel.color\\\">\\n                                                </amexio-spinner>\\n                                            </amexio-body>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                            <amexio-header>\\n                                                three bounce loader\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                <amexio-spinner [show]='clickShow' [size]=\\\"'8px'\\\" relative=\\\"true\\\"\\n                                                    [type]=\\\"'threebounce'\\\" [color]=\\\"colorModel.color\\\">\\n                                                </amexio-spinner>\\n                                            </amexio-body>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\">\\n                                            <amexio-header>\\n                                                spinner round loader\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                <amexio-spinner [show]=clickShow [size]=\\\"'6px'\\\" relative=\\\"true\\\" [type]=\\\"'spinnerround'\\\"\\n                                                    [color]=\\\"colorModel.color\\\">\\n                                                </amexio-spinner>\\n                                            </amexio-body>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n                                </amexio-row>\\n\\n                                <amexio-row>\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                            <amexio-header>\\n                                                ring loader\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                <amexio-spinner [show]=clickShow [size]=\\\"'10px'\\\" [color]=\\\"colorModel.color\\\"\\n                                                    relative=\\\"true\\\" [type]=\\\"'ring'\\\">\\n                                                </amexio-spinner>\\n                                            </amexio-body>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                            <amexio-header>\\n                                                half circle loader\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                <amexio-spinner [show]=clickShow [size]=\\\"'10px'\\\" relative=\\\"true\\\" [type]=\\\"'halfcircle'\\\">\\n                                                </amexio-spinner>\\n                                            </amexio-body>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n                                    <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                                        <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                            <amexio-header>\\n                                                rectangle Bounce loader\\n                                            </amexio-header>\\n                                            <amexio-body>\\n                                                <amexio-spinner [show]=clickShow [size]=\\\"'9px'\\\" relative=\\\"true\\\" [type]=\\\"'rectanglebounce'\\\">\\n                                                </amexio-spinner>\\n                                            </amexio-body>\\n                                        </amexio-card>\\n                                    </amexio-column>\\n                                </amexio-row>\\n\\n\\n\\n\\n                            </amexio-body>\\n                        </amexio-card>\\n\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"API Reference\\\">\\n                <amexio-datagrid title=\\\"Properties<amexio-spinner>\\\" [enable-column-fiter]=\\\"false\\\" [http-method]=\\\"'get'\\\"\\n                    [http-url]=\\\"'assets/apireference/data/spinner.json'\\\" [data-reader]=\\\"'properties'\\\"\\n                    [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [data-index]=\\\"'name'\\\" [width]=\\\"15\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                        [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"10\\\" [data-index]=\\\"'version'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                        [text]=\\\"'Version'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'type'\\\" [width]=\\\"10\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                        [text]=\\\"'Type'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'default'\\\" [width]=\\\"10\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                        [text]=\\\"'Default'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'description'\\\" [width]=\\\"65\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                        [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Source\\\">\\n                <div style=\\\"overflow-y: scroll\\\">\\n                    <amexio-vertical-tab-view>\\n                        <amexio-tab title=\\\"HTML\\\" [active]=\\\"true\\\">\\n                            <ng-container *ngIf=\\\"htmlCode\\\">\\n                                <!--<clip-copy [htmlCode]=\\\"htmlCode\\\" (onClick)=\\\"onCopyClick()\\\"></clip-copy>-->\\n                                <prism-block [code]=\\\"htmlCode\\\" [language]=\\\"'html'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                        <amexio-tab title=\\\"Type Script\\\">\\n                            <ng-container *ngIf=\\\"typeScriptCode\\\">\\n                                <prism-block [code]=\\\"typeScriptCode\\\" [language]=\\\"'typescript'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                    </amexio-vertical-tab-view>\\n                </div>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Live\\\">\\n                <p align=\\\"center\\\">Amexio Sandbox</p>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/amexio-spinner?embed=1&file=src/app/spinner/spinner.demo.component.html&view=editor\\\"\\n                    frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n            </amexio-tab>\\n        </amexio-tab-view>\\n    </amexio-body>\\n</amexio-card>\"","import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {AmexioSpinnerDemo} from \"./spinner.demo\";\nimport {HttpClientModule} from \"@angular/common/http\";\n/**\n * Created by kedar on 19/9/18.\n */\n@NgModule({\n  declarations: [AmexioSpinnerDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: AmexioSpinnerDemo, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class AmexioSpinnerDemoModule {\n\n}\n\n\n\n","/**\n * Created by kedar on 19/9/18.\n */\n\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SpinnerModel } from './spinner.model';\n@Component({\n    selector: 'amexio-spinner-demo',\n    templateUrl: './spinner.demo.html',\n\n})\nexport class AmexioSpinnerDemo {\n    htmlCode: string;\n    typeScriptCode: string;\n    copyMsgArray: any[];\n    color: any;\n    boxFlag: any;\n    spinnerData: any;\n    isBoxShow: boolean = false;\n    colorModel: ColorModel;\n    clickShow: boolean = true;\n    buttonShowHide: string = 'Show';\n    text: string = 'Hide';\n\n    showSpinner: any;\n    spinnerType: string;\n    hposition: string;\n    vposition: string;\n    spinnerModel: SpinnerModel;\n    constructor(private http: HttpClient) {\n        this.getHtmlAndTypeScriptCode();\n        this.colorModel = new ColorModel();\n        this.spinnerModel = new SpinnerModel();\n        this.spinnerData = {\n            \"type\": [\n                {\n                    \"spinnerType\": \"rectanglebounce\",\n                },\n                {\n                    \"spinnerType\": \"ring\",\n                },\n                {\n                    \"spinnerType\": \"halfcircle\",\n                },\n                {\n                    \"spinnerType\": \"fadingcircle\",\n                },\n                {\n                    \"spinnerType\": \"ballspin\",\n                },\n                {\n                    \"spinnerType\": \"firespin\",\n                },\n                {\n                    \"spinnerType\": \"threebounce\",\n                },\n                {\n                    \"spinnerType\": \"spinnerround\",\n                }\n            ],\n            \"horizontalPosition\": [\n                {\n                    \"hposition\": \"left\"\n                },\n                {\n                    \"hposition\": \"center\"\n                },\n                {\n                    \"hposition\": \"right\"\n                }\n            ],\n            \"verticalPosition\": [\n                {\n                    \"vposition\": \"top\"\n                },\n                {\n                    \"vposition\": \"center\"\n                },\n                {\n                    \"vposition\": \"bottom\"\n                }\n            ]\n        }\n    }\n\n    //TO LOAD HTML AND TYPESCRIPT CODE\n    getHtmlAndTypeScriptCode() {\n        let responseHtml: any;\n        let responseTs: any;\n\n        //HTML FILE\n        this.http.get('assets/data/code/data/spinner/spinner.html', { responseType: 'text' }).subscribe(data => {\n            responseHtml = data;\n        }, error => {\n        }, () => {\n            this.htmlCode = responseHtml;\n        });\n\n        //TS FILE\n        this.http.get('assets/data/code/data/spinner/spinner.text', { responseType: 'text' }).subscribe(data => {\n            responseTs = data;\n        }, error => {\n        }, () => {\n            this.typeScriptCode = responseTs;\n        });\n\n    }\n\n    //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n    onCopyClick() {\n        if (this.copyMsgArray.length >= 1) {\n            this.copyMsgArray = [];\n            this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n        } else {\n            this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n        }\n    }\n\n    //THIS METHOD IS USED FOR SETTING COLOR FOR INDICATOR\n    setColorForIndictor(colorName: any) {\n        this.colorModel.color = colorName.target.value;\n    }\n    // Method For the spinner show and hide\n    onButtonClick() {\n\n        if (this.clickShow) {\n            this.text = 'Show';\n        } else {\n            this.text = 'Hide'\n        }\n        this.clickShow = !this.clickShow;\n    }\n\n\n    onAdvanceClick() {\n        if (this.spinnerModel.hposition != null && this.spinnerModel.spinnerType != null && this.spinnerModel.vposition != null) {\n            this.buttonShowHide = 'Show';\n\n        } else {\n            this.buttonShowHide = 'Hide';\n        }\n        this.isBoxShow = !this.isBoxShow;\n        if(this.isBoxShow){\n            this.buttonShowHide = 'Hide';\n        }else{\n            this.buttonShowHide = 'Show';\n        }\n    }\n}\n\n\n\nexport class ColorModel {\n    color: string;\n    show: boolean;\n    constructor() {\n\n    }\n}\n","export class SpinnerModel {\n    vposition: string;\n    hposition: string;\n    spinnerType: string;\n}"],"sourceRoot":""}