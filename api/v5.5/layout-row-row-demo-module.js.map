{"version":3,"sources":["webpack:///./src/app/layout/row/row.demo.module.ts","webpack:///./src/app/layout/row/row.demo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAuC;AACM;AACY;AAChB;AACE;AACE;AACI;AACd;AACnC;;GAEG;AAQH;IAAA;IAEA,CAAC;IAFY,aAAa;QAPzB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,iDAAO,CAAC;YACvB,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,wDAAU,EAAC,2DAAY,EAAE,uEAAkB,EAAE,4DAAY,CAAC,QAAQ,CAAC,CAAC;wBACvG,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iDAAO,EAAE,SAAS,EAAE,MAAM;qBAChD,CAAC,CAAC,CAAC;YACJ,SAAS,EAAE,EAAE;SACd,CAAC;OACW,aAAa,CAEzB;IAAD,oBAAC;CAAA;AAFyB;;;;;;;;;;;;;AClB1B;AAAA;AAAA;AAAA;AAAA;;GAEG;;;;;;;;;;AAEoC;AACJ;AA6FnC;IAKE,iBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,kCAAkC;IAClC,0CAAwB,GAAxB;QAAA,iBAoBC;QAnBC,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAe,CAAC;QAEpB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,YAAY,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,UAAU,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,sDAAsD;IACtD,6BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAxCU,OAAO;QA3FnB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,4nHAwF/B;SACF,CAAC;yCAM0B,kDAAI;OALnB,OAAO,CAyCnB;IAAD,cAAC;CAAA;AAzCmB","file":"layout-row-row-demo-module.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport { AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {HttpModule} from \"@angular/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {RowDemo} from \"./row.demo\";\n/**\n * Created by sagar on 11/1/18.\n */\n@NgModule({\n  declarations: [RowDemo],\n  imports: [CommonModule, FormsModule, HttpModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: RowDemo, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class RowDemoModule {\n\n}\n","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core'\nimport {Http} from \"@angular/http\";\n\n@Component({\n  selector: 'row-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n        Row\n      </amexio-header>\n      <amexio-body>\n        <p>Amexio uses a series of rows and columns to layout and align content and is fully responsive.</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-card header=\"true\">\n              <amexio-header>1 Row 3 Column</amexio-header>\n              <amexio-body>\n                <amexio-row>\n                  <amexio-column size=\"4\">\n                    <amexio-card>\n                      <amexio-body>COL 4</amexio-body>\n                    </amexio-card>\n                  </amexio-column>\n                  <amexio-column size=\"4\">\n                    <amexio-card>\n                      <amexio-body>COL 4</amexio-body>\n                    </amexio-card>\n                  </amexio-column>\n                  <amexio-column size=\"4\">\n                    <amexio-card>\n                      <amexio-body>COL 4</amexio-body>\n                    </amexio-card>\n                  </amexio-column>\n                </amexio-row>\n              </amexio-body>\n            </amexio-card>\n            <amexio-card header=\"true\">\n              <amexio-header>2 Row 2 Column</amexio-header>\n              <amexio-body>\n                <amexio-row>\n                  <amexio-column size=\"6\">\n                    <amexio-card>\n                      <amexio-body>COL 6</amexio-body>\n                    </amexio-card>\n                  </amexio-column>\n                  <amexio-column size=\"6\">\n                    <amexio-card>\n                      <amexio-body>COL 6</amexio-body>\n                    </amexio-card>\n                  </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                  <amexio-column size=\"6\">\n                    <amexio-card>\n                      <amexio-body>COL 6</amexio-body>\n                    </amexio-card>\n                  </amexio-column>\n                  <amexio-column size=\"6\">\n                    <amexio-card>\n                      <amexio-body>COL 6</amexio-body>\n                    </amexio-card>\n                  </amexio-column>\n                </amexio-row>\n              </amexio-body>\n            </amexio-card>\n      \n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n          <p align=\"center\">Amexio Sandbox</p>\n          <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-rowlayout?embed=1&file=app/layouts/row/row.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n    <!--<amexio-notification [data]=\"copyMsgArray\"></amexio-notification>-->\n\n  `\n})\nexport class RowDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n\n  constructor(private http: Http) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/layout/row/layout.html').subscribe(data => {\n      responseHtml = data.text();\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/layout/row/layout.text').subscribe(data => {\n      responseTs = data.text();\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n"],"sourceRoot":""}