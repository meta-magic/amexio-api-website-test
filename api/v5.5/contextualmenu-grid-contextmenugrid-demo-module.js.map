{"version":3,"sources":["webpack:///./src/app/contextualmenu/grid/contextmenugrid.demo.module.ts","webpack:///./src/app/contextualmenu/grid/contextmenugrid.demo.ts"],"names":[],"mappings":"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","file":"contextualmenu-grid-contextmenugrid-demo-module.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {GridWithContextMenuDemo} from \"./contextmenugrid.demo\";\nimport {HttpClientModule} from \"@angular/common/http\";\n/**\n * Created by rashmi on 29/6/18.\n */\n@NgModule({\n  declarations: [GridWithContextMenuDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: GridWithContextMenuDemo, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class ContextualMenuGridDemoModule {\n\n}\n","/**\n * Created by rashmi on 29/6/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'grid-context-menu-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n         Data Grid with Context Menu \n      </amexio-header>\n      <amexio-body>\n        <p>Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column and with context menu(right-click mouse operation).\n        </p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n              <amexio-column size=\"12\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Data Grid with Context Menu \n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-datagrid\n                      [enable-column-fiter]=\"true\" [context-menu]=\"contextMenuRowData\" [height]=\"200\" title=\"Country Grid\" [enable-checkbox]=\"false\"  [http-method]=\"'get'\" [http-url]=\"'assets/data/componentdata/country.json'\" [data-reader]=\"'data'\"  [page-size] = \"10\">\n                      <amexio-data-table-column [data-index]=\"'countryName'\" \n                                                [data-type]=\"'string'\" \n                                                [context-menu]=\"contextMenuColData\"\n                                                [hidden]=\"false\" [text]=\"'Name'\">\n                      </amexio-data-table-column>\n                      <amexio-data-table-column [data-index]=\"'countryCode1'\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Code'\"></amexio-data-table-column>\n                      <amexio-data-table-column [data-index]=\"'currencyName'\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Currency'\"></amexio-data-table-column>\n                    </amexio-datagrid>\n                 <!--   <p><b>Selected row data : </b>{{selectedData | json}}</p>-->\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n            </amexio-row>\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties<amexio-datagrid>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/grid.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"20\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Version'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"45\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid><br>\n            <amexio-datagrid title=\"Column Properties <amexio-data-table-colum>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/grid.json'\"\n                             [data-reader]=\"'columnProperties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"15\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"20\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Version'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/grid.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll;\">\n              <amexio-vertical-tab-view>\n                <amexio-tab title=\"HTML\" [active]=\"true\">\n                  <ng-container *ngIf=\"htmlCode\">\n                    <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                    <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                  </ng-container>\n                </amexio-tab>\n                <amexio-tab title=\"Type Script\">\n                  <ng-container *ngIf=\"typeScriptCode\">\n                    <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                  </ng-container>\n                </amexio-tab>\n                <amexio-tab title=\"DataSource\">\n                  <ng-container *ngIf=\"dataSource\">\n                    <prism-block [code]=\"dataSource\" [language]=\"'json'\"></prism-block>\n                  </ng-container>\n                </amexio-tab>\n              </amexio-vertical-tab-view>\n            </div>\n           \n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n          <p align=\"center\">Amexio Sandbox</p>\n          <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-grid-contextmenu?embed=1&file=src/app/contextualmenu/grid/grid.demo.component.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n  `\n})\nexport class GridWithContextMenuDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource: string;\n  copyMsgArray: any[];\n  selectedData: any;\n  contextMenuColData: any[];\n  contextMenuRowData: any[];\n\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n    this.contextMenuColData=\n    [{\"text\":\"Add State\",\"icon\":\"fa fa-plus\",\"disabled\":true},{\"text\":\"Edit\",\"icon\":\"\",\"seperator\":true}\n     ,{\"text\":\"Delete\",\"icon\":\"\"}];\n   this.contextMenuRowData =  [{\"text\":\"Reload\",\"icon\":\"fa fa-refresh\",\"disabled\":false,\"seperator\":false},{\"text\":\"Save\",\"icon\":\"fa fa-save\",\"seperator\":false}\n   ,{\"text\":\"Delete\",\"icon\":\"fa fa-close\"}];\n  }\n\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/data/contextmenugrid/contextmenugrid.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/data/contextmenugrid/contextmenugrid.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n    this.http.get('assets/data/componentdata/country.json',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.dataSource = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n"],"sourceRoot":""}