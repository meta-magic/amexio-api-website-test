{"version":3,"sources":["webpack:///./src/app/layout/steps/stepbox-icon/stepbox.icon.demo.module.ts","webpack:///./src/app/layout/steps/stepbox-icon/stepbox.icon.demo.ts"],"names":[],"mappings":"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","file":"layout-steps-stepbox-icon-stepbox-icon-demo-module.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioLayoutModule, AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {HttpModule} from \"@angular/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../../shared.module\";\nimport {StepBoxIconComponent} from \"./stepbox.icon.demo\";\n\n/**\n * Created by sagar on 11/1/18.\n */\n@NgModule({\n  declarations: [StepBoxIconComponent],\n  imports: [CommonModule, FormsModule, HttpModule,SharedModule,AmexioWidgetModule,AmexioLayoutModule, RouterModule.forChild([{\n    path: '', component: StepBoxIconComponent, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class StepBoxIconDemoModule {\n\n}\n","/**\n * Created by pratik on 15/1/18.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {Http} from \"@angular/http\";\nimport {debug} from \"util\";\n\n@Component({\n selector: 'stepbox-icon-demo',\n template: `\n   <amexio-card header=\"true\">\n     <amexio-header>\n        Step Box Icon \n     </amexio-header>\n     <amexio-body>\n       <p>Step-box component is an indicator for the steps in a workflow.</p>\n       <amexio-tab-view>\n         <amexio-tab title=\"Demo\" active=\"true\">\n           <amexio-row>\n             <amexio-column size=\"12\">\n               <!--block is true for showing step box  -->\n               <p><strong>Step box</strong></p>\n               <!--Step-box with fontawesome icons-->\n               <amexio-steps [icon]=\"true\">\n                 <amexio-step-block [label]=\"'User'\" [active]=\"true\" [icon]=\"'fa fa-user'\" ></amexio-step-block>\n                 <amexio-step-block [label]=\"'Address'\" [active]=\"false\" [icon]=\"'fa fa-address-card'\"></amexio-step-block>\n                 <amexio-step-block [label]=\"'Shop'\" [active]=\"false\" [icon]=\"'fa fa-shopping-cart'\"></amexio-step-block>\n                 <amexio-step-block [label]=\"'Payment'\" [active]=\"false\" [icon]=\"'fa fa-cc-visa'\"></amexio-step-block>\n               </amexio-steps>\n             </amexio-column>\n           </amexio-row>\n           <amexio-row>\n             <amexio-column size=\"12\">\n               <!--block is true for showing step box  -->\n               <p><strong>Step box with clickabel</strong></p>\n               <!--Step box with icon & clickable<-->\n               <amexio-steps [block]=\"true\" [icon]=\"true\" (onClick)=\"stepBlockClick($event)\">\n                 <amexio-step-block [label]=\"'User'\" [active]=\"user\" [icon]=\"'fa fa-user'\"></amexio-step-block>\n                 <amexio-step-block [label]=\"'Shop'\" [active]=\"shop\" [icon]=\"'fa fa-address-card'\"></amexio-step-block>\n                 <amexio-step-block [label]=\"'Payment'\" [active]=\"payment\" [icon]=\"'fa fa-shopping-cart'\"></amexio-step-block>\n                 <amexio-step-block [label]=\"'Confirmation'\" [active]=\"confirmation\" [icon]=\"'fa fa-cc-visa'\"></amexio-step-block>\n               </amexio-steps>\n             </amexio-column>\n           </amexio-row>\n         </amexio-tab>\n         <amexio-tab title=\"API Reference\">\n         <amexio-datagrid title=\"Properties <amexio-step>\" [enable-column-fiter]=\"false\"\n         [http-method]=\"'get'\"\n         [http-url]=\"'assets/apireference/layout/steps/step.json'\"\n         [data-reader]=\"'properties'\"\n         [enable-data-filter]=\"false\">\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                    [text]=\"'Name'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                    [text]=\"'Type'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                    [text]=\"'Default'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                    [text]=\"'Description'\"></amexio-data-table-column>\n</amexio-datagrid>\n\n<amexio-datagrid title=\"Properties <amexio-step-block>\" [enable-column-fiter]=\"false\"\n[http-method]=\"'get'\"\n[http-url]=\"'assets/apireference/layout/steps/step-block.json'\"\n[data-reader]=\"'properties'\"\n[enable-data-filter]=\"false\">\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n   [text]=\"'Name'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n   [text]=\"'Type'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n   [text]=\"'Default'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n   [text]=\"'Description'\"></amexio-data-table-column>\n</amexio-datagrid>\n\n<amexio-datagrid title=\"Events\" [enable-column-fiter]=\"false\"\n         [http-method]=\"'get'\"\n         [http-url]=\"'assets/apireference/layout/steps/step.json'\"\n         [data-reader]=\"'events'\"\n         [enable-data-filter]=\"false\">\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                    [text]=\"'Name'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                    [text]=\"'Description'\"></amexio-data-table-column>\n</amexio-datagrid>\n\n\n         </amexio-tab>\n         <amexio-tab title=\"Source\">\n           <div style=\"overflow-y: scroll\">\n           <amexio-vertical-tab-view>\n             <amexio-tab title=\"HTML\" [active]=\"true\">\n               <ng-container *ngIf=\"htmlCode\">\n                 <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                 <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n               </ng-container>\n             </amexio-tab>\n             <amexio-tab title=\"Type Script\">\n               <ng-container *ngIf=\"typeScriptCode\">\n                 <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n               </ng-container>\n             </amexio-tab>\n           </amexio-vertical-tab-view>\n           </div>\n         </amexio-tab>\n         <amexio-tab title=\"Live\">\n         <p align=\"center\">Amexio Sandbox</p>\n         <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-stepboxicon?embed=1&file=app/panels/stepboxicon/stepboxicon.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n         </amexio-tab>\n       </amexio-tab-view>\n     </amexio-body>\n   </amexio-card>\n   <amexio-notification [data]=\"clickMsgArray\" vertical-position=\"top\" horizontal-position=\"right\" auto-dismiss-msg=\"true\" auto-dismiss-msg-interval=\"1000\"></amexio-notification>\n\n `\n})\n\nexport class StepBoxIconComponent {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  user:boolean;\n  shop:boolean;\n  payment:boolean;\n  confirmation:boolean;\n  clickMsgArray:any=[];\n\n  constructor(private http: Http) {\n    this.getHtmlAndTypeScriptCode();\n    this.user=false;\n    this.shop=true;\n    this.payment=false;\n    this.confirmation=false;\n  }\n\n// step box click event\n  stepBlockClick(event:any){\n    if(event.label==\"User\"){\n      this.showMsg(\"Step 1 User\");\n      this.updateFlag(true,false,false,false);\n    }else if(event.label==\"Shop\"){\n      this.showMsg(\"Step 2 Shop\");\n      this.updateFlag(false,true,false,false);\n    }else if(event.label==\"Payment\"){\n      this.updateFlag(false,false,true,false);\n      this.showMsg(\"Step 3 Payment\");\n    }else if(event.label==\"Confirmation\"){\n      this.showMsg(\"Step 4 Confirmation\");\n      this.updateFlag(false,false,false,true);\n    }\n  }\n  updateFlag(user:boolean,shop:boolean,payment:boolean,confirmation:boolean){\n    this.user=user;\n    this.shop=shop;\n    this.payment=payment;\n    this.confirmation=confirmation;\n  }\n  showMsg(msg){\n    if(this.clickMsgArray.length>=1){\n      this.clickMsgArray=[];\n      this.clickMsgArray.push(msg);\n    }else{\n      this.clickMsgArray.push(msg);\n    }\n  }\n\n\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/layout/steps/steps_icon.html').subscribe(data => {\n      responseHtml = data.text();\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/layout/steps/steps.text').subscribe(data => {\n      responseTs = data.text();\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push('Code Copied');\n    } else {\n      this.copyMsgArray.push('Code Copied');\n    }\n  }\n}\n"],"sourceRoot":""}