{"version":3,"sources":["webpack:///./src/app/panes/reactiveform/reactiveform.demo.component.ts","webpack:///./src/app/panes/reactiveform/reactiveform.demo.html","webpack:///./src/app/panes/reactiveform/reactiveform.demo.module.ts"],"names":[],"mappings":"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","file":"panes-reactiveform-reactiveform-demo-module.js","sourcesContent":["/**\n * Created by kedar kokil on 22/11/18.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'reactive-form',\n  templateUrl: './reactiveform.demo.html',\n})\n\nexport class reactiveFormComponent implements OnInit {\n\n  htmlCode; typeScriptCode; checkboxGroupdata: any;\n  copyMsgArray: any = [];\n  age: number;\n  radioGroupData: any[] = [];\n  employeeForm: FormGroup;\n  employeeFormInsideForm: FormGroup;\n  addressForm: FormGroup;\n  address: Address;\n  employeeFormGroup: FormGroup;\n  emplpoyeeRegistration: EmplpoyeeRegistration;\n  registration: Registration;\n  registration1: Registration;\n  dynamicFormsReg: DynamicFormsReg;\n  dynamicEmployeeForm: FormGroup;\n  enableFieldSet: boolean;\n  constructor(private http: HttpClient, private fb: FormBuilder) {\n    this.address = new Address();\n    this.emplpoyeeRegistration = new EmplpoyeeRegistration();\n    this.registration1 = new Registration();\n    this.registration = new Registration();\n    this.dynamicFormsReg = new DynamicFormsReg();\n    this.radioGroupData = [{\n      genderName: 'Male',\n      genderId: 'male'\n    }, {\n      genderName: 'Female',\n      genderId: 'female'\n    }];\n\n    this.getHtmlAndTypeScriptCode();\n  }\n  ngOnInit() {\n    this.employeeForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]]\n    });\n\n\n    // HERE EMP FORM VALIDATION ADDED\n    this.employeeFormInsideForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]]\n    });\n\n    // HERE INNER ADDRESS FORM VALIDATION ADDED\n    this.addressForm = this.fb.group({\n      TemporaryAddress: ['', [Validators.required]],\n      PermanentAddress: ['', [Validators.required]]\n    });\n\n\n    // froms inside group\n\n\n    this.employeeFormGroup = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]],\n      AddressFormGroup: new FormGroup({\n        temporaryAddress: new FormControl('', Validators.required),\n        permanentAddress: new FormControl('', Validators.required)\n      })\n    });\n\n    this.dynamicEmployeeForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]],\n      phones : this.fb.array([])\n    });\n\n  }\n\n    //THIS METHOD IS USED FOR MAKING PERMANENT ADDRESS AS TEMP ADDRESS BASE UPON CHECKED\n    onCheckClick1(data: any) {\n      if (data) {\n        this.registration.address.perAddress = this.registration.address.tempAddress;\n      }\n    }\n\n    onCheckClick2(data: any) {\n      if (data) {\n        this.registration1.address.perAddress = this.registration1.address.tempAddress;\n      }\n    }\n\n  // GET PHONE FORMS\n  get phoneForms() {\n    return this.dynamicEmployeeForm.get('phones') as FormArray;\n  }\n\n  // ADD PHONE NUMBER\n  addPhone() {\n    const phone = this.fb.group({\n      phoneLabel: ['', [Validators.required]],\n      countryCode: ['', [Validators.required]],\n      phoneNumber: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(10), Validators.pattern('[0-9 ]*')]]\n    });\n    this.phoneForms.push(phone);\n  }\n\n  // THIS EVENT FIRE WHEN USER ADD PHONE NUMBER\n  addPhoneClick() {\n    this.enableFieldSet = true;\n    this.dynamicFormsReg.add(new Phone());\n    this.addPhone();\n  }\n\n  onDeleteClick(index: number) {\n    this.phoneForms.removeAt(index);\n  }\n\n  onAddClick(data:any) {\n    this.dynamicFormsReg.add(data);\n  }\n\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/pane/reactiveform/form.html', { responseType: 'text' }).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/pane/reactiveform/form.text', { responseType: 'text' }).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n\n}\n\n\n// THIS MODEL CLASS IS USED FOR BINDING TO EMPLOYEE ADDRESS\nexport class Address {\n  tempAddress: string;\n  perAddress: string;\n}\n\nexport class EmplpoyeeRegistration {\n  firstName: string;\n  lastName: string;\n  email: string;\n  age: number;\n  gender: string;\n  agree: any;\n  constructor() {\n  }\n}\n\nexport class Registration extends EmplpoyeeRegistration {\n  address: Address;\n  constructor() {\n    super();\n    this.address = new Address();\n  }\n}\n\n// THIS CLASS IS USED FOR DYNAMIC FORM REGISTRATION\nexport class DynamicFormsReg extends EmplpoyeeRegistration {\n  phones: Phone[];\n  constructor() {\n    super();\n    this.phones = [];\n  }\n  add(phone: Phone) {\n    this.phones.push(phone);\n  }\n}\n\n// THIS CLASS IS USED FOR PHONE NUMBER\nexport class Phone {\n  phoneLabel: string;\n  countryCode: string;\n  phoneNumber: string;\n}\n","module.exports = \"<amexio-card header=\\\"true\\\">\\n    <amexio-header>\\n        Reactive Forms With Amexio Inputs Components\\n    </amexio-header>\\n    <amexio-body>\\n        <p>\\n            Reactive forms provide a model-driven approach to handling form inputs whose values change over time.<br> Reactive forms can be used basically for validation purposes and below examples show reactive forms with amexio inputs components. User\\n            can add any complex validations.\\n        </p>\\n        <amexio-tab-view>\\n            <amexio-tab title=\\\"Demo\\\" active=\\\"true\\\">\\n                <!-- Reactive Forms with Amexio Form With <amexio-form> -->\\n\\n                <amexio-form [header]=\\\"true\\\" [formGroup]=\\\"employeeForm\\\">\\n                    <amexio-form-header>\\n                        Simple Reactive Forms\\n                    </amexio-form-header>\\n                    <amexio-form-body>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"emplpoyeeRegistration.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\"\\n                                    [min-length]=\\\"2\\\" [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"emplpoyeeRegistration.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                                    [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                                    [icon-feedback]=\\\"true\\\" >\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"emplpoyeeRegistration.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                                </amexio-email-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"emplpoyeeRegistration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\"\\n                                    [max-value]=\\\"100\\\" [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                                </amexio-number-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"emplpoyeeRegistration.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                                </amexio-radio-group>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"emplpoyeeRegistration.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                                </amexio-checkbox>\\n                            </amexio-column>\\n                        </amexio-row>\\n                    </amexio-form-body>\\n                    <amexio-form-action>\\n                        <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n                        </amexio-button>\\n                    </amexio-form-action>\\n\\n                </amexio-form>\\n\\n                <br>\\n                <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeForm.value | json}}<br>\\n                <b style=\\\"color:blue\\\">UI Model Data </b>: {{emplpoyeeRegistration|json}} <br>\\n\\n                <!-- Reactive Forms Within Form Amexio Form With <amexio-form> -->\\n                <br>\\n\\n                <amexio-form [header]=\\\"true\\\" [footer-align]=\\\"'right'\\\" [formGroup]=\\\"employeeFormInsideForm\\\">\\n                    <amexio-form-header>\\n                        Reactive Forms Within Forms\\n                    </amexio-form-header>\\n                    <amexio-form-body>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"registration.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                                    [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"registration.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                                    [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                                    [icon-feedback]=\\\"true\\\" >\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"registration.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                                </amexio-email-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"registration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                                    [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                                </amexio-number-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"12\\\">\\n                                <amexio-fieldset [formGroup]=\\\"addressForm\\\" [collapsible]=\\\"true\\\" title=\\\"Address\\\">\\n                                    <amexio-row>\\n                                        <amexio-column size=\\\"5\\\">\\n                                            <amexio-textarea-input formControlName=\\\"TemporaryAddress\\\" [enable-popover]=\\\"true\\\" [(ngModel)]=\\\"registration.address.tempAddress\\\" [field-label]=\\\"'Temporary Address'\\\" [place-holder]=\\\"'Temporary address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter temporary address'\\\"\\n                                                [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                            </amexio-textarea-input>\\n                                        </amexio-column>\\n                                        <amexio-column size=\\\"2\\\">\\n                                            <amexio-checkbox [field-label]=\\\"'Permanent address same as temporary address'\\\" (onSelection)=\\\"onCheckClick1($event)\\\">\\n                                            </amexio-checkbox>\\n                                        </amexio-column>\\n                                        <amexio-column size=\\\"5\\\">\\n                                            <amexio-textarea-input formControlName=\\\"PermanentAddress\\\" [(ngModel)]=\\\"registration.address.perAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Permanent Address'\\\" [place-holder]=\\\"'Permanent address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter permanent address'\\\"\\n                                                [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                            </amexio-textarea-input>\\n                                        </amexio-column>\\n                                    </amexio-row>\\n                                    <amexio-row>\\n                                        <amexio-column size=\\\"12\\\">\\n                                            <amexio-button [label]=\\\"'Add Address'\\\" [disabled]=\\\"!addressForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n                                            </amexio-button>\\n                                        </amexio-column>\\n                                    </amexio-row>\\n                                </amexio-fieldset>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"registration.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                                </amexio-radio-group>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"registration.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                                </amexio-checkbox>\\n                            </amexio-column>\\n                        </amexio-row>\\n                    </amexio-form-body>\\n                    <amexio-form-action>\\n                        <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeFormInsideForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n                        </amexio-button>\\n                    </amexio-form-action>\\n                </amexio-form>\\n\\n                <br>\\n                <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeFormInsideForm.value | json}}<br>\\n                <b style=\\\"color:green\\\">Inner Form Model Data : </b> {{addressForm.value | json}}<br>\\n                <b style=\\\"color:blue\\\">UI Model Data </b>: {{registration|json}} <br>\\n                <br>\\n                <!-- Reactive forms group inside forms With <amexio-form>-->\\n\\n\\n                <amexio-form [header]=\\\"true\\\" [formGroup]=\\\"employeeFormGroup\\\">\\n                    <amexio-form-header>\\n                        Reactive Forms Group Inside Forms\\n                    </amexio-form-header>\\n                    <amexio-form-body>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"registration1.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                                    [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"registration1.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                                    [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                                    [icon-feedback]=\\\"true\\\" >\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"registration1.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                                </amexio-email-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"registration1.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                                    [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                                </amexio-number-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"12\\\">\\n                                <amexio-fieldset formGroupName=\\\"AddressFormGroup\\\" [collapsible]=\\\"true\\\" title=\\\"Address\\\">\\n                                    <amexio-row>\\n                                        <amexio-column size=\\\"5\\\">\\n                                            <amexio-textarea-input formControlName=\\\"temporaryAddress\\\" [(ngModel)]=\\\"registration1.address.tempAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Temporary Address'\\\" [place-holder]=\\\"'Temporary Address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter temporary address'\\\"\\n                                                [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                            </amexio-textarea-input>\\n                                        </amexio-column>\\n                                        <amexio-column size=\\\"2\\\">\\n                                            <amexio-checkbox [field-label]=\\\"'Permanent address same as temporary address'\\\" (onSelection)=\\\"onCheckClick2($event)\\\">\\n                                            </amexio-checkbox>\\n                                        </amexio-column>\\n                                        <amexio-column size=\\\"5\\\">\\n                                            <amexio-textarea-input formControlName=\\\"permanentAddress\\\" [(ngModel)]=\\\"registration1.address.perAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Permanent Address'\\\" [place-holder]=\\\"'Permanent Address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter permanent address'\\\"\\n                                                [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                            </amexio-textarea-input>\\n                                        </amexio-column>\\n                                    </amexio-row>\\n                                </amexio-fieldset>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"registration1.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                                </amexio-radio-group>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"registration1.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                                </amexio-checkbox>\\n                            </amexio-column>\\n                        </amexio-row>\\n                    </amexio-form-body>\\n                    <amexio-form-action>\\n                        <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeFormGroup.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n                        </amexio-button>\\n                    </amexio-form-action>\\n                </amexio-form>\\n\\n                <br>\\n                <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeFormGroup.value | json}}<br>\\n                <b style=\\\"color:blue\\\">UI Model Data </b>: {{registration1|json}} <br>\\n                <br>\\n\\n                <amexio-form [formGroup]=\\\"dynamicEmployeeForm\\\" header=\\\"true\\\" footer=\\\"false\\\">\\n                    <amexio-form-header>\\n                        Reactive Form with Dynamic Forms\\n                    </amexio-form-header>\\n                    <amexio-form-body>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"dynamicFormsReg.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                                    [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"dynamicFormsReg.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                                    [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                                    [icon-feedback]=\\\"true\\\" >\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"dynamicFormsReg.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                                </amexio-email-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"dynamicFormsReg.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                                    [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                                </amexio-number-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-button [label]=\\\"'Add Phone'\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Add Phone'\\\" (onClick)=\\\"addPhoneClick()\\\">\\n                                </amexio-button>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-fieldset *ngIf=\\\"enableFieldSet\\\" formArrayName=\\\"phones\\\" [collapsible]=\\\"false\\\" [title]=\\\"'Add Phone Numbers'\\\">\\n                            <amexio-row *ngFor=\\\"let phone of phoneForms.controls;let i=index\\\" [formGroupName]=\\\"i\\\">\\n                                <amexio-column size=\\\"3\\\">\\n                                    <amexio-text-input formControlName=\\\"phoneLabel\\\" [(ngModel)]=\\\"phone.phoneLabel\\\" enable-popover=\\\"true\\\" field-label=\\\"Phone Label\\\" name=\\\"phoneLabel\\\" error-msg=\\\"Please add phone label\\\" place-holder=\\\"Enter phone label\\\" allow-blank=\\\"false\\\" min-length=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                                        max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                                    </amexio-text-input>\\n                                </amexio-column>\\n                                <amexio-column size=\\\"3\\\">\\n                                    <amexio-text-input formControlName=\\\"countryCode\\\" [(ngModel)]=\\\"phone.countryCode\\\" enable-popover=\\\"true\\\" field-label=\\\"Country Code\\\" name=\\\"countryCode\\\" error-msg=\\\"Please add country code\\\" place-holder=\\\"Enter country code\\\" allow-blank=\\\"false\\\" min-length=\\\"1\\\"\\n                                        min-error-msg=\\\"Minimum 1 char required\\\" max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                                    </amexio-text-input>\\n                                </amexio-column>\\n                                <amexio-column size=\\\"3\\\">\\n                                    <amexio-text-input formControlName=\\\"phoneNumber\\\" [(ngModel)]=\\\"phone.phoneNumber\\\" enable-popover=\\\"true\\\" field-label=\\\"Phone Number\\\" name=\\\"phoneNumber\\\" error-msg=\\\"Please add phone number\\\" place-holder=\\\"Enter phone number\\\" allow-blank=\\\"false\\\" min-length=\\\"8\\\"\\n                                        min-error-msg=\\\"Minimum 8 char required\\\" max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                                    </amexio-text-input>\\n                                </amexio-column>\\n                                <amexio-column size=\\\"3\\\">\\n                                    <!-- <amexio-button  [label]=\\\"'Add'\\\"  [type]=\\\"'green'\\\" [tooltip]=\\\"'add'\\\"  [icon]=\\\"'fa fa-check'\\\" (onClick)=\\\"addClick({'phoneLabel':phone.phoneLabel,'countryCode':phone.countryCode,'phoneNumber':phone.phoneNumber})\\\">\\n                                            </amexio-button> -->\\n                                    <amexio-button [label]=\\\"'Delete'\\\" [type]=\\\"'red'\\\" [tooltip]=\\\"'delete'\\\" [icon]=\\\"'fa fa-trash'\\\" (onClick)=\\\"onDeleteClick(i)\\\">\\n                                    </amexio-button>\\n                                </amexio-column>\\n                            </amexio-row>\\n                        </amexio-fieldset>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"dynamicFormsReg.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                                </amexio-radio-group>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"dynamicFormsReg.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                                </amexio-checkbox>\\n                            </amexio-column>\\n                        </amexio-row>\\n                    </amexio-form-body>\\n\\n                    <amexio-form-action>\\n                        <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!dynamicEmployeeForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n                        </amexio-button>\\n                    </amexio-form-action>\\n                </amexio-form>\\n\\n\\n                <br>\\n                <b style=\\\"color:green\\\">Form Model Data : </b> {{dynamicEmployeeForm.value | json}}<br>\\n                <!-- <b style=\\\"color:blue\\\">UI Model Data </b>: {{dynamicFormsReg|json}} <br> -->\\n\\n            </amexio-tab>\\n\\n            <amexio-tab title=\\\"Source\\\">\\n                <div style=\\\"overflow-y: scroll\\\">\\n                    <div style=\\\"overflow-y: scroll\\\">\\n                        <amexio-vertical-tab-view>\\n                            <amexio-tab title=\\\"HTML\\\" [active]=\\\"true\\\">\\n                                <ng-container *ngIf=\\\"htmlCode\\\">\\n                                    <!--<clip-copy [htmlCode]=\\\"htmlCode\\\" (onClick)=\\\"onCopyClick()\\\"></clip-copy>-->\\n                                    <prism-block [code]=\\\"htmlCode\\\" [language]=\\\"'html'\\\"></prism-block>\\n                                </ng-container>\\n                            </amexio-tab>\\n                            <amexio-tab title=\\\"Type Script\\\">\\n                                <ng-container *ngIf=\\\"typeScriptCode\\\">\\n                                    <prism-block [code]=\\\"typeScriptCode\\\" [language]=\\\"'typescript'\\\"></prism-block>\\n                                </ng-container>\\n                            </amexio-tab>\\n                        </amexio-vertical-tab-view>\\n                    </div>\\n                </div>\\n\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Live\\\">\\n                <p align=\\\"center\\\">Amexio Sandbox</p>\\n                <b>Simple Reactive Forms With Amexio Inputs Comonents</b>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/simple-reactive-forms-tu9tkf?file=src%2Fapp%2Famexio-reactive-forms%2Famexio-reactive-forms%2Famexio-reactive-forms.component.html\\\" frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n                <br>\\n                <b>Simple Reactive Forms Within Forms</b>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/reactive-forms-within-forms-wxnrvo?embed=1&file=src/app/app.component.ts\\\" frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n                <br>\\n                <b>Simple Reactive Form Group Within Forms</b>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/amexio-reactive-form-group-inside-form-usemf8?embed=1&file=src/app/app.component.ts\\\" frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n            </amexio-tab>\\n        </amexio-tab-view>\\n    </amexio-body>\\n</amexio-card>\"","/**\n * Created by kedar kokil on 22/11/18.\n */\n\nimport { NgModule } from '@angular/core';\nimport { reactiveFormComponent } from './reactiveform.demo.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared.module';\nimport { AmexioWidgetModule } from 'amexio-ng-extensions';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n    {  path:'', component: reactiveFormComponent }\n]\n@NgModule({\n    imports: [CommonModule, FormsModule,HttpClientModule,SharedModule,ReactiveFormsModule,\n        AmexioWidgetModule,RouterModule.forChild(routes),ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'})],\n    exports: [RouterModule],\n    declarations: [reactiveFormComponent],\n    providers: [],\n})\nexport class ReactiveFormComponentModule { }\n"],"sourceRoot":""}