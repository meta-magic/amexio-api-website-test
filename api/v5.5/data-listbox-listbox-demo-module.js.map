{"version":3,"sources":["webpack:///./src/app/data/listbox/listbox.demo.module.ts","webpack:///./src/app/data/listbox/listbox.demo.ts"],"names":[],"mappings":"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","file":"data-listbox-listbox-demo-module.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {ListBoxDemo} from \"./listbox.demo\";\nimport {HttpClientModule} from \"@angular/common/http\";\n/**\n * Created by sagar on 11/1/18.\n */\n@NgModule({\n  declarations: [ListBoxDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: ListBoxDemo, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class ListBoxDemoModule {\n\n}\n","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'listbox-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n         List Box\n      </amexio-header>\n      <amexio-body>\n        <p>Simple list box which allows user to select one of more items from list based on configuration. User can\n          provide custom template to change look and feel and with context menu(right click operation).</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n              <amexio-column size=\"12\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Simple List Box\n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-listbox [enable-checkbox]=\"true\" [height]=\"400\"\n                                    [header]=\"'Contacts'\" [search-placeholder]=\"'Search Contacts'\"\n                                    [data]=\"localData\" [filter]=\"true\"\n                                    [data-reader]=\"'response.data'\"\n                                    [display-field]=\"'name_official'\" (selectedRows)=\"getSelectedData($event)\">\n                    </amexio-listbox>\n                    <p>\n                      <b>selected data</b> : {{selectedData | json}}\n                    </p>\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n            </amexio-row>\n            <amexio-row>\n              <amexio-column size=\"12\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     List Box with Template\n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-listbox [height]=\"400\" [header]=\"'Contacts'\" [search-placeholder]=\"'Search Contacts'\"\n                                    [data]=\"localData\" [filter]=\"false\"\n                                    [data-reader]=\"'response.data'\"\n                                    [display-field]=\"'name'\" (onRowClick)=\"onRowClick($event)\">\n                      <ng-template #amexioBodyTmpl let-row=\"row\">\n                        <amexio-row>\n                          <amexio-column [size]=\"1\">\n                              <amexio-image [c-class]=\"'around-image'\" height=\"50px\" width=\"50px\" path=\"assets/images/profile/{{row.profile}}\"></amexio-image>\n                          </amexio-column>\n                          <amexio-column [size]=\"11\">\n                            {{row.name}}\n                          </amexio-column>\n                        </amexio-row>\n                      </ng-template>\n                    </amexio-listbox>\n                   <!-- <p>\n                      <b>clicked record data</b> : {{onRowClickData | json}}\n                    </p>-->\n\n                    <amexio-row>\n                    <amexio-column [size]=\"5\">\n                      <amexio-listbox [height]=\"360\" [data]=\"projectData\" [filter]=\"false\" [header]=\"'Project'\" [enable-checkbox]=\"false\" [data-reader]=\"'response.data'\"\n                        [display-field]=\"'name'\">\n                        <ng-template #amexioBodyTmpl let-row=\"row\">\n                          <amexio-row>\n                            <amexio-column [size]=\"5\">\n                              <amexio-label size=\"small\">\n                                {{row.name}}\n                              </amexio-label>\n                            </amexio-column>\n                            <amexio-column [size]=\"3\">\n          \n                            </amexio-column>\n                            <amexio-column [size]=\"4\">\n          \n                              <a [ngClass]=\"{'listbox-StatusYellow': row.status == 'Pending', 'listbox-StatusGreen' : row.status == 'Finished','listbox-StatusRed'  : row.status == 'Rejected'}\">\n                                {{row.status}}\n                              </a>\n                            </amexio-column>\n                          </amexio-row>\n                        </ng-template>\n                      </amexio-listbox>\n                    </amexio-column>\n                    <amexio-column [size]=\"7\">\n                      <amexio-listbox [height]=\"400\" [data]=\"browserData\" [filter]=\"false\" [header]=\"'Browser Stats'\" [enable-checkbox]=\"false\"\n                        [data-reader]=\"'response.data'\" [display-field]=\"'name'\">\n                        <ng-template #amexioBodyTmpl let-row=\"row\">\n                          <amexio-row>\n                            <amexio-column [size]=\"4\">\n                              <span>\n          \n                                <amexio-image [path]=\"'assets/images/'+row.icon\" [c-class]=\"'image-round'\">\n                                </amexio-image>\n          \n                              </span>\n          \n                            </amexio-column>\n                            <amexio-column [size]=\"6\">\n                              <amexio-label size=\"small\">\n                                {{row.name}}\n                              </amexio-label>\n                            </amexio-column>\n                            <amexio-column [size]=\"2\">\n                              <amexio-label size=\"small\" font-color=\"grey\">\n                                {{row.usage}}\n                              </amexio-label>\n          \n                            </amexio-column>\n                          </amexio-row>\n                        </ng-template>\n                      </amexio-listbox>\n                    </amexio-column>\n                  </amexio-row>\n\n\n                  </amexio-body>\n                </amexio-card>\n\n              </amexio-column>\n            </amexio-row>\n\n            <amexio-row>\n            <amexio-column size=\"12\">\n              <amexio-card [header]=\"true\">\n                <amexio-header>\n                   List Box With Context Menu\n                </amexio-header>\n                <amexio-body>\n                  <amexio-listbox [enable-checkbox]=\"true\" [height]=\"400\"\n                                  [header]=\"'Contacts'\" [search-placeholder]=\"'Search Contacts'\"\n                                  [data]=\"localData\" [filter]=\"true\"\n                                  [data-reader]=\"'response.data'\" [context-menu]=\"contextMenuData\"\n                                  [display-field]=\"'name_official'\" (selectedRows)=\"getSelectedData($event)\">\n                  </amexio-listbox>\n                </amexio-body>\n              </amexio-card>\n            </amexio-column>\n          </amexio-row>\n\n             \n\n               </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties<amexio-listbox>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/listbox.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"20\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Version'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"45\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/listbox.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [width]=\"20\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"70\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n          <p align=\"center\">Amexio Sandbox</p>\n          <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-listbox?embed=1&file=app/data/listbox/listbox.demo.html&view=editor\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n  `,\n  styles:[\n    `\n    .listbox-StatusYellow {\n      background-color: yellow;\n    }\n    .listbox-StatusGreen  {\n      background-color: green;\n     }\n    .listbox-StatusRed {\n      background-color: red;\n  }\n  \n.red {\n    color: red!important;\n   \n}\n.green {\n    color: green!important;\n   \n}\n.yellow {\n    color: yellow!important;\n    \n}\n.template-progressBar .progress{\n  height:5px !important;\n}  \n`\n  ]\n})\nexport class ListBoxDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  localData: any;\n  onRowClickData: any;\n  selectedData: any;\n  progressType: string;\n  actionWindowFlag: boolean;\n  projectData: any;\n  browserData: any;\n  contextMenuData: any;\n  constructor(private http: HttpClient) {\n    this.contextMenuData =\n    [{ \"text\": \"Add New\", \"icon\": \"fa fa-arrows\", \"disabled\": true },\n    { \"text\": \"Edit\", \"icon\": \"\", \"seperator\": true }\n        , { \"text\": \"Send data in email\", \"icon\": \"\" }];\n\n    this.getHtmlAndTypeScriptCode();\n    this.localData = {\"response\": {\n      \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n        {\n          \"name\": \"Buck Kulkarni\",\n          \"name_official\": \"Buck Kulkarni\",\n          \"profile\": \"buck.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"Araf Karsh Hamid\",\n          \"name_official\": \"Araf Karsh Hamid\",\n          \"profile\": \"karsh.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"ketan Gote\",\n          \"name_official\": \"Ketan Gote\",\n          \"profile\": \"ketan.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n\n        {\n          \"name\": \"Dattaram Gawas\",\n          \"name_official\": \"Dattaram Gawas\",\n          \"profile\": \"dats.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"Sagar Jadhav\",\n          \"name_official\": \"Sagar Jadhav\",\n          \"profile\": \"sagar.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n      \n        {\n          \"name\": \"Rashmi Thakkar\",\n          \"name_official\": \"Rashmi Thakkar\",\n          \"profile\": \"rashmi.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"Deepali Arvind\",\n          \"name_official\": \"Deepali Arvind\",\n          \"profile\": \"dipali.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"Ashwini Agre\",\n          \"name_official\": \"Ashwini Agre\",\n          \"profile\": \"ashwini.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        }\n      ]\n    }};\n\n    this.projectData = {\n      \"response\": {\n        \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n          {\n            \"name\": \"Admin Template\t\",\n            \"status\": \" 65%\"\n          },\n          {\n            \"name\": \"Landing Page\",\n            \"status\": \"Finished\"\n          },\n          {\n            \"name\": \"Backend UI\t\",\n            \"status\": \"Rejected\"\n          },\n          {\n            \"name\": \"Personal Blog\",\n            \"status\": \"40%\"\n          },\n          {\n            \"name\": \"E-mail Templates\t\",\n            \"status\": \"13%\"\n          },\n          {\n            \"name\": \"Corporate Website\",\n            \"status\": \"Pending\"\n          }\n        ]\n      }\n    }\n    this.browserData = {\n      \"response\": {\n        \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n          {\n            \"name\": \"Google Chrome\",\n            \"usage\": \"23%\",\n            \"icon\": \"GoogleChrome.jpg \"\n          },\n          {\n            \"name\": \"Mozila Firefox\",\n            \"usage\": \"15%\",\n            \"icon\": \"MozilaFirefox.png \"\n          },\n          {\n            \"name\": \"Apple Safari\",\n            \"usage\": \"7%\",\n            \"icon\": \"AppleSafari.png \"\n          },\n          {\n            \"name\": \"Internet Explorer\",\n            \"usage\": \"9%\",\n            \"icon\": \"InternetExplorer.jpeg\"\n          },\n          {\n            \"name\": \"Opera mini\",\n            \"usage\": \"20%\",\n            \"icon\": \"Operamini.jpg\"\n          },\n          {\n            \"name\": \"Microsoft edge\",\n            \"usage\": \"9%\",\n            \"icon\": \"Microsoftedge.jpg\"\n          }\n        ]\n      }\n    }\n\n\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/data/listbox/listbox.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/data/listbox/listbox.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  onRowClick(data: any) {\n    this.onRowClickData = data;\n  }\n\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n\n}\n"],"sourceRoot":""}