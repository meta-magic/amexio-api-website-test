{"version":3,"sources":["webpack:///./src/app/data/gridwithtoolbar/gridwithtoolbar.demo.module.ts","webpack:///./src/app/data/gridwithtoolbar/gridwithtoolbar.demo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAuC;AACM;AACW;AAEb;AACE;AACI;AACU;AACL;AACtD;;GAEG;AAQH;IAAA;IAEA,CAAC;IAFY,yBAAyB;QAPrC,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,yEAAmB,CAAC;YACnC,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,qEAAgB,EAAC,2DAAY,EAAE,uEAAkB,EAAE,4DAAY,CAAC,QAAQ,CAAC,CAAC;wBAC7G,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yEAAmB,EAAE,SAAS,EAAE,MAAM;qBAC5D,CAAC,CAAC,CAAC;YACJ,SAAS,EAAE,EAAE;SACd,CAAC;OACW,yBAAyB,CAErC;IAAD,gCAAC;CAAA;AAFqC;;;;;;;;;;;;;ACnBtC;AAAA;AAAA;AAAA;AAAA;;GAEG;;;;;;;;;;AAEqC;AACQ;AAoHhD;IAME,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,kCAAkC;IAClC,sDAAwB,GAAxB;QAAA,iBA2BC;QA1BC,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAe,CAAC;QAEpB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4DAA4D,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/G,YAAY,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4DAA4D,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/G,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wCAAwC,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3F,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,sDAAsD;IACtD,yCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,6CAAe,GAAf,UAAgB,IAAS;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IApDU,mBAAmB;QAlH/B,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB,EAAE,QAAQ,EAAE,6+QA+G3C;SACF,CAAC;yCAO0B,+DAAU;OANzB,mBAAmB,CAqD/B;IAAD,0BAAC;CAAA;AArD+B","file":"data-gridwithtoolbar-gridwithtoolbar-demo-module.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {HttpModule} from \"@angular/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {GridWithToolBarDemo} from \"./gridwithtoolbar.demo\";\nimport {HttpClientModule} from \"@angular/common/http\";\n/**\n * Created by kedar on 17/10/18.\n */\n@NgModule({\n  declarations: [GridWithToolBarDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: GridWithToolBarDemo, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class GridWithToolBarDemoModule {\n\n}\n","/**\n * Created by kedar on 17/10/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'gridwithtoolbar-demo', template: `\n  <amexio-card header=\"true\">\n    <amexio-header>\n    Grid with Toolbar\n    </amexio-header>\n    <amexio-body>\n        <p>Grid with Toolbar contains toolbar at header of Data grid component and it renders large amount of data-set with various options like sorting in ascending or descending\n            order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering\n            for column header and column data, displaying summation of numeric column.</p>\n        <amexio-tab-view>\n            <amexio-tab title=\"Demo\" active=\"true\">\n                <amexio-row>\n                    <amexio-column size=\"12\">\n                        <amexio-card [header]=\"true\">\n                            <amexio-header>\n                                Grid with Toolbar\n                            </amexio-header>\n                            <amexio-body>\n                                <amexio-datagrid [enable-column-fiter]=\"true\" title=\" Grid with Toolbar \" [enable-checkbox]=\"false\" [http-method]=\"'get'\" [http-url]=\"'assets/data/componentdata/country.json'\"\n                                    [data-reader]=\"'data'\" [page-size]=\"10\">\n                                    <amexio-datagrid-header>\n                                        <amexio-drop-down-menu [icon-align]=\"'left'\" [title]=\"'Country Currency '\" [padding]=\"'5px 10px'\" [icon]=\"'fa fa-empire'\">\n                                            <amexio-drop-down-menu-item [label]=\"'India'\" [icon]=\"'fa fa-inr'\">\n                                            </amexio-drop-down-menu-item>\n                                            <amexio-drop-down-menu-item [label]=\"'Russia'\" [icon]=\"'fa fa-rouble'\" [separator]=\"true\">\n                                            </amexio-drop-down-menu-item>\n                                            <amexio-drop-down-menu-item [label]=\"'Japan'\" [icon]=\"'fa fa-cny'\">\n                                            </amexio-drop-down-menu-item>\n                                            <amexio-drop-down-menu-item [label]=\"'United States'\" [icon]=\"'fa fa-dollar'\">\n                                            </amexio-drop-down-menu-item>\n                                        </amexio-drop-down-menu>\n                                        <amexio-label size=\"small\">\n                                            My Drive\n                                        </amexio-label>\n                                       <amexio-image aria-hidden=\"true\" [icon-class]=\"'fa fa-info-circle'\"> </amexio-image>\n                                        \n                                    </amexio-datagrid-header>\n                                    <amexio-data-table-column [data-index]=\"'countryName'\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Name'\" (selectedRowData)=\"getSelectedData($event)\">\n                                    </amexio-data-table-column>\n                                    <amexio-data-table-column [sort]=\"false\" [data-index]=\"'countryCode1'\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Code'\"></amexio-data-table-column>\n                                    <amexio-data-table-column [data-index]=\"'currencyName'\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Currency'\"></amexio-data-table-column>\n                                </amexio-datagrid>\n                            </amexio-body>\n                        </amexio-card>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-tab>\n\n\n            <amexio-tab title=\"API Reference\">\n                <amexio-datagrid title=\"Properties<amexio-datagrid>\" [enable-column-fiter]=\"false\" [http-method]=\"'get'\" [http-url]=\"'assets/apireference/data/grid.json'\"\n                    [data-reader]=\"'properties'\" [enable-data-filter]=\"false\">\n                    <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Name'\">\n                        <ng-template #amexioBodyTmpl let-column let-row=\"row\">\n                            <ng-container *ngIf=\"row.deprecated\">\n                                <div style=\"text-decoration: line-through red;\">{{row.name}}</div>\n                            </ng-container>\n                            <ng-container *ngIf=\"!row.deprecated\">\n                                {{row.name}}\n                            </ng-container>\n                        </ng-template>\n                    </amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Type'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Default'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Description'\"></amexio-data-table-column>\n                </amexio-datagrid>\n                <br>\n                <amexio-datagrid title=\"Column Properties <amexio-data-table-colum>\" [enable-column-fiter]=\"false\" [http-method]=\"'get'\" [http-url]=\"'assets/apireference/data/grid.json'\"\n                    [data-reader]=\"'columnProperties'\" [enable-data-filter]=\"false\">\n                    <amexio-data-table-column [data-index]=\"'name'\" [width]=\"15\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Name'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Type'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Default'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Description'\"></amexio-data-table-column>\n                </amexio-datagrid>\n                <br>\n                <amexio-datagrid title=\"Events\" [http-method]=\"'get'\" [http-url]=\"'assets/apireference/data/grid.json'\" [data-reader]=\"'events'\"\n                    [enable-data-filter]=\"false\">\n                    <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Name'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Description'\"></amexio-data-table-column>\n                </amexio-datagrid>\n\n            </amexio-tab>\n            <amexio-tab title=\"Source\">\n                <div style=\"overflow-y: scroll\">\n                    <amexio-vertical-tab-view>\n                        <amexio-tab title=\"HTML\" [active]=\"true\">\n                            <ng-container *ngIf=\"htmlCode\">\n                                <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                                <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                            </ng-container>\n                        </amexio-tab>\n                        <amexio-tab title=\"Type Script\">\n                            <ng-container *ngIf=\"typeScriptCode\">\n                                <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                            </ng-container>\n                        </amexio-tab>\n                        <amexio-tab title=\"DataSource\">\n                            <ng-container *ngIf=\"dataSource\">\n                                <prism-block [code]=\"dataSource\" [language]=\"'json'\"></prism-block>\n                            </ng-container>\n                        </amexio-tab>\n                    </amexio-vertical-tab-view>\n                </div>\n            </amexio-tab>\n            <amexio-tab title=\"Live\">\n                <p align=\"center\">Amexio Sandbox</p>\n                <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-grid-with-toolbar?embed=1&file=app/grid/gridwithtoolbar/gridwithtoolbar.demo.html&view=editor\"></iframe>\n            </amexio-tab>\n        </amexio-tab-view>\n    </amexio-body>\n</amexio-card>\n  `\n})\nexport class GridWithToolBarDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource: string;\n  copyMsgArray: any[];\n  selectedData: any;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/data/gridwithtoolbar/gridwithtoolbar.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/data/gridwithtoolbar/gridwithtoolbar.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n    this.http.get('assets/data/componentdata/country.json',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.dataSource = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n"],"sourceRoot":""}