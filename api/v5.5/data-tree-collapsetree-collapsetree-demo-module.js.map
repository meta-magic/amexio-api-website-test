{"version":3,"sources":["webpack:///./src/app/data/tree/collapsetree/collapsetree.demo.module.ts","webpack:///./src/app/data/tree/collapsetree/collapsetree.demo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AAC8B;AAChC;AACE;AACO;AACC;AACC;AAExD;;GAEG;AAQH;IAAA;IAEA,CAAC;IAFY,sBAAsB;QAPlC,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mEAAgB,CAAC;YAChC,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,qEAAgB,EAAE,2DAAY,EAAE,uEAAkB,EAAE,4DAAY,CAAC,QAAQ,CAAC,CAAC;wBAC9G,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAgB,EAAE,SAAS,EAAE,MAAM;qBACzD,CAAC,CAAC,CAAC;YACJ,SAAS,EAAE,CAAC,sEAAiB,CAAC;SAC/B,CAAC;OACW,sBAAsB,CAElC;IAAD,6BAAC;CAAA;AAFkC;;;;;;;;;;;;;ACnBnC;AAAA;AAAA;AAAA;AAAA;;GAEG;;;;;;;;;;AAEmD;AACJ;AAqGlD;IAuBE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAb7B,SAAI,GAAW,aAAa,CAAC;QACpC,WAAM,GAAY,IAAI,CAAC;QAarB,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAGhC,IAAI,CAAC,mBAAmB,GAAG;YACzB,MAAM,EAAE,CAAC;oBACP,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE;wBACV;4BACE,MAAM,EAAE,KAAK;4BACb,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,gBAAgB;iCACzB;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,QAAQ;4BAChB,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,WAAW;iCACpB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,UAAU;iCACnB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,UAAU;iCACnB;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,WAAW;4BACnB,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,gBAAgB;iCACzB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,cAAc;iCACvB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,aAAa;oCACrB,QAAQ,EAAE,IAAI;oCACd,UAAU,EAAE,EAAE;oCACd,MAAM,EAAE;wCACN,UAAU,EAAE,oBAAoB;wCAChC,aAAa,EAAE,KAAK;qCACrB;iCACF;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,MAAM;4BACd,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,KAAK;oCACb,QAAQ,EAAE,IAAI;oCACd,UAAU,EAAE;wCACV;4CACE,MAAM,EAAE,IAAI;4CACZ,MAAM,EAAE,iBAAiB;yCAC1B;wCACD;4CACE,MAAM,EAAE,IAAI;4CACZ,MAAM,EAAE,wBAAwB;yCACjC;qCAEF;iCACF;6BACF;yBACF;qBACF;iBACF,CAAC;SACH,CAAC;IACJ,CAAC;IA/FD,wCAAa,GAAb,UAAc,EAAE;QACd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,SAAS,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,GAAG,aAAa;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,WAAW,EAAE,CAAC;YACjB,IAAI,CAAC,IAAI,GAAG,YAAY;QAC1B,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;IAwFD,sCAAW,GAAX,UAAY,IAAS;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IACD,2CAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,kCAAkC;IAClC,mDAAwB,GAAxB;QAAA,iBAoBC;QAnBC,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAe,CAAC;QAEpB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2DAA2D,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjH,YAAY,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2DAA2D,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjH,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,sDAAsD;IACtD,sCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACnE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IApJU,gBAAgB;QAlG5B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB,EAAE,QAAQ,EAAE,8jNA+FxC;SACF,CAAC;yCAwB0B,+DAAU;OAvBzB,gBAAgB,CAqJ5B;IAAD,uBAAC;CAAA;AArJ4B","file":"data-tree-collapsetree-collapsetree-demo-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { AmexioWidgetModule, IconLoaderService } from \"amexio-ng-extensions\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { SharedModule } from \"../../../shared.module\";\nimport { CollapseTreeDemo } from \"./collapsetree.demo\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n/**\n * Created by  kedar  on 05/9/18.\n */\n@NgModule({\n  declarations: [CollapseTreeDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule, SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: CollapseTreeDemo, pathMatch: 'full'\n  }])],\n  providers: [IconLoaderService]\n})\nexport class CollapseTreeDemoModule {\n\n}\n","/**\n * Created by sagar on 9/1/18.\n */\n\nimport { Component, ElementRef } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { AmexioTreeViewComponent } from 'amexio-ng-extensions';\n\n@Component({\n  selector: 'collapsetree-demo', template: `\n  <amexio-card header=\"true\">\n    <amexio-header>\n    Collapseable and Expandable Tree\n    </amexio-header>\n    <amexio-body>\n        <p>A Collapse and Expandable Tree component which create Tree View based on standard datasource attached.</p>\n        <amexio-tab-view>\n            <amexio-tab title=\"Demo\" active=\"true\">\n                <amexio-row>\n                    <amexio-column size=\"6\">\n                        <amexio-card [header]=\"true\" [footer]=\"true\" [footer-align]=\"'right'\">\n                            <amexio-header style=\"width:100%\">\n                            <amexio-toolbar>\n                            <amexio-toolbar-item position-left >\n                            <amexio-image [ngClass]=\"text\" (click)=\"expandAlldata(id)\">\n                                 </amexio-image>\n                            </amexio-toolbar-item>\n                            <amexio-toolbar-item position-left >\n                             <label style=\"margin-top: 0px; font-size: 18px\">\n                             &nbsp;  &nbsp; Expand all and collapse all function\n                             </label>\n                            </amexio-toolbar-item>\n                            </amexio-toolbar>\n                                \n                            </amexio-header>\n                            <amexio-body>\n                                <amexio-treeview #id [data-reader]=\"'item'\" [data]=\"treeLocalExpandData\" (nodeClick)=\"getNodeDataClick($event)\">\n                                </amexio-treeview>\n                            </amexio-body>\n                            <amexio-action>\n                                </amexio-action>\n                        </amexio-card>\n                    </amexio-column>\n                    <amexio-column size=\"6\" [fit]='true'>\n                        <amexio-card [header]=\"true\">\n                            <amexio-header>\n                                Selected Data\n                            </amexio-header>\n                            <amexio-body>\n                                <pre><code>{{expandSelectedData | json}}</code></pre>\n                            </amexio-body>\n                        </amexio-card>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-tab>\n\n            <amexio-tab title=\"API Reference\">\n                <amexio-datagrid title=\"Properties<amexio-treeview>\" [enable-column-fiter]=\"false\" [http-method]=\"'get'\" [http-url]=\"'assets/apireference/data/tree.json'\"\n                    [data-reader]=\"'properties'\" [enable-data-filter]=\"false\">\n                    <amexio-data-table-column [data-index]=\"'name'\" [width]=\"22\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Name'\"></amexio-data-table-column>\n                    <amexio-data-table-column [width]=\"15\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'version'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Type'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Default'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'description'\" [width]=\"55\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Description'\"></amexio-data-table-column>\n                </amexio-datagrid>\n                <br>\n                <amexio-datagrid title=\"Events\" [http-method]=\"'get'\" [http-url]=\"'assets/apireference/data/tree.json'\" [data-reader]=\"'events'\"\n                    [enable-data-filter]=\"false\">\n                    <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Name'\"></amexio-data-table-column>\n                    <amexio-data-table-column [width]=\"15\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Version'\"></amexio-data-table-column>\n                    <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Description'\"></amexio-data-table-column>\n                </amexio-datagrid>\n                <amexio-datagrid title=\"Methods\" [http-method]=\"'get'\" [http-url]=\"'assets/apireference/data/tree.json'\" [data-reader]=\"'methods'\"\n                [enable-data-filter]=\"false\">\n                <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Name'\"></amexio-data-table-column>\n                <amexio-data-table-column [width]=\"15\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Version'\"></amexio-data-table-column>\n                <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\" [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            </amexio-tab>\n            <amexio-tab title=\"Source\">\n                <div style=\"overflow-y: scroll\">\n                    <amexio-vertical-tab-view>\n                        <amexio-tab title=\"HTML\" [active]=\"true\">\n                            <ng-container *ngIf=\"htmlCode\">\n                                <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                                <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                            </ng-container>\n                        </amexio-tab>\n                        <amexio-tab title=\"Type Script\">\n                            <ng-container *ngIf=\"typeScriptCode\">\n                                <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                            </ng-container>\n                        </amexio-tab>\n                    </amexio-vertical-tab-view>\n                </div>\n            </amexio-tab>\n            <amexio-tab title=\"Live\">\n                <p align=\"center\">Amexio Sandbox</p>\n                <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-collapseble-tree?embed=1&file=app/collapsetree/simpletree/simpletree.demo.html&view=editor\"\n                    frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n            </amexio-tab>\n        </amexio-tab-view>\n    </amexio-body>\n</amexio-card>\n  `\n})\nexport class CollapseTreeDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource: string;\n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  treeLocalExpandData: any;\n  expandSelectedData: any;\n\n  public text: string = \"fa fa-minus\";\n  expand: boolean = true;\n\n  expandAlldata(id) {\n    if (!this.expand) {\n      id.expandAll();\n      this.text = \"fa fa-minus\"\n    } else {\n      id.collapseAll();\n      this.text = \"fa fa-plus\"\n    }\n    this.expand = !this.expand;\n  }\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n\n\n    this.treeLocalExpandData = {\n      \"item\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\": true,\n                \"children\": [],\n                \"lazy\": {\n                  \"http-url\": \"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n  getNodeDataClick(data: any) {\n    this.expandSelectedData = data;\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/data/tree/collapsetree/collapsetree.html', { responseType: 'text' }).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/data/tree/collapsetree/collapsetree.text', { responseType: 'text' }).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n}\n"],"sourceRoot":""}