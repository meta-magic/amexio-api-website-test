{"version":3,"sources":["webpack:///./src/app/forms/text/text.demo.component.html","webpack:///./src/app/forms/text/text.demo.module.ts","webpack:///./src/app/forms/text/text.demo.ts"],"names":[],"mappings":";;;;;;;;;AAAA,ivPAAivP,yV;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5sP;AACE;AACM;AACW;AACb;AACE;AACI;AACK;AACtD;;GAEG;AAQH;IAAA;IAEA,CAAC;IAFY,cAAc;QAP1B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mDAAQ,CAAC;YACxB,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,qEAAgB,EAAC,2DAAY,EAAE,uEAAkB,EAAE,4DAAY,CAAC,QAAQ,CAAC,CAAC;wBAC7G,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAQ,EAAE,SAAS,EAAE,MAAM;qBACjD,CAAC,CAAC,CAAC;YACJ,SAAS,EAAE,EAAE;SACd,CAAC;OACW,cAAc,CAE1B;IAAD,qBAAC;CAAA;AAF0B;;;;;;;;;;;;;AClB3B;AAAA;AAAA;AAAA;AAAA;;GAEG;;;;;;;;;;AAEqC;AACQ;AAMhD;IAKE,kBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,kCAAkC;IAClC,2CAAwB,GAAxB;QAAA,iBAoBC;QAnBC,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAc,CAAC;QAEnB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/F,YAAY,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/F,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,sDAAsD;IACtD,8BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAxCU,QAAQ;QAJpB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;SAEtB,CAAC;yCAM0B,+DAAU;OALzB,QAAQ,CAyCpB;IAAD,eAAC;CAAA;AAzCoB","file":"forms-text-text-demo-module.js","sourcesContent":["module.exports = \"<amexio-card header=\\\"true\\\">\\n    <amexio-header>\\n        Text Input\\n    </amexio-header>\\n    <amexio-body>\\n        <p>Text input component has been created with different configurable attributes for validation (min/max length, allow blank, custom regex), custom error message, help, custom styles.</p>\\n        <amexio-tab-view>\\n            <amexio-tab title=\\\"Demo\\\" active=\\\"true\\\">\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-card header=\\\"true\\\">\\n                            <amexio-header>\\n                                Basic Text Field\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-text-input field-label=\\\"Name\\\" name=\\\"name\\\" place-holder=\\\"Enter name\\\" icon-feedback=\\\"true\\\"></amexio-text-input>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Input Without Label & Icon feedback\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-text-input name=\\\"name\\\" place-holder=\\\"Enter name\\\" has-label=\\\"false\\\"></amexio-text-input>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Min/Max Validations\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-text-input enable-popover=\\\"true\\\" [enable-popover]=\\\"true\\\" field-label=\\\"Name\\\" name=\\\"name\\\" place-holder=\\\"Enter name\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please Enter Name\\\" [min-length]=\\\"1\\\" min-error-msg=\\\"Minimum 1 Char Required\\\" [max-length]=\\\"10\\\"\\n                                    max-error-msg=\\\"Maximum 10 Char Allowed\\\" [icon-feedback]=\\\"true\\\"></amexio-text-input>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Disabled Text Field\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-text-input name=\\\"name\\\" field-label=\\\"Name\\\" place-holder=\\\"Enter name\\\" disabled=\\\"true\\\"></amexio-text-input>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-card header=\\\"true\\\">\\n                            <amexio-header>\\n                                Font Styling\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-text-input field-label=\\\"Name\\\" name=\\\"name\\\" place-holder=\\\"Enter name\\\" icon-feedback=\\\"true\\\" font-style=\\\"italic\\\"></amexio-text-input>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-card header=\\\"true\\\">\\n                            <amexio-header>\\n                                Font Size & Family Styling\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-text-input [field-label]=\\\"'Name'\\\" name=\\\"name\\\" [place-holder]=\\\"'Enter name'\\\" [icon-feedback]=\\\"false\\\" [font-size]=\\\"'large'\\\"></amexio-text-input>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Input with Pattern\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-text-input name=\\\"name\\\" [field-label]=\\\"'Name'\\\" [place-holder]=\\\"'Enter name'\\\" [pattern]=\\\"'[a-z]'\\\" [icon-feedback]=\\\"true\\\"></amexio-text-input>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-tab>\\n\\n\\n\\n\\n\\n\\n\\n            <amexio-tab title=\\\"API Reference\\\">\\n                <amexio-datagrid title=\\\"Properties <amexio-textinput>\\\" [enable-column-fiter]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/forms/textinput.json'\\\" [data-reader]=\\\"'properties'\\\" [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"10\\\" [data-index]=\\\"'type'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Type'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"10\\\" [data-index]=\\\"'default'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Default'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"65\\\" [data-index]=\\\"'description'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n                <br>\\n                <amexio-datagrid title=\\\"Events <amexio-textinput>\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/forms/textinput.json'\\\" [data-reader]=\\\"'events'\\\" [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [width]=\\\"20\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"80\\\" [data-index]=\\\"'description'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Source\\\">\\n                <div style=\\\"overflow-y: scroll\\\">\\n                    <amexio-vertical-tab-view>\\n                        <amexio-tab title=\\\"HTML\\\" [active]=\\\"true\\\">\\n                            <ng-container *ngIf=\\\"htmlCode\\\">\\n                                <!--<clip-copy [htmlCode]=\\\"htmlCode\\\" (onClick)=\\\"onCopyClick()\\\"></clip-copy>-->\\n                                <prism-block [code]=\\\"htmlCode\\\" [language]=\\\"'html'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                        <amexio-tab title=\\\"Type Script\\\">\\n                            <ng-container *ngIf=\\\"typeScriptCode\\\">\\n                                <prism-block [code]=\\\"typeScriptCode\\\" [language]=\\\"'typescript'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                    </amexio-vertical-tab-view>\\n                </div>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Live\\\">\\n                <p align=\\\"center\\\">Amexio Sandbox</p>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/amexio-v4-textinput?embed=1&file=app/forms/text/text.demo.html\\\" frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n            </amexio-tab>\\n        </amexio-tab-view>\\n    </amexio-body>\\n</amexio-card>\\n<!--<amexio-notification [data]=\\\"copyMsgArray\\\"></amexio-notification>-->\"","import {TextDemo} from \"./text.demo\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {HttpClientModule} from \"@angular/common/http\";\n/**\n * Created by sagar on 11/1/18.\n */\n@NgModule({\n  declarations: [TextDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: TextDemo, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class TextDemoModule {\n\n}\n","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'text-demo',\n   templateUrl: './text.demo.component.html'\n})\nexport class TextDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs:any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/forms/textinput/form.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/forms/textinput/form.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n"],"sourceRoot":""}