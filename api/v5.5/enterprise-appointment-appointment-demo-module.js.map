{"version":3,"sources":["webpack:///./src/app/enterprise/appointment/appointment.component.html","webpack:///./src/app/enterprise/appointment/appointment.component.ts","webpack:///./src/app/enterprise/appointment/appointment.demo.module.ts"],"names":[],"mappings":"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","file":"enterprise-appointment-appointment-demo-module.js","sourcesContent":["module.exports = \"<amexio-card header=\\\"true\\\">\\n    <amexio-header>\\n        Appointment\\n    </amexio-header>\\n    <amexio-body>\\n        <p>An appointment component used to schedule appointment with available dates and time.</p>\\n        <amexio-tab-view>\\n            <amexio-tab title=\\\"Demo\\\" active=\\\"true\\\">\\n                <amexio-card header=\\\"true\\\">\\n                    <amexio-header> Appointment Demo: Single Select Date </amexio-header>\\n                    <amexio-body>\\n                        <amexio-ee-appointment [height]=\\\"'200px'\\\" [date]=\\\"date\\\" (onSingleSelect)=\\\"onSingleSelect($event)\\\" [start-time]=\\\"10\\\" [end-time]=\\\"15\\\"\\n                            [available-slots]=\\\"availableslots\\\">\\n                        </amexio-ee-appointment>\\n                    </amexio-body>\\n                </amexio-card>\\n                <amexio-card header=\\\"true\\\">\\n                    <amexio-header> Selected Date-Time </amexio-header>\\n                    <amexio-body>\\n                        <pre><code>{{singleSelectedData | json}}</code></pre>\\n                    </amexio-body>\\n                </amexio-card>\\n                <br>\\n                <amexio-card header=\\\"true\\\">\\n                    <amexio-header> Appointment Demo: Multi Select Date </amexio-header>\\n                    <amexio-body>\\n                        <amexio-ee-appointment [height]=\\\"'200px'\\\" [date]=\\\"date\\\" [multi-select]=\\\"true\\\" (onMultiSelect)=\\\"onMultiSelect($event)\\\" [start-time]=\\\"12\\\"\\n                            [end-time]=\\\"17\\\" [available-slots]=\\\"multipleAvailableslots\\\">\\n                        </amexio-ee-appointment>\\n                    </amexio-body>\\n                </amexio-card>\\n                <amexio-card header=\\\"true\\\">\\n                    <amexio-header> Selected Date-Time </amexio-header>\\n                    <amexio-body>\\n                        <pre><code>{{multiSelectedData | json}}</code></pre>\\n                    </amexio-body>\\n                </amexio-card>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"API Reference\\\">\\n                <amexio-datagrid title=\\\"Properties<amexio-ee-appointment>\\\" [enable-column-fiter]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/enterprise/appointment.json'\\\"\\n                    [data-reader]=\\\"'properties'\\\" [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'version'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'version'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'type'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Type'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'default'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Default'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"40\\\" [data-index]=\\\"'description'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n                <br>\\n                <amexio-datagrid title=\\\"Events\\\" [enable-column-fiter]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/enterprise/appointment.json'\\\"\\n                    [data-reader]=\\\"'events'\\\" [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'version'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'version'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"65\\\" [data-index]=\\\"'description'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Source\\\">\\n                <div style=\\\"overflow-y: scroll\\\">\\n                    <amexio-vertical-tab-view>\\n                        <amexio-tab title=\\\"HTML\\\" [active]=\\\"true\\\">\\n                            <ng-container *ngIf=\\\"htmlCode\\\">\\n                                <!--<clip-copy [htmlCode]=\\\"htmlCode\\\" (onClick)=\\\"onCopyClick()\\\"></clip-copy>-->\\n                                <prism-block [code]=\\\"htmlCode\\\" [language]=\\\"'html'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                        <amexio-tab title=\\\"Type Script\\\">\\n                            <ng-container *ngIf=\\\"typeScriptCode\\\">\\n                                <prism-block [code]=\\\"typeScriptCode\\\" [language]=\\\"'typescript'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                    </amexio-vertical-tab-view>\\n                </div>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Live\\\">\\n                <p align=\\\"center\\\">Amexio Sandbox</p>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/amexio-v4-appointment1?embed=1&file=app/enterprise/appointment/appointment.demo.html&view=editor\\\" frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n             </amexio-tab>\\n        </amexio-tab-view>\\n    </amexio-body>\\n</amexio-card>\"","/**\n * Created by pratik on 18/1/18.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport { AvailableSlotsModel } from 'amexio-ng-extensions';\n\n@Component({\n  selector: 'ee-appointment', templateUrl: 'appointment.component.html'\n})\n\nexport class EEAppointmentDemoComponent implements OnInit {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  date =  new Date();\n  availableslots: AvailableSlotsModel[];\n  multipleAvailableslots: AvailableSlotsModel[];\n  singleSelectedData: any;\n  multiSelectedData: any;\n\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n    const atr = [10,12];\n    const atr_1 = [13,15];\n\n    this.availableslots = [];\n    this.availableslots.push(new AvailableSlotsModel(new Date(),atr));\n    this.availableslots.push(new AvailableSlotsModel(new Date(this.date.getTime() + (24 * 60 * 60 * 1000)),atr_1));\n\n    const atr1 = [12,14,15];\n    const atr2 = [13,14,17];\n\n    this.multipleAvailableslots = [];\n    this.multipleAvailableslots.push(new AvailableSlotsModel(new Date(),atr1));\n    this.multipleAvailableslots.push(new AvailableSlotsModel(new Date(this.date.getTime() + (24 * 60 * 60 * 1000)),atr2));\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/enterprise/appointment/ee.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/enterprise/appointment/ee.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onSingleSelect(event: any) {\n    this.singleSelectedData = event;\n  }\n\n  onMultiSelect(event: any) {\n    this.multiSelectedData = event;\n  }\n}\n","/**\n * Created by rashmi on 16/1/19.\n */\nimport {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {EEAppointmentDemoComponent} from './appointment.component';\nimport {SharedModule} from \"../../shared.module\";\nimport {CommonModule} from \"@angular/common\";\nimport {HttpModule} from \"@angular/http\";\nimport {AmexioEnterpriseModule, AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\nconst routes: Routes = [\n  {path: '', component: EEAppointmentDemoComponent},\n];\n\n@NgModule({\n  imports: [SharedModule,CommonModule,HttpClientModule,AmexioWidgetModule,AmexioEnterpriseModule,RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  declarations : [EEAppointmentDemoComponent]\n})\nexport class EEAppointmentRoutingModule {\n}\n\nexport const routedComponents = [EEAppointmentDemoComponent];\n"],"sourceRoot":""}