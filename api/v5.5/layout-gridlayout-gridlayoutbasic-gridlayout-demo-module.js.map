{"version":3,"sources":["webpack:///./src/app/layout/gridlayout/gridlayoutbasic/gridlayout.demo.html","webpack:///./src/app/layout/gridlayout/gridlayoutbasic/gridlayout.demo.module.ts","webpack:///./src/app/layout/gridlayout/gridlayoutbasic/gridlayout.demo.ts"],"names":[],"mappings":"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","file":"layout-gridlayout-gridlayoutbasic-gridlayout-demo-module.js","sourcesContent":["module.exports = \"<amexio-card header=\\\"true\\\">\\n    <amexio-header>\\n        Grid Layout\\n    </amexio-header>\\n    <amexio-body>\\n        <p>CSS Grid Layout is the most powerful layout system available in CSS. It is a 2-dimensional system, meaning it can\\n            handle both columns and rows. Grid Layout can be used by applying CSS rules both to a parent element (which becomes\\n            the Grid Container) and to that elements children (which become Grid Items).</p>\\n        <amexio-tab-view>\\n            <amexio-tab title=\\\"Demo\\\" active=\\\"true\\\">\\n                <amexio-row>\\n                    <amexio-column size=\\\"12\\\">\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Grid Layout : Sample Example1\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-layout-grid [layout]=\\\"'LayoutSample1'\\\">\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black; \\\" [name]=\\\"'gridheader'\\\">Header</amexio-grid-item>\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black\\\" [name]=\\\"'gridmenu'\\\">Menu</amexio-grid-item>\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black\\\" [name]=\\\"'gridmain'\\\">Main </amexio-grid-item>\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black\\\" [name]=\\\"'gridright'\\\">Right</amexio-grid-item>\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black\\\" [name]=\\\"'gridfooter'\\\">Footer</amexio-grid-item>\\n                                </amexio-layout-grid>\\n                                <br>\\n                                <h2> Steps To Create Above Grid Layout :-</h2>\\n                                <amexio-box border-color=\\\"red\\\" border=\\\"left\\\" padding=\\\"true\\\">\\n                                    <ul>\\n                                        <li>\\n                                            Firstly you need to import AmexioGridLayoutService, GridConfig and GridConstants from amexio-ng-extensions.\\n                                        </li>\\n                                        <li>\\n                                            To create grid-template-areas, need to create a method creating GridConfig model where first attribute will be the name of\\n                                            the Ui and second will be the layout type(desktop, tab or mobile) then call addlayout\\n                                            method to design grid-template-areas. (Refer source tab - typescript code)\\n                                        </li>\\n                                        <li>\\n                                            Call above created method in constructor and createLayout from the service to generate Uis for individual layout type. (Refer\\n                                            source tab - typescript code).\\n                                        </li>\\n                                        <li>\\n                                            grid-area: Gives an item a name so that it can be referenced by a template created with the grid-template-areas property.\\n                                            It can contain any amexio component withih it. (Refer source tab- html code)\\n                                        </li>\\n                                    </ul>\\n                                </amexio-box>\\n                            </amexio-body>\\n                        </amexio-card>\\n                        <br>\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Grid Layout : Sample Example2\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-layout-grid [layout]=\\\"'LayoutSample2'\\\">\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black; \\\" [name]=\\\"'gridheader'\\\">GRID LAYOUT HEADER</amexio-grid-item>\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black\\\" [name]=\\\"'gridmenu'\\\">GRID LAYOUT MENU</amexio-grid-item>\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black\\\" [name]=\\\"'gridmain'\\\">GRID LAYOUT MAIN </amexio-grid-item>\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black\\\" [name]=\\\"'gridright'\\\">GRID LAYOUT RIGHT</amexio-grid-item>\\n                                    <amexio-grid-item style=\\\"border: 1px dashed black\\\" [name]=\\\"'gridfooter'\\\">GRID LAYOUT FOOTER</amexio-grid-item>\\n                                </amexio-layout-grid>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"API Reference\\\">\\n                <amexio-datagrid title=\\\"Properties<amexio-layout-grid>\\\" [enable-column-fiter]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/data/gridlayout.json'\\\"\\n                    [data-reader]=\\\"'properties'\\\" [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [data-index]=\\\"'name'\\\" [width]=\\\"20\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\">\\n                    </amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'version'\\\" [width]=\\\"20\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Version'\\\">\\n                    </amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'type'\\\" [width]=\\\"10\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Type'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'default'\\\" [width]=\\\"10\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Default'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'description'\\\" [width]=\\\"45\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n                <br>\\n                <amexio-datagrid title=\\\"Properties<amexio-grid-item>\\\" [enable-column-fiter]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/data/gridlayout.json'\\\"\\n                    [data-reader]=\\\"'childproperties'\\\" [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [data-index]=\\\"'name'\\\" [width]=\\\"20\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\">\\n                    </amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'version'\\\" [width]=\\\"20\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Version'\\\">\\n                    </amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'type'\\\" [width]=\\\"10\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Type'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'default'\\\" [width]=\\\"10\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Default'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [data-index]=\\\"'description'\\\" [width]=\\\"45\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Source\\\">\\n                <div style=\\\"overflow-y: scroll\\\">\\n                    <amexio-vertical-tab-view>\\n                        <amexio-tab title=\\\"HTML\\\" [active]=\\\"true\\\">\\n                            <ng-container *ngIf=\\\"htmlCode\\\">\\n                                <!--<clip-copy [htmlCode]=\\\"htmlCode\\\" (onClick)=\\\"onCopyClick()\\\"></clip-copy>-->\\n                                <prism-block [code]=\\\"htmlCode\\\" [language]=\\\"'html'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                        <amexio-tab title=\\\"Type Script\\\">\\n                            <ng-container *ngIf=\\\"typeScriptCode\\\">\\n                                <prism-block [code]=\\\"typeScriptCode\\\" [language]=\\\"'typescript'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n\\n                    </amexio-vertical-tab-view>\\n                </div>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Live\\\">\\n                <p align=\\\"center\\\">Amexio Sandbox</p>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/amexio-v4-gridlayoutbasic?embed=1&file=app/layouts/gridlayout/gridlayoutbasic/gridlayout.demo.html\\\" frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n            </amexio-tab>\\n        </amexio-tab-view>\\n    </amexio-body>\\n</amexio-card>\"","import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule,AmexioChartsModule, AmexioDashBoardModule, AmexioGridLayoutService} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../../shared.module\";\nimport {GridLayoutDemo} from \"./gridlayout.demo\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n/**\n * Created by ankita on 1/11/18.\n */\n@NgModule({\n  declarations: [GridLayoutDemo],\n  imports: [CommonModule, FormsModule,AmexioChartsModule, AmexioDashBoardModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component:  GridLayoutDemo, pathMatch: 'full'\n  }])],\n  providers: [AmexioGridLayoutService]\n})\nexport class GridLayoutDemoModule {\n\n}\n","/**\n * Created by rashmi on 28/11/18.\n */\n\nimport { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { AmexioGridLayoutService } from 'amexio-ng-extensions';\nimport { GridConstants } from 'amexio-ng-extensions';\nimport { GridConfig } from 'amexio-ng-extensions';\n@Component({\n  selector: 'gridlayout-demo', templateUrl: 'gridlayout.demo.html'\n})\nexport class GridLayoutDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource: string;\n  copyMsgArray: any[];\n  selectedData: any;\n  data: any[];\n  gridDesktop: GridConfig;\n  gridTablet: GridConfig;\n  gridMobile: GridConfig;\n  gridDesktop1: GridConfig;\n  gridTablet1: GridConfig;\n  gridMobile1: GridConfig;\n\n  constructor(private http: HttpClient, private _gridlayoutService: AmexioGridLayoutService) {\n    this.createLayouts();\n    this._gridlayoutService.createLayout(this.gridDesktop);\n    this._gridlayoutService.createLayout(this.gridTablet);\n    this._gridlayoutService.createLayout(this.gridMobile);\n\n    this._gridlayoutService.createLayout(this.gridDesktop1);\n    this._gridlayoutService.createLayout(this.gridTablet1);\n    this._gridlayoutService.createLayout(this.gridMobile1);\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  createLayouts() {\n    this.gridDesktop = new GridConfig('LayoutSample1', GridConstants.Desktop)\n    .addlayout([\"gridmenu\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\"])\n    .addlayout([\"gridmenu\", \"gridmain\", \"gridmain\", \"gridmain\", \"gridright\", \"gridright\"])\n    .addlayout([\"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridright\", \"gridright\"]);\n      this.gridTablet = new GridConfig('LayoutSample1', GridConstants.Tablet)\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\"])\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridmain\", \"gridmain\", \"gridright\", \"gridright\"])\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridmain\", \"gridmain\", \"gridright\", \"gridright\"])\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\"]);\n      this.gridMobile = new GridConfig('LayoutSample1', GridConstants.Mobile)\n      .addlayout([\"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\"])\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridmenu\", \"gridmenu\", \"gridmenu\", \"gridmenu\"])\n      .addlayout([\"gridmain\", \"gridmain\", \"gridmain\", \"gridmain\", \"gridmain\", \"gridmain\"])\n      .addlayout([\"gridright\", \"gridright\", \"gridright\", \"gridright\", \"gridright\", \"gridright\"])\n      .addlayout([\"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\"]);\n\n      this.gridDesktop1 = new GridConfig('LayoutSample2', GridConstants.Desktop)\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\"])\n    .addlayout([\"gridmenu\", \"gridmenu\", \"gridmain\", \"gridmain\", \"gridright\", \"gridright\"])\n    .addlayout([\"gridmenu\", \"gridmenu\", \"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\"]);\n      this.gridTablet1 = new GridConfig('LayoutSample2', GridConstants.Tablet)\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\"])\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridmain\", \"gridmain\", \"gridmain\", \"gridmain\"])\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridright\", \"gridright\", \"gridright\", \"gridright\"])\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\"]);\n      this.gridMobile1 = new GridConfig('LayoutSample2', GridConstants.Mobile)\n      .addlayout([\"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\", \"gridheader\"])\n      .addlayout([\"gridmenu\", \"gridmenu\", \"gridmenu\", \"gridmenu\", \"gridmenu\", \"gridmenu\"])\n      .addlayout([\"gridmain\", \"gridmain\", \"gridmain\", \"gridmain\", \"gridmain\", \"gridmain\"])\n      .addlayout([\"gridright\", \"gridright\", \"gridright\", \"gridright\", \"gridright\", \"gridright\"])\n      .addlayout([\"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\", \"gridfooter\"]);\n  }\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/data/gridlayout/gridlayout.html', { responseType: 'text' }).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/data/gridlayout/gridlayout.text', { responseType: 'text' }).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n  onRowSelect(data: any) {\n    this.selectedData = data;\n  }\n}\n\n"],"sourceRoot":""}