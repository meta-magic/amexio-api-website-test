{"version":3,"sources":["webpack:///./src/app/draganddrop/acrosstree/acrosstree.demo.component.ts","webpack:///./src/app/draganddrop/acrosstree/acrosstree.demo.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;GAEG;;;;;;;;;;AAEkD;AACH;AAyGlD;IAWE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,IAAI,CAAC,aAAa,GAAG;YACnB,MAAM,EAAE,CAAC;oBACP,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE;wBACV;4BACE,MAAM,EAAE,KAAK;4BACb,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,gBAAgB;iCACzB;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,QAAQ;4BAChB,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,WAAW;iCACpB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,UAAU;iCACnB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,UAAU;iCACnB;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,WAAW;4BACnB,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,gBAAgB;iCACzB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,cAAc;iCACvB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,aAAa;oCACrB,QAAQ,EAAE,IAAI;oCACd,UAAU,EAAE,EAAE;oCACd,MAAM,EAAE;wCACN,UAAU,EAAE,oBAAoB;wCAChC,aAAa,EAAE,KAAK;qCACrB;iCACF;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,MAAM;4BACd,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,KAAK;oCACb,QAAQ,EAAE,IAAI;oCACd,UAAU,EAAE;wCACV;4CACE,MAAM,EAAE,IAAI;4CACZ,MAAM,EAAE,iBAAiB;yCAC1B;wCACD;4CACE,MAAM,EAAE,IAAI;4CACZ,MAAM,EAAE,wBAAwB;yCACjC;qCAEF;iCACF;6BACF;yBACF;qBACF;iBACF,CAAC;SACH,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG;YACpB,MAAM,EAAE,CAAC;oBACP,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE;wBACV;4BACE,MAAM,EAAE,MAAM;4BACd,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,WAAW;iCACpB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,YAAY;iCACrB;gCACD;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,UAAU;iCACnB;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,QAAQ;4BAChB,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,WAAW;oCACnB,QAAQ,EAAE,IAAI;oCACd,UAAU,EAAE;wCACV;4CACE,MAAM,EAAE,IAAI;4CACZ,MAAM,EAAE,SAAS;yCAClB;wCACD;4CACE,MAAM,EAAE,IAAI;4CACZ,MAAM,EAAE,aAAa;yCACtB;wCACD;4CACE,MAAM,EAAE,IAAI;4CACZ,MAAM,EAAE,SAAS;yCAClB;qCACF;iCACF;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,MAAM;4BACd,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,QAAQ;oCAChB,QAAQ,EAAE,IAAI;oCACd,UAAU,EAAE;wCACV;4CACE,MAAM,EAAE,IAAI;4CACZ,MAAM,EAAE,qBAAqB;yCAC9B;qCACF;iCACF;6BACF;yBACF;wBACD;4BACE,MAAM,EAAE,OAAO;4BACf,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE;gCACV;oCACE,MAAM,EAAE,IAAI;oCACZ,MAAM,EAAE,WAAW;iCACpB;6BACF;yBACF;qBACF;iBACF,CAAC;SACH,CAAC;IACJ,CAAC;IAED,kCAAkC;IAClC,iDAAwB,GAAxB;QAAA,iBAmBC;QAlBC,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAe,CAAC;QAEpB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mDAAmD,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACzG,YAAY,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mDAAmD,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACzG,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAsD;IACtD,oCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACnE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IAED,oCAAW,GAAX,UAAY,IAAS;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,oCAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,qCAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAvNkB;QAAlB,+DAAS,CAAC,MAAM,CAAC;;mDAAc;IACZ;QAAnB,+DAAS,CAAC,OAAO,CAAC;;oDAAe;IAFvB,cAAc;QAvG1B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB,EAAE,QAAQ,EAAE,07KAoGxC;SACF,CAAC;yCAY0B,+DAAU;OAXzB,cAAc,CA0N1B;IAAD,qBAAC;CAAA;AA1N0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GY;AACM;AAC8B;AAChC;AACE;AACI;AACU;AACL;AAEtD;;GAEG;AAQH;IAAA;IAEA,CAAC;IAFY,oBAAoB;QAPhC,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,yEAAc,CAAC;YAC9B,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,qEAAgB,EAAC,2DAAY,EAAE,uEAAkB,EAAE,4DAAY,CAAC,QAAQ,CAAC,CAAC;wBAC7G,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yEAAc,EAAE,SAAS,EAAE,MAAM;qBACvD,CAAC,CAAC,CAAC;YACJ,SAAS,EAAE,CAAC,sEAAiB,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAEhC;IAAD,2BAAC;CAAA;AAFgC","file":"draganddrop-acrosstree-acrosstree-demo-module.js","sourcesContent":["/**\n * Created by rashmi on 20/6/18.\n */\n\nimport { Component, ViewChild } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'dragdroptree-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n         Tree with Drag Drop Functionality \n      </amexio-header>\n      <amexio-body>\n        <p>A Expandable Tree component which create Tree View based on standard datasource attached and having functionality of drag and drop : across tree</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n\n <amexio-column size=\"12\">\n<amexio-card [header]=\"true\" [footer]=\"false\" [footer-align]=\"'right'\">\n    <amexio-header>\n        Drag Drop Functionality across Tree\n    </amexio-header>\n    <amexio-body>\n        <amexio-row>\n            <amexio-column [size]=\"6\">\n                <amexio-card [header]=\"true\" [footer]=\"false\" [footer-align]=\"'right'\">\n                    <amexio-header>\n                        Tree 1\n                    </amexio-header>\n                    <amexio-body>\n                    <amexio-treeview #tree  (onDrop)=\"getDropData1($event)\" [data-reader]=\"'data'\" [enable-drag]=\"true\" [enable-drop]=\"true\" [data]=\"treeLocalData\" [across-tree]=\"true\">\n                    </amexio-treeview>\n                    </amexio-body>\n                </amexio-card>\n            </amexio-column>\n\n            <amexio-column [size]=\"6\">\n                <amexio-card [header]=\"true\" [footer]=\"false\" [footer-align]=\"'right'\">\n                    <amexio-header>\n                        Tree 2\n                    </amexio-header>\n                    <amexio-body>\n                    <amexio-treeview #tree1 (onDrop)=\"getDropData($event)\" [data-reader]=\"'data'\" [enable-drag]=\"true\" [enable-drop]=\"true\" [data]=\"treeLocalData1\" [across-tree]=\"true\">\n                    </amexio-treeview>\n                    </amexio-body>\n                </amexio-card>\n            </amexio-column>\n        </amexio-row>\n    </amexio-body>\n</amexio-card>\n</amexio-column>\n</amexio-row>\n\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties<amexio-treeview>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/tree.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"15\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"20\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Version'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"45\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/tree.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n          <p align=\"center\">Amexio Sandbox</p>\n          <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v5-dragdropacrosstree?embed=1&file=app/tree/acrosstree/acrosstree.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n  `\n})\nexport class AcrossTreeDemo {\n  @ViewChild('tree') treeRef: any;\n  @ViewChild('tree1') treeRef1: any;\n\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource: string;\n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  treeLocalData1: any;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n\n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\": true,\n                \"children\": [],\n                \"lazy\": {\n                  \"http-url\": \"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n\n    this.treeLocalData1 = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"Grid\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Column.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Boolean.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Check.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"Layout\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"Component\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Auto.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"FieldSet.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Dock.js\"\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"text\": \"Tree\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"Plugin\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"TreeViewDragDrop.js\"\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"text\": \"Panel\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Header.js\"\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/draganddrop/acrosstree/tree.html', { responseType: 'text' }).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/draganddrop/acrosstree/tree.text', { responseType: 'text' }).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n\n  getDropData(event: any) {\n    this.treeRef.removeNode(event);\n  }\n\n  getDropData1(event: any) {\n    this.treeRef1.removeNode(event);\n  }\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule, IconLoaderService} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {AcrossTreeDemo} from \"./acrosstree.demo.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n/**\n * Created by sagar on 11/1/18.\n */\n@NgModule({\n  declarations: [AcrossTreeDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: AcrossTreeDemo, pathMatch: 'full'\n  }])],\n  providers: [IconLoaderService]\n})\nexport class AcrossTreeDemoModule {\n\n}\n"],"sourceRoot":""}