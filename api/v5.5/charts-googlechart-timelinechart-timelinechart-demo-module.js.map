{"version":3,"sources":["webpack:///./src/app/charts/googlechart/timelinechart/timelinechart.demo.component.ts","webpack:///./src/app/charts/googlechart/timelinechart/timelinechart.demo.module.ts"],"names":[],"mappings":"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","file":"charts-googlechart-timelinechart-timelinechart-demo-module.js","sourcesContent":["/**\n * Created by sagar on 11/1/18.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'scatter-chart-demo',\n  template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n         Timeline Chart Component \n      </amexio-header>\n      <amexio-body>\n        <p>A timeline is a chart that depicts how a set of resources are used over time.</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n           <amexio-row>\n             <amexio-column size=\"12\">\n               <amexio-chart-timeline [data]=\"timelineChartData\" [width]=\"'100%'\"  ></amexio-chart-timeline>\n             </amexio-column>\n           </amexio-row>\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Chart Properties<amexio-chart-timeline>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/charts/timelinechart.json'\"\n                             [data-reader]=\"'chart'\"\n                             [enable-data-filter]=\"false\" >\n              <amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            \n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Data Source\">\n                <ng-container *ngIf=\"dataSourceCode\">\n                  <prism-block [code]=\"dataSourceCode\" [language]=\"'json'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n           <p align=\"center\">Amexio Sandbox</p>\n<iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-timelinechart?embed=1&file=app/charts/timelinechart/timelinechart.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n  \n  `\n})\nexport class TimelineChartDemoComponent implements OnInit {\n  timelineChartData:any;\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSourceCode:string;\n  copyMsgArray: any[];\n  constructor(private http: HttpClient) {\n    this.timelineChartData=[\n      [{\"datatype\":'string',\"label\":'Prime Minister'},\n        {\"datatype\":\"date\", \"label\":'Start'},\n        {\"datatype\":\"date\",\"label\":\"End\"}\n      ],\n      [ 'Washington', new Date(1789, 3, 30), new Date(1797, 2, 4) ],\n      [ 'Adams',      new Date(1797, 2, 4),  new Date(1801, 2, 4) ],\n      [ 'Jefferson',  new Date(1801, 2, 4),  new Date(1809, 2, 4) ]\n    ];\n    this.getHtmlAndTypeScriptCode();\n  }\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs:any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/charts/timelinechart/chart.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/charts/timelinechart/chart.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n    //DataSource FILE\n    this.http.get('assets/data/code/charts/timelinechart/datasource.json',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.dataSourceCode = responseTs;\n    });\n  }\n\n  //this code use copy to html code from tabpanel\n  onCopyClick(){\n    if(this.copyMsgArray.length>=1){\n      this.copyMsgArray=[];\n      this.copyMsgArray.push({'msg':'Code Copied', 'type' : 'info'});\n    }else{\n      this.copyMsgArray.push({'msg':'Code Copied', 'type' : 'info'});\n    }\n  }\n  ngOnInit() {\n  }\n\n}\n\n\n","import {RouterModule} from \"@angular/router\";\nimport {AmexioChartsModule, AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {TimelineChartDemoComponent} from \"./timelinechart.demo.component\";\nimport {SharedModule} from \"../../../shared.module\";\nimport {HttpClientModule} from \"@angular/common/http\";\n@NgModule({\n  declarations: [TimelineChartDemoComponent],\n  imports: [CommonModule, FormsModule, HttpClientModule, AmexioWidgetModule, SharedModule,AmexioChartsModule,RouterModule.forChild([{\n    path: '', component: TimelineChartDemoComponent, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class TimelineChartDemoModule {\n}\n"],"sourceRoot":""}