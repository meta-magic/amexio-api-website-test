{"version":3,"sources":["webpack:///./src/app/panes/form-html/template-driven/employee.registration.ts","webpack:///./src/app/panes/form-html/template-driven/form.demo.html","webpack:///./src/app/panes/form-html/template-driven/form.demo.module.ts","webpack:///./src/app/panes/form-html/template-driven/form.demo.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;IAQI;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;IAC/B,CAAC;IACH,4BAAC;AAAD,CAAC;;AAED;IAME;IAEA,CAAC;IACH,cAAC;AAAD,CAAC;;;;;;;;;;;;;ACtBH,kqOAAkqO,2BAA2B,oEAAoE,uBAAuB,w3LAAw3L,sCAAsC,qEAAqE,8BAA8B,6yCAA6yC,qR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtkd;;GAEG;AACsC;AACc;AAEV;AAEF;AACa;AACF;AACF;AACA;AAEpD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gEAAqB,EAAC;CAC9C,CAAC;AAOF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAL9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAC,qEAAgB,EAAC,0DAAW,EAAC,uEAAkB,EAAC,2DAAY,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACnH,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,YAAY,EAAG,CAAC,gEAAqB,CAAC;SACvC,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;AAExB,IAAM,gBAAgB,GAAG,CAAC,gEAAqB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBxD;;GAEG;AAC6C;AACA;AACgB;AAMhE;IAeE,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAPpC,gBAAW,GAAU,IAAI,IAAI,EAAE,CAAC;QAQ9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;QAC/C,IAAI,CAAC,qBAAqB,GAAG,IAAI,4EAAqB,EAAE,CAAC;QACzD,IAAI,CAAC,cAAc,GAAG,CAAC;gBACrB,QAAQ,EAAC,GAAG;gBACZ,UAAU,EAAE,aAAa;aAC1B,EAAC;gBACA,QAAQ,EAAC,GAAG;gBACZ,UAAU,EAAE,eAAe;aAC5B,EAAC;gBACA,QAAQ,EAAC,GAAG;gBACZ,UAAU,EAAE,IAAI;aACjB,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG;YACtB,QAAQ,EAAC;gBACP,IAAI,EAAC,CAAC;wBACJ,UAAU,EAAC,UAAU;wBACrB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAG,KAAK;qBACjB,EAAC;wBACA,UAAU,EAAC,UAAU;wBACrB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAG,KAAK;qBACjB,EAAC;wBACA,UAAU,EAAC,SAAS;wBACpB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAG,KAAK;qBACjB;iBACA;aAAC;SAAC,CAAC;QACJ,IAAI,CAAC,OAAO,GAAC;YACX,EAAC,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,mBAAmB,EAAC;YACnD,EAAC,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,eAAe,EAAC,WAAW,EAAC,MAAM,EAAC;YACpE,EAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,eAAe,EAAC;YAC7C,EAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,EAAC;YAC3C,EAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,gBAAgB,EAAC;YAC/C,EAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,gBAAgB,EAAC;SAChD,CAAC;QAEN,IAAI,CAAC,cAAc,GAAG;YACpB,QAAQ,EAAC;gBACP,IAAI,EAAC,CAAC;wBACJ,MAAM,EAAC,MAAM;wBACb,QAAQ,EAAC,MAAM;qBAChB,EAAC;wBACA,MAAM,EAAC,QAAQ;wBACf,QAAQ,EAAC,QAAQ;qBAClB;iBACA;aACF;SACF,CAAC;QACF,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IACD,sCAAM,GAAN;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IACD,kCAAkC;IAClC,wDAAwB,GAAxB;QAAA,iBAoBC;QAnBC,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAe,CAAC;QAEpB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gDAAgD,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACnG,YAAY,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gDAAgD,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACnG,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,sDAAsD;IACtD,2CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;IAC/C,CAAC;IA5GU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;SAEtB,CAAC;yCAiB0B,+DAAU;OAfzB,qBAAqB,CA6GjC;IAAD,4BAAC;CAAA;AA7GiC;AA+GlC;IAYE;QAHA,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAIvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACF,uBAAC;AAAD,CAAC","file":"panes-form-html-template-driven-form-demo-module.js","sourcesContent":["export class EmplpoyeeRegistration {\n    firstName: string;\n    lastName: string;\n    address: Address;\n    gender: string;\n    email: string;\n    department: string;\n    dateOfBirth: any;\n    constructor() {\n      this.address = new Address();\n    }\n  }\n  \n  export class Address {\n    street: string;\n    city: string; \n    state: string;\n    country: string;\n    pincode: number;\n    constructor() { \n  \n    }\n  }","module.exports = \"<amexio-card header=\\\"true\\\">\\n    <amexio-header>\\n        Form with HTML form tag and amexio inputs components\\n    </amexio-header>\\n    <amexio-body>\\n        <p> Html Form can be used basically for validation purposes\\n        </p>\\n        <amexio-tab-view>\\n            <amexio-tab title=\\\"Demo\\\" active=\\\"true\\\">\\n                <h2>Demo: Form </h2>\\n                <amexio-card header=\\\"true\\\" footer=\\\"true\\\">\\n                    <amexio-header>\\n                        Simple Form\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <form #empForm=\\\"ngForm\\\">\\n                            <amexio-row>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-text-input [min-length]=\\\"3\\\" [(ngModel)]=\\\"userRegistration.firstName\\\" [max-length]=\\\"5\\\" [allow-blank]=\\\"false\\\" field-label=\\\"First Name\\\" name=\\\"firstName\\\" place-holder=\\\"Enter first name\\\" icon-feedback=\\\"true\\\">\\n                                    </amexio-text-input>\\n                                </amexio-column>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-text-input field-label=\\\"Last Name\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"userRegistration.lastName\\\" place-holder=\\\"Enter last name(not mandatory)\\\" allow-blank=\\\"true\\\" error-msg=\\\"Please enter last name\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                                        [max-length]=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                                    </amexio-text-input>\\n                                </amexio-column>\\n                            </amexio-row>\\n                            <amexio-textarea-input [field-label]=\\\"'Address'\\\" name=\\\"Address\\\" [(ngModel)]=\\\"userRegistration.address\\\" [place-holder]=\\\"'Enter address'\\\" [error-msg]=\\\"'Please enter address'\\\" [icon-feedback]=\\\"true\\\" [rows]=\\\"'1'\\\" [columns]=\\\"'2'\\\" [allow-blank]=\\\"false\\\"\\n                                [enable-popover]=\\\"true\\\"></amexio-textarea-input>\\n                            <amexio-row>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-radio-group [name]=\\\"'genderList'\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"userRegistration.gender\\\" [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'gender'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                                    </amexio-radio-group>\\n                                </amexio-column>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-checkbox-group [field-label]=\\\"'Hobbies'\\\" name=\\\"hobbies\\\" [(ngModel)]=\\\"userRegistration.hobbies\\\" [horizontal]=\\\"true\\\" [required]=\\\"true\\\"  [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'hobbieName'\\\" [value-field]=\\\"'checked'\\\" [data]=\\\"checkboxGroupdata\\\">\\n                                    </amexio-checkbox-group>\\n                                </amexio-column>\\n                            </amexio-row>\\n                            <amexio-row>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-tag-input [data-reader]=\\\"'response.data'\\\" [http-url]=\\\"'assets/data/componentdata/countryy.json'\\\" [has-label]=\\\"true\\\" [http-method]=\\\"'get'\\\" [key]=\\\"'countryName'\\\" [allow-blank]=\\\"false\\\" [display-field]=\\\"'countryName'\\\" [field-label]=\\\"'Having visa'\\\">\\n                                    </amexio-tag-input>\\n                                </amexio-column>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-dropdown [place-holder]=\\\"'Choose City'\\\" name=\\\"city\\\" [(ngModel)]=\\\"userRegistration.city\\\" [allow-blank]=\\\"false\\\" [data-reader]=\\\"'response.data'\\\" [field-label]=\\\"'City'\\\" [http-url]=\\\"'assets/data/componentdata/cities.json'\\\" [http-method]=\\\"'get'\\\" [search]=\\\"'true'\\\"\\n                                        [display-field]=\\\"'cityName'\\\" [value-field]=\\\"'cityName'\\\">\\n                                    </amexio-dropdown>\\n                                </amexio-column>\\n                            </amexio-row>\\n                            <amexio-row>\\n                                <amexio-column size=\\\"6\\\">\\n                                    <amexio-number-input [name]=\\\"'age'\\\" [(ngModel)]=\\\"userRegistration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\"\\n                                        [max-value]=\\\"100\\\" [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                                    </amexio-number-input>\\n                                </amexio-column>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-date-time-picker [(ngModel)]=\\\"userRegistration.dateOfBirth\\\" name=\\\"dateOfBirth\\\" [field-label]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [required]=\\\"true\\\">\\n                                    </amexio-date-time-picker>\\n                                </amexio-column>\\n                            </amexio-row>\\n                            <amexio-row>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-email-input [field-label]=\\\"'Email Id'\\\" name=\\\"email\\\" [(ngModel)]=\\\"userRegistration.email\\\" [place-holder]=\\\"'Enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                                    </amexio-email-input>\\n                                </amexio-column>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-password-input [enable-popover]=\\\"true\\\" [field-label]=\\\"'Password Input'\\\" name=\\\"password\\\" [(ngModel)]=\\\"userRegistration.password\\\" [place-holder]=\\\"'Enter Password'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter password'\\\" [min-length]=\\\"6\\\" [min-error-msg]=\\\"'Minimum 6 char required'\\\"\\n                                        [max-length]=\\\"32\\\" [max-error-msg]=\\\"'Maximum 32 char allowed'\\\" [icon-feedback]=\\\"true\\\">\\n                                    </amexio-password-input>\\n                                </amexio-column>\\n                            </amexio-row>\\n                            <amexio-checkbox [field-label]=\\\"'Agree'\\\" name=\\\"agree\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"userRegistration.agree\\\">\\n                            </amexio-checkbox>\\n                        </form>\\n                    </amexio-body>\\n                    <amexio-action>\\n                        <amexio-button [disabled]=\\\"!empForm.valid\\\" [label]=\\\"'Save'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Save'\\\" [size]=\\\"'large'\\\">\\n                        </amexio-button>\\n                    </amexio-action>\\n                </amexio-card>\\n\\n                <br>\\n                <b style=\\\"color:green\\\">Form Model Data : </b> {{empForm.form.value | json}}<br>\\n                <b style=\\\"color:blue\\\">UI Model Data </b>: {{userRegistration|json}} <br><br>\\n                <amexio-card header=\\\"true\\\" footer=\\\"true\\\">\\n                    <amexio-header>\\n                        Employee Registration With Address\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <form #empFormWithAddress=\\\"ngForm\\\">\\n                            <amexio-row>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-text-input [(ngModel)]=\\\"emplpoyeeRegistration.firstName\\\" [min-length]=\\\"3\\\" [max-length]=\\\"5\\\" [allow-blank]=\\\"false\\\" field-label=\\\"First Name\\\" [name]=\\\"'Firstname'\\\" place-holder=\\\"Enter first name\\\" icon-feedback=\\\"true\\\">\\n                                    </amexio-text-input>\\n                                </amexio-column>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-text-input field-label=\\\"Last Name\\\" [name]=\\\"'lastName'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.lastName\\\" place-holder=\\\"Enter last name\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter last name\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                                        [max-length]=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                                    </amexio-text-input>\\n                                </amexio-column>\\n                            </amexio-row>\\n                            <amexio-row>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-radio-group [name]=\\\"'genderList'\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"emplpoyeeRegistration.gender\\\" [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'gender'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                                    </amexio-radio-group>\\n                                </amexio-column>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-dropdown [place-holder]=\\\"'Choose Department'\\\" [name]=\\\"'department'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.department\\\" [allow-blank]=\\\"false\\\" [field-label]=\\\"'Department'\\\" [search]=\\\"'true'\\\" [data]=\\\"departmentData\\\" [display-field]=\\\"'deptName'\\\" [value-field]=\\\"'deptId'\\\">\\n                                    </amexio-dropdown>\\n                                </amexio-column>\\n                            </amexio-row>\\n                            <amexio-row>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-email-input [field-label]=\\\"'Email Id'\\\" [name]=\\\"'email'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.email\\\" [place-holder]=\\\"'Enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                                    </amexio-email-input>\\n                                </amexio-column>\\n                                <amexio-column [size]=\\\"6\\\">\\n                                    <amexio-date-time-picker [(ngModel)]=\\\"emplpoyeeRegistration.dateOfBirth\\\" [name]=\\\"'dateOfBirth'\\\" [field-label]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [required]=\\\"true\\\">\\n                                    </amexio-date-time-picker>\\n                                </amexio-column>\\n                            </amexio-row>\\n                            <amexio-fieldset ngModelGroup=\\\"address\\\" title=\\\"Address\\\">\\n                                <amexio-row>\\n                                    <amexio-column [size]=\\\"6\\\">\\n                                        <amexio-text-input field-label=\\\"Street\\\" [name]=\\\"'street'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.street\\\" place-holder=\\\"Enter street\\\" enable-popover=\\\"true\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter street\\\"\\n                                            icon-feedback=\\\"true\\\">\\n                                        </amexio-text-input>\\n                                    </amexio-column>\\n                                    <amexio-column [size]=\\\"6\\\">\\n                                        <amexio-text-input field-label=\\\"city\\\" [name]=\\\"'city'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.city\\\" [min-length]=\\\"3\\\" enable-popover=\\\"true\\\" min-error-msg=\\\"Minimum 3 char required\\\" place-holder=\\\"Enter city\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter city\\\"\\n                                            icon-feedback=\\\"true\\\">\\n                                        </amexio-text-input>\\n                                    </amexio-column>\\n                                </amexio-row>\\n                                <amexio-row>\\n                                    <amexio-column [size]=\\\"6\\\">\\n                                        <amexio-text-input field-label=\\\"pincode\\\" [name]=\\\"'pincode'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.pincode\\\" [min-length]=\\\"3\\\" enable-popover=\\\"true\\\" min-error-msg=\\\"Minimum 3 char required\\\" place-holder=\\\"Enter pincode\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter pincode\\\"\\n                                            icon-feedback=\\\"true\\\">\\n                                        </amexio-text-input>\\n                                    </amexio-column>\\n                                </amexio-row>\\n                            </amexio-fieldset>\\n                        </form>\\n                    </amexio-body>\\n                    <amexio-action>\\n                        <amexio-button [disabled]=\\\"!empFormWithAddress.valid\\\" [label]=\\\"'Save'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Save'\\\" [size]=\\\"'large'\\\">\\n                        </amexio-button>\\n                    </amexio-action>\\n                </amexio-card>\\n\\n                <br>\\n                <b style=\\\"color:green\\\">Form Model Data : </b> {{empFormWithAddress.form.value | json}}<br>\\n                <b style=\\\"color:blue\\\">UI Model Data : </b> {{emplpoyeeRegistration | json}} <br>\\n\\n\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Source\\\">\\n                <div style=\\\"overflow-y: scroll\\\">\\n                    <div style=\\\"overflow-y: scroll\\\">\\n                        <amexio-vertical-tab-view>\\n                            <amexio-tab title=\\\"HTML\\\" [active]=\\\"true\\\">\\n                                <ng-container *ngIf=\\\"htmlCode\\\">\\n                                    <!--<clip-copy [htmlCode]=\\\"htmlCode\\\" (onClick)=\\\"onCopyClick()\\\"></clip-copy>-->\\n                                    <prism-block [code]=\\\"htmlCode\\\" [language]=\\\"'html'\\\"></prism-block>\\n                                </ng-container>\\n                            </amexio-tab>\\n                            <amexio-tab title=\\\"Type Script\\\">\\n                                <ng-container *ngIf=\\\"typeScriptCode\\\">\\n                                    <prism-block [code]=\\\"typeScriptCode\\\" [language]=\\\"'typescript'\\\"></prism-block>\\n                                </ng-container>\\n                            </amexio-tab>\\n                        </amexio-vertical-tab-view>\\n                    </div>\\n                </div>\\n\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Live\\\">\\n                <p align=\\\"center\\\">Amexio Sandbox</p>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/amexio-v42-form?embed=1&file=app/forms/form/form.demo.html&view=editor\\\" frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n            </amexio-tab>\\n        </amexio-tab-view>\\n    </amexio-body>\\n</amexio-card>\"","/**\n * Created by anaghak07 on 16/4/18.\n */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {CommonModule} from \"@angular/common\";\nimport {HttpModule} from \"@angular/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {SharedModule} from '../../../shared.module';\nimport { HtmlFormDemoComponent } from './form.demo';\n\nconst routes: Routes = [\n  { path: '', component: HtmlFormDemoComponent},\n];\n\n@NgModule({\n  imports: [CommonModule,HttpClientModule,FormsModule,AmexioWidgetModule,SharedModule ,RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  declarations : [HtmlFormDemoComponent]\n})\nexport class HtmlFormDemoModule { }\n\nexport const routedComponents = [HtmlFormDemoComponent];\n","/**\n * Created by anaghak07 on 16/4/18.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { EmplpoyeeRegistration } from './employee.registration';\n@Component({\n  selector: 'form-demo',\n  templateUrl: 'form.demo.html',\n})\n\nexport class HtmlFormDemoComponent {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  asyncFlag : boolean;\n  refreshDialogue: boolean;\n  radioGroupData : any;\n  checkboxGroupdata : any;\n  currentDate : Date = new Date();\n  payment :any;\n  userRegistration:UserRegistration;\n  emplpoyeeRegistration: EmplpoyeeRegistration;\n  firstName:string;\n  lastName:string;\n  departmentData: any;\n  constructor(private http: HttpClient) {\n    this.userRegistration = new UserRegistration();\n    this.emplpoyeeRegistration = new EmplpoyeeRegistration();\n    this.departmentData = [{\n      'deptId':'1',\n      'deptName' :'Engineering'\n    },{\n      'deptId':'2',\n      'deptName' :'Tech Suppport'\n    },{\n      'deptId':'3',\n      'deptName' :'HR'\n    }]\n   this.checkboxGroupdata = {\n      response:{\n        data:[{\n          hobbieName:'Learning',\n          checked: false,\n          disabled : false\n        },{\n          hobbieName:'Shopping',\n          checked: false,\n          disabled : false\n        },{\n          hobbieName:'Fishing',\n          checked: false,\n          disabled : false\n        }\n        ]}};\n        this.payment=[\n          {\"label\": \"Open With\", \"icon\": \"fa fa-arrows-alt \"},\n          {\"label\": \"Make a Copy\", \"icon\": \"fa fa-files-o\",\"separator\":\"true\"},\n          {\"label\": \"Refresh\", \"icon\": \"fa fa-refresh\"},\n          {\"label\": \"Add Star\", \"icon\": \"fa fa-star\"},\n          {\"label\": \"download\", \"icon\": \"fa fa-download\"},\n          {\"label\": \"bookmark\", \"icon\": \"fa fa-bookmark\"}\n        ];\n\n    this.radioGroupData = {\n      response:{\n        data:[{\n          gender:'Male',\n          genderId:'male'\n        },{\n          gender:'Female',\n          genderId:'female',\n        },\n        ]\n      }\n    };\n    this.getHtmlAndTypeScriptCode();\n  }\n  getDta() {\n    this.asyncFlag = true;\n    setTimeout(() => {\n      this.asyncFlag = false;\n    }, 3000);\n  }\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/pane/html-form/form/form.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/pane/html-form/form/form.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  refreshData() {\n    this.refreshDialogue = !this.refreshDialogue;\n  }\n}\n\nexport class UserRegistration {\n  firstName: string;\n  lastName: string;\n  agree: boolean;\n  address: string;\n  gender: string;\n  hobbies: any[];\n  city: string;\n  age: number;\n  dateOfBirth = new Date();\n  email: string;\n  password: string;\n  constructor() {\n    this.hobbies = [];\n  }\n }\n"],"sourceRoot":""}