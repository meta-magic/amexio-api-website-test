{"version":3,"sources":["webpack:///./src/app/forms/chips/chips.demo.html","webpack:///./src/app/forms/chips/chips.demo.module.ts","webpack:///./src/app/forms/chips/chips.demo.ts"],"names":[],"mappings":";;;;;;;;;AAAA,w7BAAw7B,sBAAsB,s2BAAs2B,qBAAqB,mpLAAmpL,gR;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn7O;AACM;AACW;AACb;AACE;AACI;AACV;AACe;AACxD;;GAEG;AAQH;IAAA;IAEA,CAAC;IAFY,eAAe;QAP3B,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,qDAAS,CAAC;YACzB,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,qEAAgB,EAAE,2DAAY,EAAE,uEAAkB,EAAE,4DAAY,CAAC,QAAQ,CAAC,CAAC;wBAC5G,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qDAAS,EAAE,SAAS,EAAE,MAAM;qBACpD,CAAC,CAAC,CAAC;YACJ,SAAS,EAAE,EAAE;SAChB,CAAC;OACW,eAAe,CAE3B;IAAD,sBAAC;CAAA;AAF2B;;;;;;;;;;;;;AClB5B;AAAA;AAAA;AAAA;AAAA;;GAEG;;;;;;;;;;AAEuC;AACQ;AAKlD;IAYI,mBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,eAAe,GAAG,CAAC;gBACtB,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,WAAW;gBAClB,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI;aACf;YACD;gBACE,IAAI,EAAE,gBAAgB;gBACtB,KAAK,EAAE,UAAU;gBACjB,KAAK,EAAC,WAAW;gBACjB,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,KAAK;aAChB,EAAE;gBACD,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,QAAQ;gBACf,KAAK,EAAE,YAAY;gBACnB,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI;aACf,EAAE;gBACD,IAAI,EAAE,yBAAyB;gBAC/B,KAAK,EAAE,mBAAmB;gBAC1B,KAAK,EAAE,QAAQ;gBACf,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI;aACf,EAAE;gBACD,IAAI,EAAE,iBAAiB;gBACvB,KAAK,EAAE,WAAW;gBAClB,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI;aACf;SACA;QACD,IAAI,CAAC,cAAc,GAAG,CAAC;gBACrB,IAAI,EAAE,uBAAuB;gBAC7B,KAAK,EAAE,UAAU;gBACjB,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI;aACf;YACD;gBACE,IAAI,EAAE,yBAAyB;gBAC/B,KAAK,EAAE,mBAAmB;gBAC1B,KAAK,EAAC,WAAW;gBACjB,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,KAAK;aAChB,EAAE;gBACD,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,QAAQ;gBACf,KAAK,EAAE,YAAY;gBACnB,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI;aACf,EAAE;gBACD,IAAI,EAAE,eAAe;gBACrB,KAAK,EAAE,SAAS;gBAChB,KAAK,EAAE,WAAW;gBAClB,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI;aACf,EAAE;gBACD,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,QAAQ;gBACf,KAAK,EAAE,EAAE;gBACT,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI;aACf;SACA;QACC,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IACD,qCAAiB,GAAjB,UAAkB,KAAU;QAC1B,IAAI,CAAC,aAAa,GAAI,KAAK,CAAC;IAC9B,CAAC;IACD,oCAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,gCAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,kCAAkC;IAClC,4CAAwB,GAAxB;QAAA,iBA0BC;QAzBG,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAe,CAAC;QACpB,IAAI,YAAiB,CAAC;QACtB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wCAAwC,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5F,YAAY,GAAG,IAAI,CAAC;QACxB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACC,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wCAAwC,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5F,UAAU,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACC,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8CAA8C,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAClG,YAAY,GAAG,IAAI,CAAC;QACxB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACC,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAsD;IACtD,+BAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACrE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACrE,CAAC;IACL,CAAC;IAjIQ,SAAS;QAHrB,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;;SACzB,CAAC;yCAa4B,+DAAU;OAZ3B,SAAS,CAmIrB;IAAD,gBAAC;CAAA;AAnIqB","file":"forms-chips-chips-demo-module.js","sourcesContent":["module.exports = \"<amexio-card header=\\\"true\\\">\\n    <amexio-header>\\n        Chips\\n    </amexio-header>\\n    <amexio-body>\\n        <p>Chips allow users to enter information, make selections, filter content, or trigger actions. Chips appear dynamically\\n            as a group of multiple interactive elements.</p>\\n        <amexio-tab-view>\\n            <amexio-tab title=\\\"Demo\\\" active=\\\"true\\\">\\n                <amexio-row>\\n\\n                    <amexio-column size=\\\"12\\\">\\n                        <amexio-card header=\\\"true\\\">\\n                            <amexio-header>\\n                                Chips with Data Input\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-chips [data]=\\\"sampledatachips\\\" (selectedchipsData)=\\\"onChipsLabelClick($event)\\\" (onCloseClick)=\\\"onCloseClick($event)\\\"></amexio-chips>\\n                                <pre><code>{{emitdatachips | json}}</code></pre>\\n                            </amexio-body>\\n                        </amexio-card>\\n                        <amexio-card header=\\\"true\\\">\\n                            <amexio-header>\\n                                Chip with multiple Inputs\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-chips *ngFor=\\\"let item of sampledatachip\\\">\\n                                    <amexio-chip [icon]=\\\"item.icon\\\" [label]=\\\"item.label\\\" [color]=\\\"item.color\\\" [badge]=\\\"item.badge\\\" [closable]=\\\"item.closable\\\"\\n                                        (labelClick)=\\\"onChipLabelClick($event)\\\" (closeClick)=\\\"onCloseClick($event)\\\">\\n                                    </amexio-chip>\\n                                </amexio-chips>\\n                                <pre><code>{{emitdatachip | json}}</code></pre>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"API Reference\\\">\\n                <amexio-datagrid title=\\\"Properties<amexio-chips>\\\" [enable-column-fiter]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/forms/chips.json'\\\"\\n                    [data-reader]=\\\"'properties'\\\" [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'version'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Version'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'type'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Type'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'default'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Default'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"45\\\" [data-index]=\\\"'description'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n                <amexio-datagrid title=\\\"Properties<amexio-chip>\\\" [enable-column-fiter]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/forms/chip.json'\\\"\\n                    [data-reader]=\\\"'properties'\\\" [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'version'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Version'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'type'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Type'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'default'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Default'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"45\\\" [data-index]=\\\"'description'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n                <br>\\n                <amexio-datagrid title=\\\"Events<amexio-chips>\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/forms/chips.json'\\\" [data-reader]=\\\"'events'\\\"\\n                    [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [width]=\\\"20\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'version'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Version'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"80\\\" [data-index]=\\\"'description'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n                <amexio-datagrid title=\\\"Events<amexio-chip>\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/apireference/forms/chip.json'\\\" [data-reader]=\\\"'events'\\\"\\n                    [enable-data-filter]=\\\"false\\\">\\n                    <amexio-data-table-column [width]=\\\"20\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'version'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Version'\\\"></amexio-data-table-column>\\n                    <amexio-data-table-column [width]=\\\"80\\\" [data-index]=\\\"'description'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Description'\\\"></amexio-data-table-column>\\n                </amexio-datagrid>\\n\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Source\\\">\\n                <div style=\\\"overflow-y: scroll\\\">\\n                    <amexio-vertical-tab-view>\\n                        <amexio-tab title=\\\"HTML\\\" [active]=\\\"true\\\">\\n                            <ng-container *ngIf=\\\"htmlCode\\\">\\n                                <!--<clip-copy [htmlCode]=\\\"htmlCode\\\" (onClick)=\\\"onCopyClick()\\\"></clip-copy>-->\\n                                <prism-block [code]=\\\"htmlCode\\\" [language]=\\\"'html'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                        <amexio-tab title=\\\"Type Script\\\">\\n                            <ng-container *ngIf=\\\"typeScriptCode\\\">\\n                                <prism-block [code]=\\\"typeScriptCode\\\" [language]=\\\"'typescript'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                        <amexio-tab title=\\\"Data Source\\\">\\n                            <ng-container *ngIf=\\\"dataSource\\\">\\n                                <prism-block [code]=\\\"dataSource\\\" [language]=\\\"'json'\\\"></prism-block>\\n                            </ng-container>\\n                        </amexio-tab>\\n                    </amexio-vertical-tab-view>\\n                </div>\\n            </amexio-tab>\\n            <amexio-tab title=\\\"Live\\\">\\n                <p align=\\\"center\\\">Amexio Sandbox</p>\\n                <iframe style=\\\"width: 100%; height: 600px\\\" src=\\\"https://stackblitz.com/edit/amexio-v4-chips?embed=1&file=app/forminputs/chips/chips.demo.html\\\" frameborder=\\\"0\\\" allowfullscren=\\\"allowfullscren\\\"></iframe>\\n            </amexio-tab>\\n        </amexio-tab-view>\\n    </amexio-body>\\n</amexio-card>\"","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { AmexioWidgetModule } from \"amexio-ng-extensions\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { SharedModule } from \"../../shared.module\";\nimport { ChipsDemo } from \"./chips.demo\";\nimport { HttpClientModule } from \"@angular/common/http\";\n/**\n * Created by rashmi on 19/10/18.\n */\n@NgModule({\n    declarations: [ChipsDemo],\n    imports: [CommonModule, FormsModule, HttpClientModule, SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n        path: '', component: ChipsDemo, pathMatch: 'full'\n    }])],\n    providers: []\n})\nexport class ChipsDemoModule {\n\n}\n","/**\n * Created by rashmi on 19/10/18.\n */\n\nimport { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n    selector: 'chips-demo', templateUrl:'chips.demo.html'\n})\nexport class ChipsDemo {\n    htmlCode: string;\n    typeScriptCode: string;\n    dataSource: string;\n    copyMsgArray: any[];\n    checkboxGroupdata: any;\n    checkboxGroupdatadisabled: any;\n    checkboxGroupdatadisabledallitem: any;\n    sampledatachips: any;\n    sampledatachip:any;\n    emitdatachips: any;\n    emitdatachip: any;\n    constructor(private http: HttpClient) {\n      this.sampledatachips = [{\n        icon: 'fa fa-home',\n        label: 'Home',\n        color: 'turquoise',\n        badge: 4,\n        closable: true\n      },\n      {\n        icon: 'fa fa-download',\n        label: \"Download\",\n        color:'lightblue',\n        badge: 5,\n        closable: false\n      }, {\n        icon: 'fa fa-camera',\n        label: \"Camera\",\n        color: 'lightgreen',\n        badge: 6,\n        closable: true\n      }, {\n        icon: 'fa fa-fire-extinguisher',\n        label: \"Fire Extinguisher\",\n        color: 'yellow',\n        badge: 7,\n        closable: true\n      }, {\n        icon: 'fa fa-ambulance',\n        label: \"Emergency\",\n        color: 'pink',\n        badge: 8,\n        closable: true\n      }\n      ]\n      this.sampledatachip = [{\n        icon: 'fa fa-linkedin-square',\n        label: 'Linkedin',\n        color: 'pink',\n        badge: 4,\n        closable: true\n      },\n      {\n        icon: 'fa fa-internet-explorer',\n        label: \"Internet-Explorer\",\n        color:'lightblue',\n        badge: 5,\n        closable: false\n      }, {\n        icon: 'fa fa-github',\n        label: \"Github\",\n        color: 'lightgreen',\n        badge: 6,\n        closable: true\n      }, {\n        icon: 'fa fa-twitter',\n        label: \"Twitter\",\n        color: 'lightblue',\n        badge: 7,\n        closable: true\n      }, {\n        icon: 'fa fa-reddit',\n        label: \"Reddit\",\n        color: '',\n        badge: 8,\n        closable: true\n      }\n      ]\n        this.getHtmlAndTypeScriptCode();\n    }\n    onChipsLabelClick(event: any){\n      this.emitdatachips  = event;\n    }\n    onChipLabelClick(event: any){\n      this.emitdatachip = event;\n    }\n\n    onCloseClick(event: any){\n      this.emitdatachip = event;\n    }\n\n    //TO LOAD HTML AND TYPESCRIPT CODE\n    getHtmlAndTypeScriptCode() {\n        let responseHtml: any;\n        let responseTs: any;\n        let responseData: any;\n        //HTML FILE\n        this.http.get('assets/data/code/forms/chips/form.html', { responseType: 'text' }).subscribe(data => {\n            responseHtml = data;\n        }, error => {\n        }, () => {\n            this.htmlCode = responseHtml;\n        });\n\n        //TS FILE\n        this.http.get('assets/data/code/forms/chips/form.text', { responseType: 'text' }).subscribe(data => {\n            responseTs = data;\n        }, error => {\n        }, () => {\n            this.typeScriptCode = responseTs;\n        });\n        //TS FILE\n        this.http.get('assets/data/code/forms/chips/datasource.json', { responseType: 'text' }).subscribe(data => {\n            responseData = data;\n        }, error => {\n        }, () => {\n            this.dataSource = responseData;\n        });\n    }\n\n    //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n    onCopyClick() {\n        if (this.copyMsgArray.length >= 1) {\n            this.copyMsgArray = [];\n            this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n        } else {\n            this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n        }\n    }\n\n}\n\n\n"],"sourceRoot":""}