{"version":3,"sources":["webpack:///./src/app/panes/carousel/carousel.demo.module.ts","webpack:///./src/app/panes/carousel/carousel.demo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;GAEG;AACsC;AACc;AAEC;AACX;AACF;AACM;AAC0B;AACrB;AAEtD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,oEAAqB,EAAE;CAC/C,CAAC;AAOF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAL9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAC,qEAAgB,EAAC,0DAAW,EAAC,2DAAY,EAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,uEAAkB,CAAC;YAClH,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,YAAY,EAAG,CAAC,oEAAqB,CAAC;SACvC,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;AAExB,IAAM,gBAAgB,GAAG,CAAC,oEAAqB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBxD;;GAEG;AAC+C;AAGF;AAgFhD;IAKE,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IACD,sCAAM,GAAN;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IACD,kCAAkC;IAClC,wDAAwB,GAAxB;QAAA,iBAoBC;QAnBC,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAe,CAAC;QAEpB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gDAAgD,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACnG,YAAY,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gDAAgD,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACnG,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,sDAAsD;IACtD,2CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IA7CU,qBAAqB;QA9EjC,+DAAS,CAAC;YACV,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,6rIAyET;SACD,CAAC;yCAO0B,+DAAU;OALzB,qBAAqB,CA8CjC;IAAD,4BAAC;CAAA;AA9CiC","file":"panes-carousel-carousel-demo-module.js","sourcesContent":["/**\n * Created by pratik on 16/1/18.\n */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CarouselDemoComponent } from './carousel.demo';\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {SharedModule} from \"../../shared.module\";\nimport {AmexioWidgetModule, IconLoaderService} from \"amexio-ng-extensions\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\nconst routes: Routes = [\n  { path: '', component: CarouselDemoComponent },\n];\n\n@NgModule({\n  imports: [CommonModule,HttpClientModule,FormsModule,SharedModule,RouterModule.forChild(routes),AmexioWidgetModule],\n  exports: [RouterModule],\n  declarations : [CarouselDemoComponent]\n})\nexport class CarouselDemoModule { }\n\nexport const routedComponents = [CarouselDemoComponent];\n","/**\n * Created by pratik on 16/1/18.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {IconLoaderService} from \"amexio-ng-extensions\";\nimport {Icon} from \"amexio-ng-extensions\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n selector: 'carousel-demo',\n template: `\n   <amexio-card header=\"true\">\n     <amexio-header>\n        Carousel \n     </amexio-header>\n     <amexio-body>\n       <p>The CarouselView displays a collection of images or other content in a horizontal layout with built-in navigation between the items.</p>\n       <amexio-tab-view>\n         <amexio-tab title=\"Demo\" active=\"true\">\n          <!-- <amexio-carousel [header]=\"'Mobiles'\" [data]=\"[1,2,3,4,5,6,7,8,9,10,11]\" mode=\"multiple\" shuffle-interval=\"2000\">\n             <ng-template let-car amexioTemplate=\"item\">\n               <div style=\"height: 300px;width: 300px;border: 1px solid red;display : inline-block\">\n                <div style=\"text-align: center\">CAR {{car}}</div>\n               </div>\n             </ng-template>\n           </amexio-carousel>-->\n           <amexio-carousel [header]=\"'Gallery'\" [data]=\"[1,2,3,4,5,6,7,8,9,10,11,12]\" mode=\"multiple\">\n             <ng-template let-img amexioTemplate=\"item\">\n                   <amexio-image [height]=\"'300px'\" path=\"assets/images/carousel/set1/{{img}}.jpg\"></amexio-image>\n             </ng-template>\n           </amexio-carousel>\n           <br><br>\n           \n           <amexio-carousel [header]=\"'Gallery With Auto Shuffle (2 seconds)'\" [data]=\"[1,2,3,4,5,6,7,8,9,10,11]\" mode=\"multiple\" shuffle-interval=\"2000\">\n             <ng-template let-gallery amexioTemplate=\"item\">\n                 <amexio-image [height]=\"'300px'\" path=\"assets/images/carousel/set2/{{gallery}}.jpg\"></amexio-image>\n             </ng-template>\n           </amexio-carousel>\n           <br><br>\n           \n           \n         </amexio-tab>\n         <amexio-tab title=\"API Reference\">\n           <amexio-datagrid title=\"Properties<amexio-carousel>\" [enable-column-fiter]=\"false\"\n                            [http-method]=\"'get'\"\n                            [http-url]=\"'assets/apireference/layout/carousel.json'\"\n                            [data-reader]=\"'properties'\"\n                            [enable-data-filter]=\"false\" >\n             <amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n           </amexio-datagrid>\n         </amexio-tab>\n         <amexio-tab title=\"Source\">\n           <div style=\"overflow-y: scroll\">\n             <amexio-vertical-tab-view>\n               <amexio-tab title=\"HTML\" [active]=\"true\">\n                 <ng-container *ngIf=\"htmlCode\">\n                   <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                   <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                 </ng-container>\n               </amexio-tab>\n               <amexio-tab title=\"Type Script\">\n                 <ng-container *ngIf=\"typeScriptCode\">\n                   <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                 </ng-container>\n               </amexio-tab>\n             </amexio-vertical-tab-view>   \n           </div>\n          \n         </amexio-tab>\n         <amexio-tab title=\"Live\">\n         <p align=\"center\">Amexio Sandbox</p>\n         <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-panel-carousel?embed=1&file=app/panels/carousel/carousel.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>   \n         </amexio-tab>\n       </amexio-tab-view>\n     </amexio-body>\n   </amexio-card>\n `\n})\n\nexport class CarouselDemoComponent{\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  asyncFlag : boolean;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n  getDta() {\n    this.asyncFlag = true;\n    setTimeout(() => {\n      this.asyncFlag = false;\n    }, 3000);\n  }\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/layout/carousel/carousel.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/layout/carousel/carousel.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n"],"sourceRoot":""}