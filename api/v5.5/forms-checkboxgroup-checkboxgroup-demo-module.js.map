{"version":3,"sources":["webpack:///./src/app/forms/checkboxgroup/checkboxgroup.demo.module.ts","webpack:///./src/app/forms/checkboxgroup/checkboxgroup.demo.ts"],"names":[],"mappings":"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","file":"forms-checkboxgroup-checkboxgroup-demo-module.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport { AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {CheckBoxGroupDemo} from \"./checkboxgroup.demo\";\nimport {HttpClientModule} from \"@angular/common/http\";\n/**\n * Created by sagar on 11/1/18.\n */\n@NgModule({\n  declarations: [CheckBoxGroupDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule,AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: CheckBoxGroupDemo, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class CheckBoxGroupDemoModule {\n\n}\n","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'checkboxgroup-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n         CheckBox Group\n      </amexio-header>\n      <amexio-body>\n        <p>Checkbox input component has been created to render N numbers of check-box based on data-set configured.\n          Data-set can be configured using HTTP call OR Define fix number of check-box.</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n\n              <amexio-column [size]=\"6\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                    Vertical Checkbox With Http Url\n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-checkbox-group [field-label]=\"'Vertical Checkbox'\" name=\"language\"\n                                           [data-reader]=\"'data'\"\n                                           [display-field]=\"'language'\"\n                                           [value-field]=\"'checked'\"\n                                           [http-method]=\"'get'\"\n                                           [http-url]=\"'assets/data/componentdata/checkgroup.json'\">\n                    </amexio-checkbox-group>\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n              <amexio-column size=\"6\">\n                <amexio-card header=\"true\">\n                  <amexio-header>\n                     Horizontal Checkbox\n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-checkbox-group [field-label]=\"'Horizontal Checkbox'\" name=\"language\"\n                                           [data-reader]=\"'response.data'\"\n                                           [display-field]=\"'language'\"\n                                           [horizontal]=\"true\"\n                                           [value-field]=\"'checked'\"\n                                           (onSelection)=\"selectedCheckboxgroup($event)\"\n                                           [data]=\"checkboxGroupdata\">\n                    </amexio-checkbox-group>\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n            </amexio-row>\n\n            <amexio-row>\n              <amexio-column size=\"6\">\n                <amexio-card header=\"true\">\n                  <amexio-header>\n                    Horizontal Checkbox with disabled single item.\n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-checkbox-group [field-label]=\"'Horizontal Checkbox'\" name=\"language\"\n                                           [data-reader]=\"'response.data'\"\n                                            [display-field]=\"'language'\"\n                                           [horizontal]=\"true\"\n                                           [value-field]=\"'checked'\"\n                                           [data]=\"checkboxGroupdatadisabled\">\n                    </amexio-checkbox-group>\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n              <amexio-column size=\"6\">\n              <amexio-card header=\"true\">\n                <amexio-header>\n                  Horizontal Checkbox with disabled all item.\n                </amexio-header>\n                <amexio-body>\n                  <amexio-checkbox-group [field-label]=\"'Horizontal Checkbox with disable'\" name=\"language\"\n                                         [data-reader]=\"'response.data'\"\n                                         [display-field]=\"'language'\"\n                                         [horizontal]=\"true\"\n                                         name=\"disabledcheckbox\"\n                                         [disabled]=\"true\"\n                                         [value-field]=\"'checked'\"\n                                         [data]=\"checkboxGroupdatadisabledallitem\">\n                  </amexio-checkbox-group>\n                </amexio-body>\n              </amexio-card>\n            </amexio-column>\n            </amexio-row>\n\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties<amexio-checkbox-group>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/forms/checkboxgroup.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"15\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Version'\"></amexio-data-table-column>                          \n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/forms/checkboxgroup.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [width]=\"20\"[data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"80\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Data Source\">\n                <ng-container *ngIf=\"dataSource\">\n                  <prism-block [code]=\"dataSource\" [language]=\"'json'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n           <p align=\"center\">Amexio Sandbox</p>\n<iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-checkboxgroup?embed=1&file=app/forms/checkboxgroup/checkboxgroup.demo.html&view=editor\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n    <!--<amexio-notification [data]=\"copyMsgArray\"></amexio-notification>-->\n\n  `\n})\nexport class CheckBoxGroupDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource:string;\n  copyMsgArray: any[];\n  checkboxGroupdata: any;\n  checkboxGroupdatadisabled : any;\n  checkboxGroupdatadisabledallitem:any;\n  //selected Checkbox event\n  selectedCheckboxgroup(data:any){\n  //make some operation here\n  }\n  constructor(private http: HttpClient) {\n    this.checkboxGroupdata = {\n      response: {\n        data: [{\n          language: 'Angular 2', checked: false,disabled : false\n        }, {\n          language: 'JAVA', checked: true,disabled : false\n        }, {\n          language: 'C++', checked: false,disabled : false\n        }]\n      }\n    };\n    this.checkboxGroupdatadisabled = {\n      response: {\n        data: [{\n          language: 'Angular 2', checked: false,disabled : false\n        }, {\n          language: 'JAVA', checked: true,disabled : true\n        }, {\n          language: 'C++', checked: false,disabled : false\n        }]\n      }\n    };\n    this.checkboxGroupdatadisabledallitem = {\n      response: {\n        data: [{\n          language: 'Angular 2', checked: false\n        }, {\n          language: 'JAVA', checked: true\n        }, {\n          language: 'C++', checked: false\n        }]\n      }\n    };\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n    let responseData:any;\n    //HTML FILE\n    this.http.get('assets/data/code/forms/checkboxgroup/form.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/forms/checkboxgroup/form.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n    //TS FILE\n    this.http.get('assets/data/componentdata/checkgroup.json',{responseType: 'text'}).subscribe(data => {\n      responseData = data;\n    }, error => {\n    }, () => {\n      this.dataSource = responseData;\n    });\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n"],"sourceRoot":""}