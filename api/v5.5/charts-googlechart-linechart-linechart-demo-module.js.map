{"version":3,"sources":["webpack:///./src/app/charts/googlechart/linechart/linechart.demo.component.ts","webpack:///./src/app/charts/googlechart/linechart/linechart.demo.module.ts"],"names":[],"mappings":"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","file":"charts-googlechart-linechart-linechart-demo-module.js","sourcesContent":["/**\n * Created by sagar on 11/1/18.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'line-chart-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n         Line Chart \n      </amexio-header>\n      <amexio-body>\n        <p>A line chart that is rendered within the browser using SVG.</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n              <amexio-column size=\"12\">\n                <amexio-chart-line [data]=\"lineChartData\" [height]=\"'400px'\" [width]=\"'100%'\" >\n                  <amexio-chart-legend [position]=\"'top'\"></amexio-chart-legend>\n                </amexio-chart-line>\n              </amexio-column>\n            </amexio-row>\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Chart Properties<amexio-chart-line>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/charts/linechart.json'\"\n                             [data-reader]=\"'chart'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Chart Title Properties<amexio-chart-title>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/charts/linechart.json'\"\n                             [data-reader]=\"'chartLegend'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Data Source\">\n                <ng-container *ngIf=\"dataSourceCode\">\n                  <prism-block [code]=\"dataSourceCode\" [language]=\"'json'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n           <p align=\"center\">Amexio Sandbox</p>\n<iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-linechart?embed=1&file=app/charts/linechart/linechart.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n\n  `\n})\nexport class LineChartDemoComponent implements OnInit {\n  lineChartData:any;\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSourceCode: string;\n  copyMsgArray: any[];\n\n  constructor(private http: HttpClient) {\n    this.lineChartData=[\n      [{\"datatype\":\"number\" ,\"label\":'Day'},{\"datatype\":\"number\",\"label\":'Guardians of the Galaxy'},\n        {\"datatype\":\"number\",\"label\":'The Avengers'},{\"datatype\":\"number\",\"label\":'Transformers: Age of Extinction'}\n      ],\n      [1,  37.8, 80.8, 41.8],\n      [2,  30.9, 69.5, 32.4],\n      [3,  25.4,   57, 25.7],\n      [4,  11.7, 18.8, 10.5],\n      [5,  11.9, 17.6, 10.4],\n      [6,   8.8, 13.6,  7.7],\n      [7,   7.6, 12.3,  9.6],\n      [8,  12.3, 29.2, 10.6],\n      [9,  16.9, 42.9, 14.8],\n      [10, 12.8, 30.9, 11.6],\n      [11,  5.3,  7.9,  4.7],\n      [12,  6.6,  8.4,  5.2],\n      [13,  4.8,  6.3,  3.6],\n      [14,  4.2,  6.2,  3.4]\n    ];\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/charts/linechart/chart.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/charts/linechart/chart.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n    //DataSource FILE\n    this.http.get('assets/data/code/charts/linechart/datasource.json',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.dataSourceCode = responseTs;\n    });\n  }\n\n  //this code use copy to html code from tabpanel\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import {RouterModule} from \"@angular/router\";\nimport {AmexioChartsModule, AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {LineChartDemoComponent} from \"./linechart.demo.component\";\nimport {SharedModule} from \"../../../shared.module\";\nimport {HttpClientModule} from \"@angular/common/http\";\n@NgModule({\n  declarations: [LineChartDemoComponent],\n  imports: [CommonModule, FormsModule, HttpClientModule, AmexioWidgetModule,SharedModule,AmexioChartsModule, RouterModule.forChild([{\n    path: '', component: LineChartDemoComponent, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class LineChartDemoModule {\n}\n"],"sourceRoot":""}