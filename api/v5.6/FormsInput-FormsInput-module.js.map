{"version":3,"sources":["webpack:///./src/app/FormsInput/FormsInput.module.ts","webpack:///./src/app/FormsInput/FormsInput.routes.ts","webpack:///./src/app/FormsInput/badge/badge.demo.html","webpack:///./src/app/FormsInput/badge/badge.demo.ts","webpack:///./src/app/FormsInput/checkboxgroup/checkboxgroup.demo.html","webpack:///./src/app/FormsInput/checkboxgroup/checkboxgroup.demo.ts","webpack:///./src/app/FormsInput/chips/chips.demo.html","webpack:///./src/app/FormsInput/chips/chips.demo.ts","webpack:///./src/app/FormsInput/creditcard/creditcard.demo.html","webpack:///./src/app/FormsInput/creditcard/creditcard.demo.ts","webpack:///./src/app/FormsInput/datepicker/datepicker.demo.html","webpack:///./src/app/FormsInput/datepicker/datepicker.demo.ts","webpack:///./src/app/FormsInput/dropdown/dropdown.demo.html","webpack:///./src/app/FormsInput/dropdown/dropdown.demo.ts","webpack:///./src/app/FormsInput/dropdownfilter/dropdownfilter.demo.html","webpack:///./src/app/FormsInput/dropdownfilter/dropdownfilter.demo.ts","webpack:///./src/app/FormsInput/dropdownmulti/dropdownmulti.demo.html","webpack:///./src/app/FormsInput/dropdownmulti/dropdownmulti.demo.ts","webpack:///./src/app/FormsInput/dropdowntemplate/dropdowntemplate.demo.html","webpack:///./src/app/FormsInput/dropdowntemplate/dropdowntemplate.demo.ts","webpack:///./src/app/FormsInput/email/email.demo.html","webpack:///./src/app/FormsInput/email/email.demo.ts","webpack:///./src/app/FormsInput/fileupload/fileupload.demo.html","webpack:///./src/app/FormsInput/fileupload/fileupload.demo.ts","webpack:///./src/app/FormsInput/label/label.demo.html","webpack:///./src/app/FormsInput/label/label.demo.ts","webpack:///./src/app/FormsInput/number/number.demo.html","webpack:///./src/app/FormsInput/number/number.demo.ts","webpack:///./src/app/FormsInput/password/password.demo.html","webpack:///./src/app/FormsInput/password/password.demo.ts","webpack:///./src/app/FormsInput/radiogroup/radiogroup.demo.html","webpack:///./src/app/FormsInput/radiogroup/radiogroup.demo.ts","webpack:///./src/app/FormsInput/rating/rating.demo.html","webpack:///./src/app/FormsInput/rating/rating.demo.ts","webpack:///./src/app/FormsInput/recaptcha/recaptcha.demo.html","webpack:///./src/app/FormsInput/recaptcha/recaptcha.demo.ts","webpack:///./src/app/FormsInput/searchbox/searchbox.demo.html","webpack:///./src/app/FormsInput/searchbox/searchbox.demo.ts","webpack:///./src/app/FormsInput/singlecheckbox/singlecheckbox.demo.html","webpack:///./src/app/FormsInput/singlecheckbox/singlecheckbox.demo.ts","webpack:///./src/app/FormsInput/slider/slider.demo.html","webpack:///./src/app/FormsInput/slider/slider.demo.ts","webpack:///./src/app/FormsInput/socialmedialogin/facebooklogin/facebooklogin.demo.html","webpack:///./src/app/FormsInput/socialmedialogin/facebooklogin/facebooklogin.demo.ts","webpack:///./src/app/FormsInput/socialmedialogin/googlelogin/googlelogin.demo.html","webpack:///./src/app/FormsInput/socialmedialogin/googlelogin/googlelogin.demo.ts","webpack:///./src/app/FormsInput/socialmedialogin/linkedinlogin/linkedinlogin.demo.html","webpack:///./src/app/FormsInput/socialmedialogin/linkedinlogin/linkedinlogin.demo.ts","webpack:///./src/app/FormsInput/taginput/taginput.demo.html","webpack:///./src/app/FormsInput/taginput/taginput.demo.ts","webpack:///./src/app/FormsInput/text/text.demo.html","webpack:///./src/app/FormsInput/text/text.demo.ts","webpack:///./src/app/FormsInput/textarea/textarea.demo.html","webpack:///./src/app/FormsInput/textarea/textarea.demo.ts","webpack:///./src/app/FormsInput/toggle/toggle.demo.html","webpack:///./src/app/FormsInput/toggle/toggle.demo.ts","webpack:///./src/app/FormsInput/typeahead/typeahead.demo.html","webpack:///./src/app/FormsInput/typeahead/typeahead.demo.ts"],"names":[],"mappings":"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","file":"FormsInput-FormsInput-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { AmexioWidgetModule ,LoadRecaptchaService } from \"amexio-ng-extensions\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { SharedModule } from \"../shared.module\";\nimport { FORMSINPUT_ROUTE } from \"./FormsInput.routes\";\n\n\nimport { RouterModule } from \"@angular/router\";\n \nimport { SinglecheckboxDemo}  from './singlecheckbox/singlecheckbox.demo';\nimport { CheckBoxGroupDemo} from './checkboxgroup/checkboxgroup.demo';\nimport { ChipsDemo } from \"./chips/chips.demo\";\nimport { CreditCardDemo } from \"./creditcard/creditcard.demo\";\nimport { DateTimePickerDemo } from \"./datepicker/datepicker.demo\";\nimport { DropDownDemo } from \"./dropdown/dropdown.demo\";\nimport { DropDownFilterDemo } from \"./dropdownfilter/dropdownfilter.demo\";\nimport { DropDownMultiDemo } from \"./dropdownmulti/dropdownmulti.demo\";\nimport { DropDownTemplateDemo } from \"./dropdowntemplate/dropdowntemplate.demo\";\nimport { EmailDemo } from \"./email/email.demo\";\nimport { FileuploadDemo } from \"./fileupload/fileupload.demo\";\nimport { LabelDemo } from \"./label/label.demo\";\nimport { NumberDemo } from \"./number/number.demo\";\nimport { PasswordDemo } from \"./password/password.demo\";\nimport { RadioGroupDemo } from \"./radiogroup/radiogroup.demo\";\nimport { RatingDemo } from \"./rating/rating.demo\";\nimport { RecaptchaDemo } from \"./recaptcha/recaptcha.demo\";\nimport { SearchBox } from \"./searchbox/searchbox.demo\";\nimport { SliderDemo } from \"./slider/slider.demo\";\nimport { FacebookLoginDemo } from \"./socialmedialogin/facebooklogin/facebooklogin.demo\";\nimport { GoogleLoginDemo } from \"./socialmedialogin/googlelogin/googlelogin.demo\";\nimport { LinkedinLoginDemo } from \"./socialmedialogin/linkedinlogin/linkedinlogin.demo\";\nimport { TagInputDemo } from \"./taginput/taginput.demo\";\nimport { TextDemo } from \"./text/text.demo\";\nimport { TextareaDemo } from \"./textarea/textarea.demo\";\nimport { ToggleDemo } from \"./toggle/toggle.demo\";\nimport { TypeAheadDemo } from \"./typeahead/typeahead.demo\";\nimport {BadgeDemo} from './badge/badge.demo';\n/**\n * Created by kedar on 1/2/19.\n */\n@NgModule({\n    declarations: [ SinglecheckboxDemo, CheckBoxGroupDemo, ChipsDemo,\n         CreditCardDemo, DateTimePickerDemo,\n        DropDownDemo,DropDownFilterDemo, DropDownMultiDemo, DropDownTemplateDemo, EmailDemo,\n        FileuploadDemo,LabelDemo,NumberDemo,PasswordDemo,RadioGroupDemo,RatingDemo,\n        RecaptchaDemo,SearchBox,SliderDemo,FacebookLoginDemo,GoogleLoginDemo,LinkedinLoginDemo,\n        TagInputDemo,TextDemo, TextareaDemo, ToggleDemo, TypeAheadDemo,BadgeDemo\n    \n    ],\n    imports: [\n        CommonModule, \n        FormsModule, \n        HttpClientModule, \n        SharedModule.forRoot(),\n        AmexioWidgetModule,\n        RouterModule.forChild(FORMSINPUT_ROUTE),\n    ],\n    providers: [LoadRecaptchaService]\n})\nexport class FormsInputModule {\n\n}\n","import { Routes } from '@angular/router';\n\n\nimport { SinglecheckboxDemo } from './singlecheckbox/singlecheckbox.demo';\nimport { CheckBoxGroupDemo } from './checkboxgroup/checkboxgroup.demo';\n\nimport { ChipsDemo } from \"./chips/chips.demo\";\nimport { CreditCardDemo } from \"./creditcard/creditcard.demo\";\nimport { DateTimePickerDemo } from \"./datepicker/datepicker.demo\";\nimport { DropDownDemo } from \"./dropdown/dropdown.demo\";\nimport { DropDownFilterDemo } from \"./dropdownfilter/dropdownfilter.demo\";\nimport { DropDownMultiDemo } from \"./dropdownmulti/dropdownmulti.demo\";\nimport { DropDownTemplateDemo } from \"./dropdowntemplate/dropdowntemplate.demo\";\nimport { EmailDemo } from \"./email/email.demo\";\nimport { FileuploadDemo } from \"./fileupload/fileupload.demo\";\nimport { LabelDemo } from \"./label/label.demo\";\nimport { NumberDemo } from \"./number/number.demo\";\nimport { PasswordDemo } from \"./password/password.demo\";\nimport { RadioGroupDemo } from \"./radiogroup/radiogroup.demo\";\nimport { RatingDemo } from \"./rating/rating.demo\";\nimport { RecaptchaDemo } from \"./recaptcha/recaptcha.demo\";\nimport { SearchBox } from \"./searchbox/searchbox.demo\";\nimport { SliderDemo } from \"./slider/slider.demo\";\nimport { FacebookLoginDemo } from \"./socialmedialogin/facebooklogin/facebooklogin.demo\";\nimport { GoogleLoginDemo } from \"./socialmedialogin/googlelogin/googlelogin.demo\";\nimport { LinkedinLoginDemo } from \"./socialmedialogin/linkedinlogin/linkedinlogin.demo\";\nimport { TagInputDemo } from \"./taginput/taginput.demo\";\nimport { TextDemo } from \"./text/text.demo\";\nimport { TextareaDemo } from \"./textarea/textarea.demo\";\nimport { ToggleDemo } from \"./toggle/toggle.demo\";\nimport { TypeAheadDemo } from \"./typeahead/typeahead.demo\";\nimport {BadgeDemo} from './badge/badge.demo';\n\n\n\nexport const FORMSINPUT_ROUTE: Routes = [\n\n    {\n        path: 'singlecheckbox-demo', component: SinglecheckboxDemo,\n    },\n    {\n        path: 'checkboxgroup-demo', component: CheckBoxGroupDemo,\n    },\n    {\n        path: 'chips-demo', component: ChipsDemo,\n    },\n    {\n        path: 'credit-card-demo', component: CreditCardDemo,\n    },\n    {\n        path: 'date-picker-demo', component: DateTimePickerDemo,\n    },\n    {\n        path: 'dropdownbasic', component: DropDownDemo,\n    },\n    {\n        path: 'dropdownfilter', component: DropDownFilterDemo,\n    },\n    {\n        path: 'dropdownmulti', component: DropDownMultiDemo,\n    },\n    {\n        path: 'dropdowntemplate', component: DropDownTemplateDemo,\n    },\n    {\n        path: 'email-demo', component: EmailDemo,\n    },\n    {\n        path: 'fileupload-demo', component: FileuploadDemo,\n    },\n    {\n        path: 'label-demo', component: LabelDemo,\n    },\n    {\n        path: 'number-demo', component: NumberDemo,\n    },\n    {\n        path: 'password-demo', component: PasswordDemo,\n    },\n    {\n        path: 'radiogroup-demo', component: RadioGroupDemo,\n    },\n    {\n        path: 'rating-demo', component: RatingDemo,\n    },\n    {\n        path: 'recaptcha-demo', component: RecaptchaDemo,\n    },\n    {\n        path: 'searchbox-demo', component: SearchBox,\n    },\n    {\n        path: 'slider-demo', component: SliderDemo,\n    },\n    {\n        path: 'facebook-login-demo', component: FacebookLoginDemo,\n    },\n    {\n        path: 'google-login-demo', component: GoogleLoginDemo,\n    },\n    {\n        path: 'linkedin-login-demo', component: LinkedinLoginDemo,\n    },\n    {\n        path: 'taginput-demo', component: TagInputDemo,\n    },\n    {\n        path: 'textinput', component: TextDemo,\n    },\n    {\n        path: 'textarea-demo', component: TextareaDemo,\n    },\n    {\n        path: 'toggle-demo', component: ToggleDemo,\n    },\n    {\n        path: 'typeahead-demo', component: TypeAheadDemo,\n    },\n    {\n        path: 'badge-demo', component: BadgeDemo,\n    },\n    \n]","module.exports = \"   \\n<amexio-api-structure  [url]=\\\"'assets/componentjson/forminputs/badge.json'\\\">\\n    <amexio-api-demo>\\n   <amexio-row>\\n        <amexio-column [size]=\\\"12\\\">\\n            <amexio-card [header]=\\\"true\\\">\\n                <amexio-header>\\n                    Badge Demo\\n                </amexio-header>\\n                <amexio-body>\\n                    <amexio-row>\\n                        <amexio-column size=\\\"6\\\">\\n                            <amexio-card-ce>\\n                                <amexio-image width=\\\"100%\\\" path=\\\"assets/images/cardce/burger.jpg\\\"></amexio-image>\\n                                <amexio-badge [absolute]=\\\"true\\\" [background]=\\\"'red'\\\" [color]=\\\"'white'\\\" [top]=\\\"'0px'\\\" [right]=\\\"'0px'\\\">\\n                                    <amexio-label size=\\\"red\\\">Non-Veg</amexio-label>\\n                                </amexio-badge>\\n\\n                                <amexio-header-ce [border-bottom]=\\\"true\\\" [align]=\\\"'space-between'\\\">\\n                                    <amexio-label size=\\\"medium-bold\\\">Burger lovers</amexio-label>\\n                                    <amexio-image [icon-class]=\\\"'fa fa-phone fa-1x'\\\" [tooltip]=\\\"'Phone'\\\"></amexio-image>\\n                                </amexio-header-ce>\\n                                <amexio-body-ce>\\n                                    <amexio-label>Tonight's availability</amexio-label> <br />\\n                                    <amexio-chips *ngFor=\\\"let item of ['07:00', '08:00', '09:00', '11:00']\\\">\\n                                        <amexio-chip [label]=\\\"item\\\" [color]=\\\"item.color\\\"> </amexio-chip>\\n                                    </amexio-chips>\\n                                </amexio-body-ce>\\n                            </amexio-card-ce>\\n\\n                        </amexio-column>\\n                        <amexio-column size=\\\"6\\\">\\n                            <amexio-card-ce>\\n                                <amexio-header-ce>\\n                                    <amexio-image width=\\\"50px\\\" height=\\\"50px\\\" [filter]=\\\"'round'\\\" path=\\\"https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/022014/triumph_motorcycles_2013.jpg?itok=rysgr_NR\\\"></amexio-image>\\n                                    <amexio-label size=\\\"medium-bold\\\">Triumph Bonneville T120 </amexio-label>\\n                                </amexio-header-ce>\\n                                <amexio-image width=\\\"100%\\\" path=\\\"http://imagesvc.timeincapp.com/v3/foundry/image/?q=70&w=1440&url=https%3A%2F%2Ftimedotcom.files.wordpress.com%2F2018%2F12%2F3201_spt_2019_20191540_original-2.jpg%3Fquality%3D85\\\"></amexio-image>\\n                                <amexio-badge [absolute]=\\\"true\\\" [background]=\\\"'#e74c3c'\\\" [color]=\\\"'white'\\\" [top]=\\\"'6%'\\\" [right]=\\\"'5%'\\\">\\n                                    <amexio-label size=\\\"large\\\">2019</amexio-label>\\n                                    <amexio-label>Jan</amexio-label>\\n                                </amexio-badge>\\n\\n                                <amexio-body-ce>\\n                                    <p>\\n                                        It accomplishes that goal with unique finishes and a limited production run. Let’s take a look at what makes the 2019 Triumph Bonneville T120 Diamond Edition a special motorcycle.\\n                                    </p>\\n                                </amexio-body-ce>\\n                                <amexio-action-ce>\\n                                    <amexio-button [label]=\\\"'BUY'\\\" [type]=\\\"'transparent'\\\" [tooltip]=\\\"'BUY'\\\">\\n                                    </amexio-button>\\n                                    <amexio-button [label]=\\\"'SELL'\\\" [type]=\\\"'transparent'\\\" [tooltip]=\\\"'SELL'\\\">\\n                                    </amexio-button>\\n                                </amexio-action-ce>\\n                            </amexio-card-ce>\\n                        </amexio-column>\\n                    </amexio-row>\\n                </amexio-body>\\n            </amexio-card>\\n        </amexio-column>\\n    </amexio-row>\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by sagar on 04/02/19.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Component({\n  selector: 'badge-demo',\n  templateUrl: './badge.demo.html'\n})\nexport class BadgeDemo {\n  \n  copyMsgArray: any[];\n  constructor(private http: HttpClient) {\n  }\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n \\n<amexio-api-structure  [url]=\\\"'assets/componentjson/forminputs/checkboxgroup.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Vertical Checkbox With Http Url\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-checkbox-group [field-label]=\\\"'Vertical Checkbox'\\\" name=\\\"language\\\"\\n                                   [data-reader]=\\\"'data'\\\"\\n                                   [display-field]=\\\"'language'\\\"\\n                                   [value-field]=\\\"'checked'\\\"\\n                                   [http-method]=\\\"'get'\\\"\\n                                   [http-url]=\\\"'assets/data/componentdata/checkgroup.json'\\\">\\n            </amexio-checkbox-group>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Horizontal Checkbox\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-checkbox-group [field-label]=\\\"'Horizontal Checkbox'\\\" name=\\\"language\\\"\\n                                   [data-reader]=\\\"'response.data'\\\"\\n                                   [display-field]=\\\"'language'\\\"\\n                                   [horizontal]=\\\"true\\\"\\n                                   [value-field]=\\\"'checked'\\\"\\n                                   (onSelection)=\\\"selectedCheckboxgroup($event)\\\"\\n                                   [data]=\\\"checkboxGroupdata\\\">\\n            </amexio-checkbox-group>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Horizontal Checkbox with disabled single item.\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-checkbox-group [field-label]=\\\"'Horizontal Checkbox'\\\" name=\\\"language\\\"\\n                                   [data-reader]=\\\"'response.data'\\\"\\n                                   [display-field]=\\\"'language'\\\"\\n                                   [horizontal]=\\\"true\\\"\\n                                   [value-field]=\\\"'checked'\\\"\\n                                   [data]=\\\"checkboxGroupdatadisabled\\\">\\n            </amexio-checkbox-group>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Horizontal Checkbox with disabled all item.\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-checkbox-group [field-label]=\\\"'Horizontal Checkbox with disable'\\\" name=\\\"language\\\"\\n                                   [data-reader]=\\\"'response.data'\\\"\\n                                   [display-field]=\\\"'language'\\\"\\n                                   [horizontal]=\\\"true\\\"\\n                                   name=\\\"disabledcheckbox\\\"\\n                                   [disabled]=\\\"true\\\"\\n                                   [value-field]=\\\"'checked'\\\"\\n                                   [data]=\\\"checkboxGroupdatadisabledallitem\\\">\\n            </amexio-checkbox-group>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'checkboxgroup-demo',\n  templateUrl: './checkboxgroup.demo.html',\n})\nexport class CheckBoxGroupDemo {\n  copyMsgArray: any[];\n  checkboxGroupdata: any;\n  checkboxGroupdatadisabled: any;\n  checkboxGroupdatadisabledallitem:any;\n  selectedCheckboxgroup(data:any){\n  //make some operation here\n  }\n  constructor() {\n    this.checkboxGroupdata = {\n      response: {\n        data: [{\n          language: 'Angular 2', checked: false,disabled : false\n        }, {\n          language: 'JAVA', checked: true,disabled : false\n        }, {\n          language: 'C++', checked: false,disabled : false\n        }]\n      }\n    };\n    this.checkboxGroupdatadisabled = {\n      response: {\n        data: [{\n          language: 'Angular 2', checked: false,disabled : false\n        }, {\n          language: 'JAVA', checked: true,disabled : true\n        }, {\n          language: 'C++', checked: false,disabled : false\n        }]\n      }\n    };\n    this.checkboxGroupdatadisabledallitem = {\n      response: {\n        data: [{\n          language: 'Angular 2', checked: false\n        }, {\n          language: 'JAVA', checked: true\n        }, {\n          language: 'C++', checked: false\n        }]\n      }\n    };\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/chip.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Chips with Data Input\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-chips [data]=\\\"sampledatachips\\\" (selectedchipsData)=\\\"onChipDataLabelClick($event)\\\" (onCloseClick)=\\\"onChipDataCloseClick($event)\\\"></amexio-chips>\\n            <pre><code>{{emitdatachips | json}}</code></pre>\\n          </amexio-body>\\n        </amexio-card>\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Chip with multiple Inputs\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-chips (selectedchipsData)=\\\"onChipsLabelClick($event)\\\" (onCloseClick)=\\\"onCloseClick($event)\\\">\\n              <amexio-chip [icon]=\\\"'fa fa-linkedin-square'\\\" [label]=\\\"'Linkedin'\\\" [color]=\\\"'red'\\\" [badge]=\\\"4\\\" [closable]=\\\"true\\\">\\n              </amexio-chip>\\n\\n              <amexio-chip [icon]=\\\"'fa fa-internet-explorer'\\\" [label]=\\\"'Internet-Explorer'\\\" [color]=\\\"'blue'\\\" [badge]=\\\"2\\\" [closable]=\\\"false\\\">\\n              </amexio-chip>\\n\\n              <amexio-chip [icon]=\\\"'fa fa-github'\\\" [label]=\\\"'Github'\\\" [color]=\\\"'green'\\\" [badge]=\\\"3\\\" [closable]=\\\"true\\\">\\n              </amexio-chip>\\n\\n            </amexio-chips>\\n            <pre><code>{{multipleemitchips | json}}</code></pre>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by rashmi on 19/10/18.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'chips-demo',\n    templateUrl:'chips.demo.html'\n})\nexport class ChipsDemo {\n    copyMsgArray: any[];\n    checkboxGroupdata: any;\n    checkboxGroupdatadisabled: any;\n    checkboxGroupdatadisabledallitem: any;\n    sampledatachips: any;\n    sampledatachip:any;\n    emitdatachips: any;\n    emitdatachip: any;\n    multipleemitchips:any;\n    multipleemitchip:any\n    constructor() {\n      this.sampledatachips = [{\n        icon: 'fa fa-home',\n        label: 'Home',\n        color: 'turquoise',\n        badge: 4,\n        closable: true\n      },\n      {\n        icon: 'fa fa-download',\n        label: \"Download\",\n        color:'lightblue',\n        badge: 5,\n        closable: false\n      }, {\n        icon: 'fa fa-camera',\n        label: \"Camera\",\n        color: 'lightgreen',\n        badge: 6,\n        closable: true\n      }, {\n        icon: 'fa fa-fire-extinguisher',\n        label: \"Fire Extinguisher\",\n        color: 'yellow',\n        badge: 7,\n        closable: true\n      }, {\n        icon: 'fa fa-ambulance',\n        label: \"Emergency\",\n        color: 'pink',\n        badge: 8,\n        closable: true\n      }\n      ]\n      this.sampledatachip = [{\n        icon: 'fa fa-linkedin-square',\n        label: 'Linkedin',\n        color: 'pink',\n        badge: 4,\n        closable: true\n      },\n      {\n        icon: 'fa fa-internet-explorer',\n        label: \"Internet-Explorer\",\n        color:'lightblue',\n        badge: 5,\n        closable: false\n      }, {\n        icon: 'fa fa-github',\n        label: \"Github\",\n        color: 'lightgreen',\n        badge: 6,\n        closable: true\n      }, {\n        icon: 'fa fa-twitter',\n        label: \"Twitter\",\n        color: 'lightblue',\n        badge: 7,\n        closable: true\n      }, {\n        icon: 'fa fa-reddit',\n        label: \"Reddit\",\n        color: '',\n        badge: 8,\n        closable: true\n      }\n      ]\n    }\n    onChipDataLabelClick(event: any){\n      this.emitdatachips  = event;\n    }\n   \n    onChipDataCloseClick(event: any){\n      this.emitdatachip = event;\n    }\n    onChipsLabelClick(event: any){\n      this.multipleemitchips  = event;\n    }\n    onCloseClick(event: any){\n      this.multipleemitchip = event;\n    }\n\n    //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n    onCopyClick() {\n        if (this.copyMsgArray.length >= 1) {\n            this.copyMsgArray = [];\n            this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n        } else {\n            this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n        }\n    }\n\n}\n\n\n","module.exports = \"\\n<amexio-api-structure  [url]=\\\"'assets/componentjson/forminputs/creditcard.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-card  header=\\\"true\\\" show-error=\\\"true\\\">\\n      <amexio-header style=\\\"width:100%\\\">\\n        Credit Card\\n      </amexio-header>\\n      <amexio-body>\\n        <amexio-row>\\n          <amexio-column size=\\\"9\\\">\\n            <pre><code>{{creditcard|json}}</code></pre>\\n\\n            <h2>Credit Card with Model Binding, label and double column template</h2>\\n            <amexio-creditcard [year-count]=\\\"4\\\" [show-label]=\\\"true\\\" [(ngModel)]=\\\"creditcard\\\"></amexio-creditcard>\\n            <br>\\n            <h2>Credit Card with double column template and without Model Binding and label</h2>\\n            <amexio-creditcard [show-label]=\\\"false\\\" [year-count]=\\\"4\\\"></amexio-creditcard>\\n            <br>\\n            <h2>Credit Card with single column template</h2>\\n            <br>\\n            <amexio-creditcard [template]=\\\"'single-column'\\\" [year-count]=\\\"4\\\"></amexio-creditcard>\\n          </amexio-column>\\n        </amexio-row>\\n      </amexio-body>\\n    </amexio-card>\\n\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by ankita on 11/10/18.\n */\nimport { Component } from '@angular/core';\nimport { AmexioCreditCardModel } from 'amexio-ng-extensions';\n\n@Component({\n  selector: 'credit-card-demo',\n  templateUrl: './creditcard.demo.html',\n})\nexport class CreditCardDemo {\n  copyMsgArray: any[];\n  asyncFlag: boolean;\n  creditcard: AmexioCreditCardModel;\n  constructor() {\n    this.creditcard = new AmexioCreditCardModel();\n  }\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n}\n\n\n","module.exports = \"<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/datetimepicker.json'\\\">\\n    <amexio-api-demo>\\n        <amexio-row>\\n            <amexio-column [size]=\\\"6\\\">\\n                <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\">\\n                    <amexio-header>\\n                        Inline Date Picker with min,max and disabled date\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <amexio-row>\\n                            <amexio-column [size]=\\\"12\\\">\\n                                <!-- ---1--- -->\\n                                <amexio-date-time-picker [inline-datepicker]=\\\"true\\\" [field-label]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [min-date]=\\\"'22-Mar-2016'\\\" [max-date]=\\\"'22-Feb-2019'\\\" [disabled-date]=\\\"disabledDate\\\" [(ngModel)]=\\\"currentDate1\\\">\\n                                </amexio-date-time-picker>\\n\\n\\n\\n\\n\\n                            </amexio-column>\\n                        </amexio-row>\\n\\n                    </amexio-body>\\n                    <amexio-action>\\n                        {{currentDate1}}\\n                    </amexio-action>\\n                </amexio-card>\\n\\n            </amexio-column>\\n            <amexio-column [size]=\\\"6\\\">\\n                <!-- -2- -->\\n                <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\">\\n                    <amexio-header>\\n                        Time Picker\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <amexio-row>\\n                            <amexio-column [size]=\\\"12\\\">\\n                                <amexio-date-time-picker [field-label]=\\\"'Time Of Birth'\\\" [time-picker]=\\\"true\\\" [date-picker]=\\\"false\\\" [min-date]=\\\"'Thu Jul 25 2017 00:00:00 GMT+0530 (IST)'\\\" [ngModel]=\\\"time\\\" (change)=\\\"onChangeTime($event)\\\">\\n                                </amexio-date-time-picker>\\n                            </amexio-column>\\n                        </amexio-row>\\n                    </amexio-body>\\n                    <amexio-action>\\n                        {{time}}\\n                    </amexio-action>\\n                </amexio-card>\\n\\n            </amexio-column>\\n\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=\\\"'6'\\\">\\n                <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\">\\n                    <amexio-header>\\n                        Date Picker with min,max date\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <amexio-row>\\n                            <amexio-column [size]=\\\"12\\\">\\n                                <!-- --3-- -->\\n\\n                                <amexio-date-time-picker [field-label]=\\\"'Date Of Birth'\\\" [place-holder]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [min-date]=\\\"'22-Mar-2016'\\\" [max-date]=\\\"'22-Feb-2019'\\\" [(ngModel)]=\\\"currentDate\\\">\\n                                </amexio-date-time-picker>\\n\\n\\n\\n\\n                            </amexio-column>\\n                        </amexio-row>\\n\\n                    </amexio-body>\\n                    <amexio-action>\\n                        {{currentDate}}\\n                    </amexio-action>\\n                </amexio-card>\\n            </amexio-column>\\n            <!-- ------4---------- -->\\n            <amexio-column [size]=\\\"'6'\\\">\\n                <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\">\\n                    <amexio-header>\\n                        Date Picker with Year dropdown and disabled date\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <amexio-row>\\n                            <amexio-column [size]=\\\"12\\\">\\n\\n                                <amexio-date-time-picker [dropdown-datepicker]=\\\"true\\\" [field-label]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [disabled-date]=\\\"disabledDate\\\" [(ngModel)]=\\\"currentDate2\\\">\\n                                </amexio-date-time-picker>\\n                            </amexio-column>\\n                        </amexio-row>\\n\\n                    </amexio-body>\\n                    <amexio-action>\\n                        {{currentDate2}}\\n                    </amexio-action>\\n                </amexio-card>\\n            </amexio-column>\\n        </amexio-row>\\n    </amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'date-picker-demo',\n  templateUrl: './datepicker.demo.html',\n})\nexport class DateTimePickerDemo {\n  copyMsgArray: any[];\n  currentDate: any;\n  currentDate1: any;\n  currentDate2: any;\n\n  time: any;\n  disabledDate: any[];\n  date = new Date(\"March 21, 2018 01:15:00\");\n\n  onChangeTime(data: any) {\n    this.time = data;\n  }\n\n  constructor() {\n    this.disabledDate = [\n      {\n        \"from\": \"13-Jul-2018\",\n        \"to\": \"15-Jul-2018\"\n      },\n      {\n        \"from\": \"20-Jul-2018\",\n        \"to\": \"23-Jul-2018\"\n      },\n      {\n        \"from\": \"15-Jun-2018\",\n        \"to\": \"19-Jun-2018\"\n      },\n      {\n        \"from\": \"27-Jun-2018\",\n        \"to\": \"29-Jun-2018\"\n      },\n      {\n        \"from\": \"23-Aug-2018\",\n        \"to\": \"28-Aug-2018\"\n      },\n      {\n        \"from\": \"17-Aug-2018\",\n        \"to\": \"19-Aug-2018\"\n      },\n      {\n        \"from\": \"19-Sep-2018\",\n        \"to\": \"21-Sep-2018\"\n      },\n      {\n        \"from\": \"25-Sep-2018\",\n        \"to\": \"28-Sep-2018\"\n      }\n    ];\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n}\n\n\n","module.exports = \"  \\n  \\n<amexio-api-structure  [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/forminputs/dropdown.json'\\\">\\n  <amexio-api-demo>\\n\\n  <amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <amexio-card header=\\\"true\\\">\\n        <amexio-header>\\n           Dropdown Component \\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-dropdown [(ngModel)]=\\\"countryCode1\\\"\\n                               [place-holder]=\\\"'Choose'\\\"\\n                               name=\\\"countryCode1\\\"\\n                               [data-reader]=\\\"'data'\\\"\\n                               [field-label]=\\\"'Choose Country'\\\"\\n                               [http-url]=\\\"'assets/data/componentdata/country.json'\\\"\\n                               [http-method]=\\\"'get'\\\"\\n                               [display-field]=\\\"'countryName'\\\"\\n                               [value-field]=\\\"'countryCode1'\\\"\\n                               [enable-sort]=\\\"true\\\"\\n                               [sort]=\\\"'asc'\\\"\\n              >\\n              </amexio-dropdown>\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n    <amexio-column [size]=\\\"6\\\">\\n      <amexio-card header=\\\"true\\\">\\n        <amexio-header>\\n          Selected Record Data\\n        </amexio-header>\\n        <amexio-body>\\n        <ng-container *ngIf=\\\"countryCode1\\\">\\n          {{countryCode1}}\\n        </ng-container>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n  <amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <amexio-card header=\\\"true\\\">\\n        <amexio-header>\\n           Dropdown Component with Inner Structure\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-dropdown [(ngModel)]=\\\"personName\\\"\\n                               [place-holder]=\\\"'Choose'\\\"\\n                               name=\\\"countryCode1\\\"\\n                               [data-reader]=\\\"'data'\\\"\\n                               [field-label]=\\\"'Address'\\\"\\n                               [http-url]=\\\"'assets/data/componentdata/personProfile.json'\\\"\\n                               [http-method]=\\\"'get'\\\"\\n                               [display-field]=\\\"'address.addressLabel'\\\"\\n                               [value-field]=\\\"'personName'\\\"\\n                               [enable-sort]=\\\"true\\\"\\n                               [sort]=\\\"'asc'\\\"\\n              >\\n              </amexio-dropdown>\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n    <amexio-column [size]=\\\"6\\\">\\n      <amexio-card header=\\\"true\\\">\\n        <amexio-header>\\n          Owner\\n        </amexio-header>\\n        <amexio-body>\\n        <ng-container *ngIf=\\\"personName\\\">\\n          {{personName}}\\n        </ng-container>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n  </amexio-api-demo>\\n  </amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\n\nimport { ComponentDataStructure } from '../../apimetadata/models/component.structure';\n\n@Component({\n  selector: 'dropdownbasic',\n  templateUrl: './dropdown.demo.html',\n})\nexport class DropDownDemo implements OnInit {\n  copyMsgArray: any[];\n  countryCode1:string;\n  personName:string;\n\n  customSourceData: ComponentDataStructure;\n  constructor() {\n    this.customSourceData = new ComponentDataStructure();\n\n  }\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n  createCustomSourceData() {\n    this.customSourceData.title = 'Dropdown';\n    this.customSourceData.description = 'Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'forms/dropdown/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'forms/dropdown/form.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/country.json';\n    this.customSourceData.sourceMetadata.datasourceUrl1 = 'assets/data/componentdata/personProfile.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-dropdown?embed=1&file=app/forms/dropdown/dropdown.demo.html&view=editor';\n  }\n\n\n  \n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n\\n \\n<amexio-api-structure  [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/forminputs/dropdown.json'\\\">\\n  <amexio-api-demo>\\n\\n  <amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <amexio-card header=\\\"true\\\">\\n        <amexio-header>\\n           Dropdown Filter Component \\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-dropdown [(ngModel)]=\\\"countryCode1\\\"\\n                               [place-holder]=\\\"'Choose'\\\"\\n                               name=\\\"countryCode1\\\"\\n                               [search]=\\\"true\\\"\\n                               [data-reader]=\\\"'data'\\\"\\n                               [field-label]=\\\"'Choose Country'\\\"\\n                               [http-url]=\\\"'assets/data/componentdata/country.json'\\\"\\n                               [http-method]=\\\"'get'\\\"\\n                               [display-field]=\\\"'countryName'\\\"\\n                               [value-field]=\\\"'countryCode1'\\\"\\n                               [enable-sort]=\\\"true\\\"\\n                               [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n    <amexio-column [size]=\\\"6\\\">\\n      <amexio-card header=\\\"true\\\">\\n        <amexio-header>\\n          Selected Record Data\\n        </amexio-header>\\n        <amexio-body>\\n        <ng-container *ngIf=\\\"countryCode1\\\">\\n          {{countryCode1}}\\n        </ng-container>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n\\n  </amexio-api-demo>\\n  </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport { ComponentDataStructure } from '../../apimetadata/models/component.structure';\n\n\n@Component({\n  selector: 'dropdownfilter', \n  templateUrl: './dropdownfilter.demo.html',\n})\nexport class DropDownFilterDemo implements OnInit{\n  \n  copyMsgArray: any[];\n  countryCode1:string;\n  sportName: any;\n  \n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n\n  }\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n  createCustomSourceData() {\n    this.customSourceData.title = 'Dropdown Filter ';\n    this.customSourceData.description = 'Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'forms/dropdownfilter/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'forms/dropdownfilter/form.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/country.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-dropdown-filter?embed=1&file=app/forms/dropdownfilter/dropdownfilter.demo.html&view=editor';\n  }\n\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/forminputs/dropdown.json'\\\">\\n  <amexio-api-demo>\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <amexio-card header=\\\"true\\\">\\n        <amexio-header>\\n           Dropdown Multi Select Component \\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-dropdown\\n                [place-holder]=\\\"'Choose'\\\"\\n                [field-label]=\\\"'Choose Fruit'\\\"\\n                [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/fruits.json'\\\"\\n                [display-field]=\\\"'fruitName'\\\" [value-field]=\\\"'code'\\\"\\n                [data-reader]=\\\"'data'\\\"\\n                [multi-select]=\\\"true\\\"\\n                (onMultiSelect)=\\\"onMultiSelectValue($event)\\\"\\n                [enable-sort]=\\\"true\\\"\\n                [sort]=\\\"'asc'\\\"\\n              >\\n              </amexio-dropdown>\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n    <amexio-column [size]=\\\"6\\\">\\n      <amexio-card header=\\\"true\\\">\\n        <amexio-header>\\n          Selected Record Data\\n        </amexio-header>\\n        <amexio-body>\\n          <ng-container *ngIf=\\\"listOfFriut\\\">\\n            {{listOfFriut|json}}\\n          </ng-container>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n\\n  </amexio-api-demo>\\n  </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport { ComponentDataStructure } from '../../apimetadata/models/component.structure';\n\n\n@Component({\n  selector: 'dropdownmulti',\n  templateUrl: './dropdownmulti.demo.html',\n})\nexport class DropDownMultiDemo implements OnInit{\n  \n  copyMsgArray: any[];\n  listOfFriut: any = [];\n\n  \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n\n  }\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n  createCustomSourceData() {\n    this.customSourceData.title = 'Dropdown Multi Select ';\n    this.customSourceData.description = 'Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'forms/dropdownmulti/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'forms/dropdownmulti/form.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/fruits.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-dropdown-multiselect?embed=1&file=app/forms/dropdownmulti/dropdownmulti.demo.html&view=editor';\n  }\n\n  onMultiSelectValue(data: any) {\n    this.listOfFriut=[];\n    data.forEach((obj) => {\n      this.listOfFriut.push(obj);\n    });\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/forminputs/dropdown.json'\\\">\\n  <amexio-api-demo>\\n\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Dropdown with Template\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-row>\\n              <amexio-column size=\\\"12\\\">\\n                <amexio-dropdown [(ngModel)]=\\\"id\\\" [place-holder]=\\\"'Choose'\\\" name=\\\"id\\\" [data-reader]=\\\"'data'\\\"\\n                  [field-label]=\\\"'Choose Country'\\\" [http-url]=\\\"'assets/data/componentdata/gridtemplate.json'\\\"\\n                  [http-method]=\\\"'get'\\\" [search]=\\\"true\\\" [display-field]=\\\"'name'\\\" [value-field]=\\\"'id'\\\" [enable-sort]=\\\"true\\\"\\n                  [sort]=\\\"'asc'\\\" (onSingleSelect)=\\\"getRowData($event)\\\">\\n                  <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-label>\\n                      <amexio-image [width]=\\\"100\\\" [path]=\\\"'assets/images/flags/flags/'+row.flag_32\\\"></amexio-image>\\n                    </amexio-label>&nbsp;&nbsp;\\n                    <amexio-label>{{row.name}}</amexio-label>\\n                    <amexio-label>( {{row.name_official}} )</amexio-label>\\n                  </ng-template>\\n\\n                </amexio-dropdown>\\n              </amexio-column>\\n            </amexio-row>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Selected Record Data\\n          </amexio-header>\\n          <amexio-body>\\n            {{clickedRowData|json}}\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n\\n\\n  </amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by rashmi on 5/6/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport { ComponentDataStructure } from '../../apimetadata/models/component.structure';\n\n\n@Component({\n  selector: 'dropdowntemplate',\n  templateUrl: './dropdowntemplate.demo.html',\n})\nexport class DropDownTemplateDemo implements OnInit{\n  \n  clickedRowData: any;\n  \n  id: string;\n  copyMsgArray: any[];\n\n\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n\n  }\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n  createCustomSourceData() {\n    this.customSourceData.title = 'Dropdown With Template ';\n    this.customSourceData.description = 'Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'forms/dropdowntemplate/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'forms/dropdowntemplate/form.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/gridtemplate.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-dropdown-template?embed=1&file=app/forms/dropdown/dropdown.demo.html&view=editor';\n  }\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getRowData(data: any) {\n    this.clickedRowData = data;\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure  [url]=\\\"'assets/componentjson/forminputs/email.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Basic Email Input\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-email-input [field-label]=\\\"'Email Id'\\\" name =\\\"email\\\"\\n                                [place-holder]=\\\"'Enter Email Id'\\\"\\n                                [allow-blank]=\\\"false\\\" [error-msg] =\\\"'Please Enter Email Id'\\\"\\n                                [enable-popover]=\\\"true\\\"\\n                                [icon-feedback]=\\\"true\\\">\\n            </amexio-email-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Email Input With Disable\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-email-input name =\\\"email\\\" [field-label]=\\\"'Email Id'\\\"\\n                                [place-holder]=\\\"'Enter Email Id'\\\"\\n                                [disabled]=\\\"true\\\">\\n            </amexio-email-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Email Input Font Style\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-email-input [field-label]=\\\"'Email Id'\\\" name =\\\"email\\\"\\n                                [place-holder]=\\\"'Enter Email Id'\\\"\\n                                [icon-feedback]=\\\"true\\\"\\n                                [font-style]=\\\"'italic'\\\">\\n            </amexio-email-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Font Family\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-email-input name =\\\"email\\\" [field-label]=\\\"'Email Id'\\\"\\n                                [place-holder]=\\\"'Enter Email Id'\\\"\\n                                [font-family]=\\\"'Times New Roman'\\\"\\n                                [font-size]=\\\"'large'\\\">\\n            </amexio-email-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'email-demo',\n  templateUrl: './email.demo.html',\n})\nexport class EmailDemo {\n  copyMsgArray: any[];\n\n  constructor() {}\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n\\n<amexio-api-structure  [url]=\\\"'assets/componentjson/forminputs/fileupload.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Basic File Upload\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-fileupload [http-url]=\\\"'/upload'\\\" [http-method]=\\\"'POST'\\\"\\n                               [file-type]=\\\"'image/*'\\\" [multiple-file]=\\\"'*'\\\" [field-label]=\\\"'Photo Upload'\\\">\\n            </amexio-fileupload>\\n          </amexio-body>\\n        </amexio-card>\\n\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Drag Drop File Upload\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-fileupload [http-url]=\\\"'/upload'\\\" [http-method]=\\\"'POST'\\\" [file-type]=\\\"'image/*'\\\" [field-label]=\\\"'Photo Upload'\\\" droppable=\\\"true\\\"></amexio-fileupload>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'fileupload-demo',\n  templateUrl :'./fileupload.demo.html',\n})\nexport class FileuploadDemo {\n  copyMsgArray: any[];\n\n  constructor() {\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/label.json'\\\">\\n    <amexio-api-demo>\\n        <h2>Label Component</h2>\\n        <amexio-row>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"large\\\">This is large amexio label</amexio-label>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"large-bold\\\">This is large-bold amexio label </amexio-label>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"medium-bold\\\">This is medium-bold amexio label</amexio-label>\\n            </amexio-column>\\n        </amexio-row>\\n        <br />\\n        <amexio-row>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label>This is small amexio label</amexio-label>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"small-bold\\\">This is small-bold amexio label</amexio-label>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"medium-bold\\\" font-color=\\\"#FF5733\\\">This is amexio label</amexio-label>\\n            </amexio-column>\\n        </amexio-row>\\n        <br />\\n        <h2>Label Component With Badges </h2>\\n        <amexio-row>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"large\\\" [badge]=\\\"1\\\">This is large amexio label</amexio-label>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"large-bold\\\" [badge]=\\\"2\\\">This is large-bold amexio label</amexio-label>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"medium-bold\\\" [badge]=\\\"3\\\">This is medium-bold amexio label</amexio-label>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"small\\\" [badge]=\\\"3\\\">This is small amexio label</amexio-label>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"small-bold\\\" [badge]=\\\"2\\\">This is small-bold amexio label</amexio-label>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-label size=\\\"medium-bold\\\" font-color=\\\"#FF5733\\\" [badge]=\\\"5\\\">This is medium-bold amexio\\n                    label</amexio-label>\\n            </amexio-column>\\n        </amexio-row>\\n        <h2>Box Component</h2>\\n        <amexio-row>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box border-color=\\\"red\\\" border=\\\"top\\\" padding=\\\"true\\\" closable=\\\"'true'\\\">\\n                    <amexio-label>This is small-bold amexio label with red border</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box border-color=\\\"blue\\\" border=\\\"bottom\\\" padding=\\\"true\\\">\\n                    <amexio-label>This is small-bold amexio label with blue border</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box border-color=\\\"yellow\\\" border=\\\"right\\\" padding=\\\"true\\\">\\n                    <amexio-label>This is small-bold amexio label with yellow border</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n        </amexio-row>\\n        <br />\\n        <amexio-row>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box border-color=\\\"green\\\" border=\\\"left\\\" padding=\\\"true\\\">\\n                    <amexio-label>This is small-bold amexio label with green border</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box background-color=\\\"purple\\\" padding=\\\"true\\\">\\n                    <amexio-label>This is small-bold amexio label with purple bg color</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box background-color=\\\"yellow\\\" padding=\\\"true\\\">\\n                    <amexio-label>This is small-bold amexio label with background-color yellow</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n        </amexio-row>\\n        <br />\\n        <amexio-row>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box background-color=\\\"red\\\" padding=\\\"true\\\">\\n                    <amexio-label>This is small-bold amexio label with background-color red</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box background-color=\\\"blue\\\" padding=\\\"true\\\">\\n                    <amexio-label>This is small-bold amexio label with background-color blue</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box border-color=\\\"green\\\" border=\\\"bottom\\\" padding=\\\"true\\\" background-color=\\\"yellow\\\">\\n                    <amexio-label>This is small-bold amexio label with background-color green</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n        </amexio-row>\\n        <br />\\n        <amexio-row>\\n\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box border-color=\\\"brown\\\" border=\\\"right-left\\\" padding=\\\"true\\\" background-color=\\\"brown\\\">\\n                    <amexio-label>This is small-bold amexio label with background-color</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box border-color=\\\"purple\\\" border=\\\"all\\\" padding=\\\"true\\\" background-color=\\\"purple\\\" box-height=\\\"100px\\\"\\n                    box-width=\\\"282px\\\">\\n                    <amexio-text-input field-label=\\\"Aadhar No\\\" name=\\\"name\\\" place-holder=\\\"Enter aadhar card no\\\"\\n                        icon-feedback=\\\"true\\\">\\n                    </amexio-text-input>\\n                </amexio-box>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"4\\\">\\n                <amexio-box border=\\\"top-bottom\\\" padding=\\\"true\\\">\\n                    <amexio-label>This is small-bold amexio label with background-color</amexio-label>\\n                </amexio-box>\\n            </amexio-column>\\n        </amexio-row>\\n\\n    </amexio-api-demo>\\n\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'label-demo',\n  templateUrl: './label.demo.html',\n})\nexport class LabelDemo {\n\n  copyMsgArray: any[];\n\n  constructor() {}\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n","module.exports = \"\\n\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/number.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Basic Number Input\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-number-input [field-label]=\\\"'Number Input'\\\"\\n                                 [place-holder]=\\\"'Enter Age'\\\">\\n            </amexio-number-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Number Input With Disable\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-number-input\\n              [place-holder]=\\\"'Enter age'\\\"\\n              [icon-feedback]=\\\"false\\\"\\n              [has-label]=\\\"false\\\" [disabled]=\\\"true\\\">\\n            </amexio-number-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Number Input Font Style\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-number-input [field-label]=\\\"'Age'\\\"\\n                                 [place-holder]=\\\"'Enter Age'\\\"\\n                                 [font-style]=\\\"'italic'\\\">\\n            </amexio-number-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Number Input With Min/Max Validation\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-number-input  [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\"\\n                                  [place-holder]=\\\"'Enter age'\\\"\\n                                  [allow-blank]=\\\"false\\\" [error-msg] =\\\"'Please enter age'\\\"\\n                                  [min-value]=\\\"1\\\"\\n                                  [min-error-msg]=\\\"'age can not be less than 1'\\\"\\n                                  [max-value]=\\\"100\\\"  [max-error-msg]=\\\"'age can not be greater than 100'\\\"\\n                                  [icon-feedback]=\\\"true\\\"\\n            >\\n            </amexio-number-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'number-demo',\n  templateUrl: './number.demo.html'\n})\nexport class NumberDemo {\n  copyMsgArray: any[];\n  constructor() {\n  }\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/password.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Basic Password Input\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-password-input [enable-popover]=\\\"true\\\"  [field-label]=\\\"'Password Input'\\\" name =\\\"password\\\"\\n                                   [place-holder]=\\\"'Enter Password'\\\"\\n                                   [allow-blank]=\\\"false\\\"\\n                                   [error-msg] =\\\"'Please enter password'\\\"\\n                                   [min-length]=\\\"6\\\"\\n                                   [min-error-msg]=\\\"'Minimum 6 char required'\\\"\\n                                   [max-length]=\\\"32\\\"\\n                                   [max-error-msg]=\\\"'Maximum 32 char allowed'\\\"\\n                                   [icon-feedback]=\\\"true\\\">\\n            </amexio-password-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Password Input without Label\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-password-input name =\\\"password\\\"\\n                                   [place-holder]=\\\"'Enter Password'\\\"\\n                                   [allow-blank]=\\\"false\\\"\\n                                   [error-msg] =\\\"'Please enter password'\\\"\\n                                   [min-length]=\\\"6\\\"\\n                                   [min-error-msg]=\\\"'Minimum 6 char required'\\\"\\n                                   [max-length]=\\\"32\\\"\\n                                   [max-error-msg]=\\\"'Maximum 32 char allowed'\\\"\\n                                   [icon-feedback]=\\\"true\\\"\\n                                   [has-label]=\\\"false\\\">\\n            </amexio-password-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'password-demo', templateUrl: './password.demo.html'\n})\nexport class PasswordDemo {\n  copyMsgArray: any[];\n  constructor() {\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/radiogroup.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Horizontal Radio Group\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-radio-group [field-label]=\\\"'Horizontal Radio Group'\\\"\\n                                name =\\\"gender\\\"\\n                                [data-reader]=\\\"'response.data'\\\"\\n                                [display-field]=\\\"'gender'\\\"\\n                                [value-field]=\\\"'genderId'\\\"\\n                                [horizontal]=\\\"true\\\"\\n                                [data]=\\\"radioGroupData\\\"\\n                                [(ngModel)]=\\\"model1\\\"\\n                                (onSelection)=\\\"setSelectedGender($event)\\\">\\n            </amexio-radio-group>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Vertical Radio Group With Http Url\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-radio-group [field-label]=\\\"'Vertical Radio Group'\\\" name =\\\"gender1\\\"\\n                                [data-reader]=\\\"'data'\\\"\\n                                [display-field]=\\\"'gender'\\\"\\n                                [value-field]=\\\"'genderId'\\\"\\n                                [http-method]=\\\"'get'\\\"\\n                                [(ngModel)]=\\\"model2\\\"\\n                                [http-url]=\\\"'assets/data/componentdata/radiogroup.json'\\\"\\n                                (onSelection)=\\\"setSelectedGender($event)\\\">\\n            </amexio-radio-group>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Horizontal Radio Group Disabled\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-radio-group [field-label]=\\\"'Horizontal Radio Group'\\\" name =\\\"gendery\\\"\\n                                [data-reader]=\\\"'radiodata'\\\"\\n                                [display-field]=\\\"'gender'\\\"\\n                                [value-field]=\\\"'genderId'\\\"\\n                                [http-method]=\\\"'get'\\\"\\n                                horizontal=\\\"true\\\"\\n                                [(ngModel)]=\\\"model3\\\"\\n                                [http-url]=\\\"'assets/data/componentdata/radiogroup.json'\\\"\\n                                disabled=\\\"true\\\">\\n            </amexio-radio-group>\\n\\n\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Horizontal Radio Group single item disabled\\n          </amexio-header>\\n          <amexio-body>\\n\\n            <amexio-radio-group [field-label]=\\\"'Horizontal Radio Group '\\\" name =\\\"genderx\\\"\\n                                [data-reader]=\\\"'data'\\\"\\n                                [(ngModel)]=\\\"model4\\\"\\n                                [display-field]=\\\"'gender'\\\"\\n                                [value-field]=\\\"'genderId'\\\"\\n                                [http-method]=\\\"'get'\\\"\\n                                horizontal=\\\"true\\\"\\n                                [http-url]=\\\"'assets/data/componentdata/radiogroup_disable.json'\\\"\\n            >\\n            </amexio-radio-group>\\n            <h2>Radio Group model Binding value </h2>\\n            {{model4 | json}}\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'radiogroup-demo',\n  templateUrl:'./radiogroup.demo.html',\n})\nexport class RadioGroupDemo {\n\n  copyMsgArray: any[];\n  radioGroupData: any;\n  model1:  string = 'male';\n  model2:  string = 'female';\n  model3:  string = 'male1';\n  model4: string = 'female';\n\n  //selected Checkbox event\n  setSelectedGender(data:any){\n  //make some operation here\n\n  }\n  constructor() {\n    this.radioGroupData = {\n      response:{\n        data:[{\n          gender:'Male',\n          genderId:'male'\n        },{\n          gender:'Female',\n          genderId:'female'\n        },\n        ]\n      }\n    };\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/rating.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\">\\n          <amexio-header>\\n            Sample Rating With Label\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-rating-input [(ngModel)]=\\\"rate\\\" [field-label]=\\\"'Film Rating'\\\"\\n                                 [max]=\\\"max\\\" name=\\\"rate\\\" [float]=\\\"true\\\"\\n                                 [read-only]=\\\"isReadonly\\\">\\n            </amexio-rating-input>\\n          </amexio-body>\\n          <amexio-action>\\n            Rating : {{rate}}\\n          </amexio-action>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\"  [footer-align]=\\\"'center'\\\">\\n          <amexio-header>\\n            Rating With Rate Titles\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-rating-input [(ngModel)]=\\\"profileRate\\\"\\n                                 [max]=\\\"profileMaxRate\\\" name=\\\"profileRate\\\"\\n                                 [titles]=\\\"titles\\\"\\n                                 [read-only]=\\\"isReadonly\\\">\\n            </amexio-rating-input>\\n          </amexio-body>\\n          <amexio-action>\\n            Rating : {{profileRate}}\\n          </amexio-action>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\">\\n          <amexio-header>\\n            Custom Rating Icons\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-rating-input [(ngModel)]=\\\"customRate\\\" [full-icon]=\\\"'☑'\\\" [empty-icon]=\\\"'☐'\\\"\\n                                 [max]=\\\"customIconRate\\\" name=\\\"customRate\\\" [float]=\\\"true\\\"\\n                                 [read-only]=\\\"isReadonly\\\">\\n            </amexio-rating-input>\\n          </amexio-body>\\n          <amexio-action>\\n            Rating : {{customRate}}\\n          </amexio-action>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Rating With Read Only\\n          </amexio-header>\\n          <amexio-body>\\n            <!--Read only Rating-->\\n            <amexio-rating-input [field-label]=\\\"'Profile Rating'\\\"\\n                                 [(ngModel)]=\\\"disableProfileRate\\\"\\n                                 [max]=\\\"disableProfileMaxRate\\\"\\n                                 [read-only]=\\\"true\\\">\\n            </amexio-rating-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'rating-demo',\n  templateUrl: './rating.demo.html',\n})\nexport class RatingDemo {\n  copyMsgArray: any[];\n  public max:number = 10;\n  public rate:number = 7;\n  public profileMaxRate:number = 5;\n  public customIconRate:number = 10;\n  public customRate:number = 5;\n  public profileRate:number = 2;\n  public disableProfileRate:number=3;\n  public disableProfileMaxRate:number=5;\n  public isReadonly:boolean = false;\n  titles:any=['Poor','Fair','Average','Good','Excellent'];\n  constructor() {\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/recaptcha.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column [size]=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n\\n\\n          <amexio-header>Captcha Response data</amexio-header>\\n          <amexio-body>\\n\\n            <amexio-google-recaptcha (onSuccess)=\\\"onSuccess($event)\\\"\\n                                     (onFailure)=\\\"onFailure($event)\\\"\\n                                     [site-key]=\\\"'6LeZ5W8UAAAAAIHXZf35oYoUhpsICnJzqSxx3fpf'\\\">\\n\\n            </amexio-google-recaptcha>\\n\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by kedar on 12/9/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'recaptcha-demo',\n  templateUrl: './recaptcha.demo.html',\n})\nexport class RecaptchaDemo {\n  copyMsgArray: any[];\n  response: any;\n  constructor() {\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  onSuccess(event: any) {\n    this.response = event;\n  }\n  onFailure(event: any) {\n    this.response = event;\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/searchbox.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column [size]=12>\\n        <amexio-card [header]=\\\"true\\\" [footer]=\\\"false\\\" >\\n          <amexio-header>\\n            Search Box\\n          </amexio-header>\\n          <amexio-body>\\n\\n            <amexio-searchbox\\n              [place-holder]=\\\"'Search'\\\"\\n              [display-field]=\\\"'subject'\\\"\\n              [data]=\\\"bindData\\\"\\n              [width]=\\\"250\\\"\\n            >\\n              <amexio-searchbox-options #search [title]=\\\"'Advance search'\\\">\\n\\n                <amexio-text-input field-label=\\\"Subject:\\\"\\n                                   name=\\\"subject\\\"\\n                                   place-holder=\\\"Enter subject\\\"\\n                                   icon-feedback=\\\"true\\\"\\n                                   [(ngModel)]=\\\"subject\\\"\\n                >\\n                </amexio-text-input>\\n                <amexio-text-input field-label=\\\"From:\\\"\\n                                   name=\\\"from\\\"\\n                                   place-holder=\\\"Emailid\\\"\\n                                   icon-feedback=\\\"true\\\"\\n                                   [(ngModel)]=\\\"from\\\"\\n                >\\n                </amexio-text-input>\\n                <amexio-text-input field-label=\\\"To:\\\"\\n                                   name=\\\"To\\\"\\n                                   place-holder=\\\"Emailid\\\"\\n                                   icon-feedback=\\\"true\\\"\\n                                   [(ngModel)]=\\\"to\\\"\\n                >\\n                </amexio-text-input>\\n                <amexio-row><amexio-column [size]=\\\"'12'\\\"></amexio-column></amexio-row>\\n                <amexio-button\\n                  [label]=\\\"'Filter'\\\"\\n                  [type]=\\\"'theme-color'\\\"\\n                  [tooltip]=\\\"'toolTip'\\\"\\n                  [size]=\\\"'medium'\\\"\\n                  (onClick)=\\\"filter(search)\\\"\\n                >\\n                </amexio-button>\\n              </amexio-searchbox-options>\\n\\n\\n\\n            </amexio-searchbox>\\n\\n\\n          </amexio-body>\\n        </amexio-card>\\n\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","\nimport { Component, ElementRef, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'searchbox-demo',\n  templateUrl : './searchbox.demo.html',\n})\nexport class SearchBox implements OnInit {\n  copyMsgArray: any[];\n\n  subject: string = \"\";\n  from: string = \"\";\n  to: string = \"\";\n  localData: any;\n  searchdata: any[];\n  bindData: any[] = [];\n  constructor( private element: ElementRef) {\n    this.localData = [\n\n      {\n        \"from\": \"araf.karsh@metamagic.in\",\n        \"subject\": \"amexio release plans\",\n        \"to\": \"ketan.gote@metamagic.in\"\n      },\n      {\n        \"from\": \"araf.karsh@metamagic.in\",\n        \"subject\": \"visual studio extension\",\n        \"to\": \"engineering@metamagic.in\"\n      },\n      {\n        \"from\": \"ketan.gote@metamagic.in\",\n        \"subject\": \"amexio on angular.io\",\n        \"to\": \"engineering@metamagic.in \"\n      },\n      {\n        \"from\": \"deepali.arvind@metamagic.in\",\n        \"subject\": \"amexio npm download spike\",\n        \"to\": \"ketan.gote@metamagic.in\"\n      },{\n        \"from\": \"dattaram.gawas@metamagic.in \",\n        \"subject\": \"building web components\",\n        \"to\": \"ketan.gote@metamagic.in\"\n      },\n      {\n        \"from\": \"sagar.jadhav@metamagic.in\",\n        \"subject\": \"showcase app url\",\n        \"to\": \"deepali.arvind@metamagic.in\"\n      },\n      {\n        \"from\": \"ketan.gote@metamagic.in\",\n        \"subject\": \"spring cloud stream demo\",\n        \"to\": \"deepali.arvind@metamagic.in\"\n      },\n      {\n        \"from\": \"ketan.gote@metamagic.in\",\n        \"subject\": \"spring microservice demo\",\n        \"to\": \"deepali.arvind@metamagic.in\"\n      },\n      {\n        \"from\": \"ketan.gote@metamagic.in\",\n        \"subject\": \"spring kafka integration\",\n        \"to\": \"sagar.jadhav@metamagic.in\"\n      },\n      {\n        \"from\": \"ankita.Jain@metamagic.in\",\n        \"subject\": \"jsr Implementation\",\n        \"to\": \"ketan.gote@metamagic.in\"\n      },\n      {\n        \"from\": \"mahesh.pardeshi@metamagic.in\",\n        \"subject\": \"axon cqrs demo\",\n        \"to\": \"ketan.gote@metamagic.in\"\n      },\n      {\n        \"from\": \"pratik.kelwalkar@metamagic.in\",\n        \"subject\": \"angular routing\",\n        \"to\": \"sagar.jadhav@metamagic.in\"\n      },\n      {\n        \"from\": \"dattaram.gawas@metamagic.in\",\n        \"subject\": \"angular pipes\",\n        \"to\": \"ashwini.agre@metamagic.in\"\n      },\n      {\n        \"from\": \"ketan.gote@metamagic.in\",\n        \"subject\": \"ribbon, hysterix\",\n        \"to\": \"dattaram.gawas@metamagic.in \"\n      },\n      {\n        \"from\": \"deepali.arvind@metamagic.in\",\n        \"subject\": \"eureka server using spring cloud\",\n        \"to\": \"ketan.gote@metamagic.in\"\n      },\n      {\n        \"from\": \"kedar.kokil@metamagic.in\",\n        \"subject\": \"rx java\",\n        \"to\": \"ashwini.agre@metamgic.in\"\n      },\n      {\n        \"from\": \"manisha.boddu@metamgic.in\",\n        \"subject\": \"spring + mongo db\",\n        \"to\": \"ketan.gote@metamagic.in\"\n      },{\n        \"from\": \"araf.karsh@metamagic.in\",\n        \"subject\": \"flux / redux architecture\",\n        \"to\": \"ketan.gote@metamgic.in\"\n      },{\n        \"from\": \"ketan.gote@metamagic.in\",\n        \"subject\": \"desire platform git repos\",\n        \"to\": \"rashmi.thakkar@metamagic.in\"\n      },{\n        \"from\": \"ashwini.agre@metamagic.in\",\n        \"subject\": \"pwa from react to angular/ionic\",\n        \"to\": \"sagar.jadhav@metamagic.in\"\n      },{\n        \"from\": \"rashmi.thakkar@metamagic.in\",\n        \"subject\": \"messages in platform\",\n        \"to\": \"ankita.jain@metamagic.in\"\n      },{\n        \"from\": \"araf.karsh@metamagic.in\",\n        \"subject\": \"typeScript secret weapon...\",\n        \"to\": \"sagar.jadhav@metamagic.in\"\n      },{\n        \"from\": \"araf.karsh@metamagic.in\",\n        \"subject\": \"visual studio code plugin\",\n        \"to\": \"sagar.jadhav@metamagic.in\"\n      },{\n        \"from\": \"kedar.kokil@metamagic.in\",\n        \"subject\": \"hashing algo\",\n        \"to\": \"dattaram.gawas@metamagic.in \"\n      },{\n        \"from\": \"sagar.jadhav@metamagic.in \",\n        \"subject\": \"vs code for windows, linux and mac os\",\n        \"to\": \"dattaram.gawas@metamagic.in \"\n      },{\n        \"from\": \"dattaram.gawas@metamagic.in\",\n        \"subject\": \"chart library - open source\",\n        \"to\": \"rashmi.thakkar@metamagic.in\"\n      },{\n        \"from\": \"ankita.jain@metamagic.in\",\n        \"subject\": \"tdom uptos in angular\",\n        \"to\": \"manisha.boddu@metamagic.in\"\n      },{\n        \"from\": \"dattaram.gawas@metamagic.in \",\n        \"subject\": \"hampi release\",\n        \"to\": \"sagar.jadhav@metamagic.in\"\n      },{\n        \"from\": \"manisha.boddu@metamagic.in\",\n        \"subject\": \"building web components\",\n        \"to\": \"ankita.jain@metamagic.in\"\n      },{\n        \"from\": \"ketan.gote@metamagic.in\",\n        \"subject\": \"spring + redis \",\n        \"to\": \"deepali.arvind@metamagic.in\"\n      },{\n        \"from\": \"rashmi.thakkar@metamgic.in\",\n        \"subject\": \"amexio plans\",\n        \"to\": \"ketan.gote@metamagic.in\"\n      }\n\n    ];\n    this.searchdata = this.localData;\n   }\n\n  //this function is called on hit of filter and it filters entered data\n  filter(search: any) {\n\n    this.bindData = [];\n    let sub1 = this.subject;\n    let to1 = this.to;\n    let frm1 = this.from;\n\n    if (sub1 == \"\" && frm1 == \"\" && to1 == \"\") {\n       this.bindData = this.searchdata;\n\n    }\n    else {\n      this.searchdata.forEach(element => {\n        //st\n        if ((sub1.length > 0 && to1.length > 0)) {\n          if (this.contains(element.subject, sub1) && this.contains(element.to, to1)) {\n            this.bindData.push(element);\n          }\n        }\n        else if ((sub1.length > 0) && (this.contains(element.subject, sub1))) {\n          this.bindData.push(element);\n        }\n        else if ((to1.length > 0) && (this.contains(element.to, to1))) {\n          this.bindData.push(element);\n        }\n\n        else if ((frm1.length > 0 && to1.length > 0)) {\n          if (this.contains(element.from, frm1) && this.contains(element.to, to1)) {\n            this.bindData.push(element);\n          }\n        }\n\n        else if ((sub1.length > 0 && frm1.length > 0 && to1.length > 0)) {\n          if (this.contains(element.from, frm1) && this.contains(element.to, to1) && this.contains(element.subject, sub1)) {\n            this.bindData.push(element);\n          }\n        }\n      });\n\n    }\n    search.closeSearchForm();\n  }\n//compares data with entered data\n  contains(value1: any, value2: string) {\n    return ((value1 + \"\").startsWith(value2))\n  }\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n\n\n\n\n\n  }\n\n  ngOnInit() {\n    this.bindData = JSON.parse(JSON.stringify(this.localData))\n  }\n}\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/checkbox.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Single Checkbox\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-checkbox [field-label]=\\\"'I Agree terms and conditions'\\\" [(ngModel)]=\\\"check\\\"\\n                             (onSelection)=\\\"onCheckClick($event)\\\"></amexio-checkbox>\\n            <p>Selected Value : {{check}}</p>\\n          </amexio-body>\\n        </amexio-card>\\n\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Single Checkbox with disable\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-checkbox [field-label]=\\\"'Agree'\\\" disabled=\\\"true\\\"></amexio-checkbox>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'singlecheckbox-demo',\n  templateUrl: './singlecheckbox.demo.html',\n})\nexport class SinglecheckboxDemo {\n  copyMsgArray: any[];\n  check: boolean = false;\n  checkWithDisable: boolean = true;\n\n  //Checkbox click event\n  onCheckClick(data: any) {\n    //add Some Operation\n  }\n\n  constructor() {\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/slider.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Simple Slider\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-row>\\n              <amexio-column [size]=\\\"6\\\">\\n                <amexio-slider [(ngModel)]=\\\"stepVal1\\\"></amexio-slider>\\n                {{stepVal1}}\\n              </amexio-column>\\n              <amexio-column [size]=\\\"6\\\">\\n                <amexio-slider disabled = \\\"true\\\" min-value=\\\"0\\\" max-value=\\\"50\\\" [step-value]=\\\"2\\\" [(ngModel)]=\\\"stepVal2\\\"></amexio-slider>\\n                {{stepVal2}}\\n              </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n              <amexio-column size=\\\"12\\\">\\n                <b>Vertical Slider</b>\\n                <amexio-slider [style]=\\\"{'height':'200px'}\\\" orientation=\\\"vertical\\\"></amexio-slider>\\n\\n              </amexio-column>\\n            </amexio-row>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'slider-demo',\n  templateUrl:'./slider.demo.html',\n})\nexport class SliderDemo {\n  copyMsgArray: any[];\n  stepVal1:number = 10;\n  stepVal2:number = 20;\n  constructor() {}\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n\\n\\n\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/facebook.json'\\\">\\n  <amexio-api-reference><amexio-box border-color=\\\"brown\\\" border=\\\"left\\\" padding=\\\"true\\\" background-color=\\\"brown\\\">\\n          <amexio-label>\\n            Make sure api-key is created before use this component.refer Facebook developer webside to create key <a href=\\\"https://developers.facebook.com/apps\\\" target=\\\"_blank\\\">Facebook Sign-In</a>\\n            <br/><br/>\\n          </amexio-label>\\n        </amexio-box>\\n  </amexio-api-reference>\\n  <amexio-api-demo>\\n  <amexio-row>\\n    <amexio-column size=\\\"4\\\">\\n      <amexio-card header=\\\"true\\\" [body-height]=\\\"50\\\">\\n        <amexio-header>\\n          Demo\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [label]=\\\"'Signup With Facebook'\\\" [api-key]=\\\"'2203895509849807'\\\" [type]=\\\"'facebook'\\\"\\n                (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [style-type]=\\\"'square'\\\" [api-key]=\\\"'2203895509849807'\\\" [type]=\\\"'facebook'\\\" (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [style-type]=\\\"'circle'\\\" [api-key]=\\\"'2203895509849807'\\\" [type]=\\\"'facebook'\\\" (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n    <amexio-column size=\\\"8\\\">\\n      <amexio-card header=\\\"true\\\" [body-height]=\\\"50\\\">\\n        <amexio-header>\\n          User Info After Login\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\" [fit]=\\\"true\\\">\\n              {{facebookLoginData|json}}\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n  </amexio-api-demo>\\n  </amexio-api-structure>\"","/**\n * Created by sagar on 25/1/19.\n */\nimport {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'facebook-login-demo', \n  templateUrl: './facebooklogin.demo.html',\n})\nexport class FacebookLoginDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  facebookLoginData: any;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  onLoginClick(data: any) {\n    this.facebookLoginData = data;\n  }\n\n  // TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    // HTML FILE\n    this.http.get('assets/data/code/forms/facebooklogin/form.html', {responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    // TS FILE\n    this.http.get('assets/data/code/forms/facebooklogin/form.text', {responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  // THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/google.json'\\\">\\n  <amexio-api-reference><amexio-box border-color=\\\"brown\\\" border=\\\"left\\\" padding=\\\"true\\\" background-color=\\\"brown\\\">\\n          <amexio-label>\\n            Make sure api-key is created before use this component.refer google developer webside to create key <a href=\\\"https://developers.google.com/identity/sign-in/web/sign-in\\\" target=\\\"_blank\\\">Google Sign-In</a>\\n            <br/><br/>\\n          </amexio-label>\\n        </amexio-box>\\n  </amexio-api-reference>\\n  <amexio-api-demo>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"4\\\">\\n      <amexio-card header=\\\"true\\\" [body-height]=\\\"50\\\">\\n        <amexio-header>\\n          Demo\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [label]=\\\"'Signup With Google'\\\" [api-key]=\\\"'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com'\\\"\\n                [type]=\\\"'google'\\\" (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [style-type]=\\\"'square'\\\" [api-key]=\\\"'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com'\\\"\\n                [type]=\\\"'google'\\\" (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [style-type]=\\\"'circle'\\\" [api-key]=\\\"'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com'\\\"\\n                [type]=\\\"'google'\\\" (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n    <amexio-column size=\\\"8\\\">\\n      <amexio-card header=\\\"true\\\" [body-height]=\\\"50\\\">\\n        <amexio-header>\\n          User Info After Login\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\" [fit]=\\\"true\\\">\\n              {{googleLoginData|json}}\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n  </amexio-api-demo>\\n  </amexio-api-structure>\"","/**\n * Created by sagar on 25/1/19.\n */\nimport {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'google-login-demo',\n  templateUrl: './googlelogin.demo.html',\n})\nexport class GoogleLoginDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  googleLoginData: any;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  onLoginClick(data: any) {\n    this.googleLoginData = data;\n  }\n\n  // TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    // HTML FILE\n    this.http.get('assets/data/code/forms/googlelogin/form.html', {responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    // TS FILE\n    this.http.get('assets/data/code/forms/googlelogin/form.text', {responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  // THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \" \\n \\n\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/linkedln.json'\\\">\\n  <amexio-api-reference><amexio-box border-color=\\\"brown\\\" border=\\\"left\\\" padding=\\\"true\\\" background-color=\\\"brown\\\">\\n          <amexio-label>\\n            Make sure api-key is created before use this component.refer Linkedin developer webside to create key <a href=\\\"https://developer.linkedin.com/docs/signin-with-linkedin\\\" target=\\\"_blank\\\">Linkedin Sign-In</a>\\n            <br/><br/>\\n          </amexio-label>\\n        </amexio-box>\\n  </amexio-api-reference>\\n  <amexio-api-demo>\\n <amexio-row>\\n    <amexio-column size=\\\"4\\\">\\n      <amexio-card header=\\\"true\\\" [body-height]=\\\"50\\\">\\n        <amexio-header>\\n          Demo\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [label]=\\\"'Signup With Linkedin'\\\" [api-key]=\\\"'8110cgvg7wbie7'\\\" [type]=\\\"'linkedin'\\\"\\n                (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [style-type]=\\\"'square'\\\" [api-key]=\\\"'8110cgvg7wbie7'\\\" [type]=\\\"'linkedin'\\\" (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n              <amexio-login-social [style-type]=\\\"'circle'\\\" [api-key]=\\\"'8110cgvg7wbie7'\\\" [type]=\\\"'linkedin'\\\" (onLogin)=\\\"onLoginClick($event)\\\"></amexio-login-social>\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n    <amexio-column size=\\\"8\\\">\\n      <amexio-card header=\\\"true\\\" [body-height]=\\\"50\\\">\\n        <amexio-header>\\n          User Info After Login\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"12\\\" [fit]=\\\"true\\\">\\n              {{linkedinLoginData|json}}\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n\\n  </amexio-api-demo>\\n  </amexio-api-structure>\"","/**\n * Created by sagar on 25/1/19.\n */\nimport {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'linkedin-login-demo', \n  templateUrl :'./linkedinlogin.demo.html',\n})\nexport class LinkedinLoginDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  linkedinLoginData: any;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  onLoginClick(data: any) {\n    this.linkedinLoginData = data;\n  }\n\n  // TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    // HTML FILE\n    this.http.get('assets/data/code/forms/linkedinlogin/form.html', {responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    // TS FILE\n    this.http.get('assets/data/code/forms/linkedinlogin/form.text', {responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  // THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/taginput.json'\\\">\\n    <amexio-api-demo>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-card header=\\\"true\\\">\\n            <amexio-header>\\n                Simple Tags Input\\n            </amexio-header>\\n            <amexio-body>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-tag-input [data-reader]=\\\"'data'\\\" [http-url]=\\\"'assets/data/componentdata/country.json'\\\"\\n                            [http-method]=\\\"'get'\\\" [key]=\\\"'countryName'\\\" [display-field]=\\\"'countryName'\\\" [value-field]=\\\"'countryName'\\\"\\n                            [field-label]=\\\"'Country Name'\\\" (onChange)=\\\"onRecordSelect($event)\\\">\\n                        </amexio-tag-input>\\n                    </amexio-column>\\n\\n                    <amexio-column [size]=\\\"6\\\">\\n\\n                        <amexio-card [header]=\\\"true\\\" [body-height]=\\\"50\\\">\\n                            <amexio-header>\\n                                Output Code\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <ng-container *ngIf=\\\"outputData\\\">\\n                                    <pre><code>  {{outputData|json}} </code></pre>\\n                                </ng-container>\\n                            </amexio-body>\\n                        </amexio-card>\\n\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-body>\\n        </amexio-card>\\n    </amexio-column>\\n</amexio-row>\\n\\n</amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'taginput-demo',\n  templateUrl: './taginput.demo.html',\n})\nexport class TagInputDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  outputData: any;\n  dataSource: string;\n  onRecordSelect(data: any) {\n    this.outputData = data;\n  }\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n    let responseData: any;\n    //HTML FILE\n    this.http.get('assets/data/code/forms/taginput/form.html', { responseType: 'text' }).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/forms/taginput/form.text', { responseType: 'text' }).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n    //JSON FILE\n    this.http.get('assets/data/componentdata/country.json', { responseType: 'text' }).subscribe(data => {\n      responseData = data;\n    }, error => {\n    }, () => {\n      this.dataSource = responseData;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/textinput.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Basic Text Field\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-text-input field-label=\\\"Name\\\" name=\\\"name\\\" place-holder=\\\"Enter name\\\" icon-feedback=\\\"true\\\"></amexio-text-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Input Without Label & Icon feedback\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-text-input name=\\\"name\\\" place-holder=\\\"Enter name\\\" has-label=\\\"false\\\"></amexio-text-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Min/Max Validations\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-text-input enable-popover=\\\"true\\\" [enable-popover]=\\\"true\\\" field-label=\\\"Name\\\" name=\\\"name\\\" place-holder=\\\"Enter name\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please Enter Name\\\" [min-length]=\\\"1\\\" min-error-msg=\\\"Minimum 1 Char Required\\\" [max-length]=\\\"10\\\"\\n                               max-error-msg=\\\"Maximum 10 Char Allowed\\\" [icon-feedback]=\\\"true\\\"></amexio-text-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Disabled Text Field\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-text-input name=\\\"name\\\" field-label=\\\"Name\\\" place-holder=\\\"Enter name\\\" disabled=\\\"true\\\"></amexio-text-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Font Styling\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-text-input field-label=\\\"Name\\\" name=\\\"name\\\" place-holder=\\\"Enter name\\\" icon-feedback=\\\"true\\\" font-style=\\\"italic\\\"></amexio-text-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Font Size & Family Styling\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-text-input [field-label]=\\\"'Name'\\\" name=\\\"name\\\" [place-holder]=\\\"'Enter name'\\\" [icon-feedback]=\\\"false\\\" [font-size]=\\\"'large'\\\"></amexio-text-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Input with Pattern\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-text-input name=\\\"name\\\" [field-label]=\\\"'Name'\\\" [place-holder]=\\\"'Enter name'\\\" [pattern]=\\\"'[a-z]'\\\" [icon-feedback]=\\\"true\\\"></amexio-text-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'text-demo',\n   templateUrl: './text.demo.html'\n})\nexport class TextDemo {\n  copyMsgArray: any[];\n\n  constructor() {}\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/textarea.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Basic TextArea Input\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-textarea-input [enable-popover]=\\\"true\\\"  [field-label]=\\\"'Textarea Input'\\\" name =\\\"Address\\\"\\n                                   [place-holder]=\\\"'permanent Address'\\\"\\n                                   [allow-blank]=\\\"false\\\" [error-msg] =\\\"'Please enter Address'\\\"\\n                                   [icon-feedback]=\\\"true\\\" [rows]=\\\"'4'\\\" [columns]=\\\"'2'\\\">\\n            </amexio-textarea-input>\\n\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            TextArea Input with rows 7 and columns 4\\n          </amexio-header>\\n          <amexio-body>\\n            <!--TextArea Input with rows 7 and columns 4-->\\n\\n            <amexio-textarea-input [field-label]=\\\"'Textarea Input'\\\" name =\\\"Address\\\"\\n                                   [place-holder]=\\\"'permanent Address'\\\"\\n                                   [allow-blank]=\\\"true\\\" [error-msg] =\\\"'Please enter Address'\\\"\\n                                   [icon-feedback]=\\\"true\\\" [rows]=\\\"'7'\\\" [columns]=\\\"'4'\\\">\\n            </amexio-textarea-input>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'textarea-demo',\n  templateUrl :'./textarea.demo.html',\n})\nexport class TextareaDemo {\n  copyMsgArray: any[];\n\n  constructor() {\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/toggle.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Round Toggle\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-toggle [field-label]=\\\"'Round'\\\"></amexio-toggle>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Square Toggle\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-toggle [field-label]=\\\"'Square'\\\" shape=\\\"square\\\" (onChange)=\\\"onSquareToggleClick($event)\\\"></amexio-toggle>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\\n\\n<amexio-notification [data]=\\\"toggleMsgArray\\\" [vertical-position]=\\\"'top'\\\" [horizontal-position]=\\\"'right'\\\"></amexio-notification>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'toggle-demo',\n  templateUrl :'./toggle.demo.html',\n})\nexport class ToggleDemo {\n  copyMsgArray: any[];\n  toggleMsgArray:any[];\n  constructor() {\n    this.toggleMsgArray=[];\n  }\n\n  //Square Toggle click event\n  onSquareToggleClick(data:any){\n    this.toggleMsgArray.push('Square Toggle Click');\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [url]=\\\"'assets/componentjson/forminputs/typeahead.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Simple Type Ahead Field\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-typeahead [data-reader]=\\\"'data'\\\"\\n                              [key]=\\\"'countryCode1'\\\"\\n                              [display-field]=\\\"'countryName'\\\"\\n                              [place-holder]=\\\"'Search'\\\"\\n                              [(ngModel)]=\\\"country\\\"\\n                              [http-url]=\\\"'assets/data/componentdata/country.json'\\\"\\n                              [http-method]=\\\"'get'\\\"\\n                              [field-label]=\\\"'Country Name'\\\">\\n            </amexio-typeahead>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card header=\\\"true\\\">\\n          <amexio-header>\\n            Selected Value\\n          </amexio-header>\\n          <amexio-body>\\n            {{country}}\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n</amexio-api-structure>\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'typeahead-demo',\n  templateUrl :'./typeahead.demo.html',\n})\nexport class TypeAheadDemo {\n  country: any;\n  copyMsgArray: any[];\n  typeAHeadData: any;\n  name: string;\n  constructor() {\n    this.typeAHeadData = {\n      \"data\": [{\"sportName\": \"Cricket\", \"code\": \"Ck\"}, {\"sportName\": \"Swimming\", \"code\": \"Sw\"}, {\n        \"sportName\": \"Golf\",\n        \"code\": \"Glf\"\n      }, {\"sportName\": \"Hockey\", \"code\": \"Hky\"}, {\"sportName\": \"Soccer\", \"code\": \"Scr\"}, {\n        \"sportName\": \"Formula One\",\n        \"code\": \"F1\"\n      }]\n    };\n  }\n\n  onTypeheadClick(data:any){\n    this.name=data.name;\n  }\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n"],"sourceRoot":""}