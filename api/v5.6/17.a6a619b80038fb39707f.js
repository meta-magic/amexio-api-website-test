(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"0hgq":function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/searchbox.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column [size]=12>\n        <amexio-card [header]="true" [footer]="false" >\n          <amexio-header>\n            Search Box\n          </amexio-header>\n          <amexio-body>\n\n            <amexio-searchbox\n              [place-holder]="\'Search\'"\n              [display-field]="\'subject\'"\n              [data]="bindData"\n              [width]="250"\n            >\n              <amexio-searchbox-options #search [title]="\'Advance search\'">\n\n                <amexio-text-input field-label="Subject:"\n                                   name="subject"\n                                   place-holder="Enter subject"\n                                   icon-feedback="true"\n                                   [(ngModel)]="subject"\n                >\n                </amexio-text-input>\n                <amexio-text-input field-label="From:"\n                                   name="from"\n                                   place-holder="Emailid"\n                                   icon-feedback="true"\n                                   [(ngModel)]="from"\n                >\n                </amexio-text-input>\n                <amexio-text-input field-label="To:"\n                                   name="To"\n                                   place-holder="Emailid"\n                                   icon-feedback="true"\n                                   [(ngModel)]="to"\n                >\n                </amexio-text-input>\n                <amexio-row><amexio-column [size]="\'12\'"></amexio-column></amexio-row>\n                <amexio-button\n                  [label]="\'Filter\'"\n                  [type]="\'theme-color\'"\n                  [tooltip]="\'toolTip\'"\n                  [size]="\'medium\'"\n                  (onClick)="filter(search)"\n                >\n                </amexio-button>\n              </amexio-searchbox-options>\n\n\n\n            </amexio-searchbox>\n\n\n          </amexio-body>\n        </amexio-card>\n\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},"0qVq":function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/checkbox.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Single Checkbox\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox [field-label]="\'I Agree terms and conditions\'" [(ngModel)]="check"\n                             (onSelection)="onCheckClick($event)"></amexio-checkbox>\n            <p>Selected Value : {{check}}</p>\n          </amexio-body>\n        </amexio-card>\n\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Single Checkbox with disable\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox [field-label]="\'Agree\'" disabled="true"></amexio-checkbox>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},"310c":function(e,o){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forminputs/dropdown.json\'">\n  <amexio-api-demo>\n\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Dropdown with Template\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-dropdown [(ngModel)]="id" [place-holder]="\'Choose\'" name="id" [data-reader]="\'data\'"\n                  [field-label]="\'Choose Country\'" [http-url]="\'assets/data/componentdata/gridtemplate.json\'"\n                  [http-method]="\'get\'" [search]="true" [display-field]="\'name\'" [value-field]="\'id\'" [enable-sort]="true"\n                  [sort]="\'asc\'" (onSingleSelect)="getRowData($event)">\n                  <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-label>\n                      <amexio-image [width]="100" [path]="\'assets/images/flags/flags/\'+row.flag_32"></amexio-image>\n                    </amexio-label>&nbsp;&nbsp;\n                    <amexio-label>{{row.name}}</amexio-label>\n                    <amexio-label>( {{row.name_official}} )</amexio-label>\n                  </ng-template>\n\n                </amexio-dropdown>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Selected Record Data\n          </amexio-header>\n          <amexio-body>\n            {{clickedRowData|json}}\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n\n\n  </amexio-api-demo>\n</amexio-api-structure>'},"3mc+":function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/typeahead.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Simple Type Ahead Field\n          </amexio-header>\n          <amexio-body>\n            <amexio-typeahead [data-reader]="\'data\'"\n                              [key]="\'countryCode1\'"\n                              [display-field]="\'countryName\'"\n                              [place-holder]="\'Search\'"\n                              [(ngModel)]="country"\n                              [http-url]="\'assets/data/componentdata/country.json\'"\n                              [http-method]="\'get\'"\n                              [field-label]="\'Country Name\'">\n            </amexio-typeahead>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Selected Value\n          </amexio-header>\n          <amexio-body>\n            {{country}}\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},"74Hw":function(e,o){e.exports='\n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/google.json\'">\n  <amexio-api-reference><amexio-box border-color="brown" border="left" padding="true" background-color="brown">\n          <amexio-label>\n            Make sure api-key is created before use this component.refer google developer webside to create key <a href="https://developers.google.com/identity/sign-in/web/sign-in" target="_blank">Google Sign-In</a>\n            <br/><br/>\n          </amexio-label>\n        </amexio-box>\n  </amexio-api-reference>\n  <amexio-api-demo>\n\n<amexio-row>\n    <amexio-column size="4">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          Demo\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [label]="\'Signup With Google\'" [api-key]="\'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com\'"\n                [type]="\'google\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'square\'" [api-key]="\'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com\'"\n                [type]="\'google\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'circle\'" [api-key]="\'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com\'"\n                [type]="\'google\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column size="8">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          User Info After Login\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12" [fit]="true">\n              {{googleLoginData|json}}\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n  </amexio-api-demo>\n  </amexio-api-structure>'},"79yA":function(e,o){e.exports='  \n  \n<amexio-api-structure  [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forminputs/dropdown.json\'">\n  <amexio-api-demo>\n\n  <amexio-row>\n    <amexio-column size="6">\n      <amexio-card header="true">\n        <amexio-header>\n           Dropdown Component \n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-dropdown [(ngModel)]="countryCode1"\n                               [place-holder]="\'Choose\'"\n                               name="countryCode1"\n                               [data-reader]="\'data\'"\n                               [field-label]="\'Choose Country\'"\n                               [http-url]="\'assets/data/componentdata/country.json\'"\n                               [http-method]="\'get\'"\n                               [display-field]="\'countryName\'"\n                               [value-field]="\'countryCode1\'"\n                               [enable-sort]="true"\n                               [sort]="\'asc\'"\n              >\n              </amexio-dropdown>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column [size]="6">\n      <amexio-card header="true">\n        <amexio-header>\n          Selected Record Data\n        </amexio-header>\n        <amexio-body>\n        <ng-container *ngIf="countryCode1">\n          {{countryCode1}}\n        </ng-container>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n  <amexio-row>\n    <amexio-column size="6">\n      <amexio-card header="true">\n        <amexio-header>\n           Dropdown Component with Inner Structure\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-dropdown [(ngModel)]="personName"\n                               [place-holder]="\'Choose\'"\n                               name="countryCode1"\n                               [data-reader]="\'data\'"\n                               [field-label]="\'Address\'"\n                               [http-url]="\'assets/data/componentdata/personProfile.json\'"\n                               [http-method]="\'get\'"\n                               [display-field]="\'address.addressLabel\'"\n                               [value-field]="\'personName\'"\n                               [enable-sort]="true"\n                               [sort]="\'asc\'"\n              >\n              </amexio-dropdown>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column [size]="6">\n      <amexio-card header="true">\n        <amexio-header>\n          Owner\n        </amexio-header>\n        <amexio-body>\n        <ng-container *ngIf="personName">\n          {{personName}}\n        </ng-container>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n  </amexio-api-demo>\n  </amexio-api-structure>\n'},HVHI:function(e,o){e.exports='\n\n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/fileupload.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Basic File Upload\n          </amexio-header>\n          <amexio-body>\n            <amexio-fileupload [http-url]="\'/upload\'" [http-method]="\'POST\'"\n                               [file-type]="\'image/*\'" [multiple-file]="\'*\'" [field-label]="\'Photo Upload\'">\n            </amexio-fileupload>\n          </amexio-body>\n        </amexio-card>\n\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Drag Drop File Upload\n          </amexio-header>\n          <amexio-body>\n            <amexio-fileupload [http-url]="\'/upload\'" [http-method]="\'POST\'" [file-type]="\'image/*\'" [field-label]="\'Photo Upload\'" droppable="true"></amexio-fileupload>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},I72g:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/password.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic Password Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-password-input [enable-popover]="true"  [field-label]="\'Password Input\'" name ="password"\n                                   [place-holder]="\'Enter Password\'"\n                                   [allow-blank]="false"\n                                   [error-msg] ="\'Please enter password\'"\n                                   [min-length]="6"\n                                   [min-error-msg]="\'Minimum 6 char required\'"\n                                   [max-length]="32"\n                                   [max-error-msg]="\'Maximum 32 char allowed\'"\n                                   [icon-feedback]="true">\n            </amexio-password-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Password Input without Label\n          </amexio-header>\n          <amexio-body>\n            <amexio-password-input name ="password"\n                                   [place-holder]="\'Enter Password\'"\n                                   [allow-blank]="false"\n                                   [error-msg] ="\'Please enter password\'"\n                                   [min-length]="6"\n                                   [min-error-msg]="\'Minimum 6 char required\'"\n                                   [max-length]="32"\n                                   [max-error-msg]="\'Maximum 32 char allowed\'"\n                                   [icon-feedback]="true"\n                                   [has-label]="false">\n            </amexio-password-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},JftQ:function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/radiogroup.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Radio Group\n          </amexio-header>\n          <amexio-body>\n            <amexio-radio-group [field-label]="\'Horizontal Radio Group\'"\n                                name ="gender"\n                                [data-reader]="\'response.data\'"\n                                [display-field]="\'gender\'"\n                                [value-field]="\'genderId\'"\n                                [horizontal]="true"\n                                [data]="radioGroupData"\n                                [(ngModel)]="model1"\n                                (onSelection)="setSelectedGender($event)">\n            </amexio-radio-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Vertical Radio Group With Http Url\n          </amexio-header>\n          <amexio-body>\n            <amexio-radio-group [field-label]="\'Vertical Radio Group\'" name ="gender1"\n                                [data-reader]="\'data\'"\n                                [display-field]="\'gender\'"\n                                [value-field]="\'genderId\'"\n                                [http-method]="\'get\'"\n                                [(ngModel)]="model2"\n                                [http-url]="\'assets/data/componentdata/radiogroup.json\'"\n                                (onSelection)="setSelectedGender($event)">\n            </amexio-radio-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Radio Group Disabled\n          </amexio-header>\n          <amexio-body>\n            <amexio-radio-group [field-label]="\'Horizontal Radio Group\'" name ="gendery"\n                                [data-reader]="\'radiodata\'"\n                                [display-field]="\'gender\'"\n                                [value-field]="\'genderId\'"\n                                [http-method]="\'get\'"\n                                horizontal="true"\n                                [(ngModel)]="model3"\n                                [http-url]="\'assets/data/componentdata/radiogroup.json\'"\n                                disabled="true">\n            </amexio-radio-group>\n\n\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Radio Group single item disabled\n          </amexio-header>\n          <amexio-body>\n\n            <amexio-radio-group [field-label]="\'Horizontal Radio Group \'" name ="genderx"\n                                [data-reader]="\'data\'"\n                                [(ngModel)]="model4"\n                                [display-field]="\'gender\'"\n                                [value-field]="\'genderId\'"\n                                [http-method]="\'get\'"\n                                horizontal="true"\n                                [http-url]="\'assets/data/componentdata/radiogroup_disable.json\'"\n            >\n            </amexio-radio-group>\n            <h2>Radio Group model Binding value </h2>\n            {{model4 | json}}\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},Jrhs:function(e,o){e.exports='\n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/number.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic Number Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-number-input [field-label]="\'Number Input\'"\n                                 [place-holder]="\'Enter Age\'">\n            </amexio-number-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Number Input With Disable\n          </amexio-header>\n          <amexio-body>\n            <amexio-number-input\n              [place-holder]="\'Enter age\'"\n              [icon-feedback]="false"\n              [has-label]="false" [disabled]="true">\n            </amexio-number-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Number Input Font Style\n          </amexio-header>\n          <amexio-body>\n            <amexio-number-input [field-label]="\'Age\'"\n                                 [place-holder]="\'Enter Age\'"\n                                 [font-style]="\'italic\'">\n            </amexio-number-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Number Input With Min/Max Validation\n          </amexio-header>\n          <amexio-body>\n            <amexio-number-input  [enable-popover]="true" [field-label]="\'Age\'"\n                                  [place-holder]="\'Enter age\'"\n                                  [allow-blank]="false" [error-msg] ="\'Please enter age\'"\n                                  [min-value]="1"\n                                  [min-error-msg]="\'age can not be less than 1\'"\n                                  [max-value]="100"  [max-error-msg]="\'age can not be greater than 100\'"\n                                  [icon-feedback]="true"\n            >\n            </amexio-number-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},KMof:function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/textinput.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic Text Field\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input field-label="Name" name="name" place-holder="Enter name" icon-feedback="true"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Input Without Label & Icon feedback\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input name="name" place-holder="Enter name" has-label="false"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Min/Max Validations\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input enable-popover="true" [enable-popover]="true" field-label="Name" name="name" place-holder="Enter name" [allow-blank]="false" error-msg="Please Enter Name" [min-length]="1" min-error-msg="Minimum 1 Char Required" [max-length]="10"\n                               max-error-msg="Maximum 10 Char Allowed" [icon-feedback]="true"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Disabled Text Field\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input name="name" field-label="Name" place-holder="Enter name" disabled="true"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Font Styling\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input field-label="Name" name="name" place-holder="Enter name" icon-feedback="true" font-style="italic"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Font Size & Family Styling\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input [field-label]="\'Name\'" name="name" [place-holder]="\'Enter name\'" [icon-feedback]="false" [font-size]="\'large\'"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Input with Pattern\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input name="name" [field-label]="\'Name\'" [place-holder]="\'Enter name\'" [pattern]="\'[a-z]\'" [icon-feedback]="true"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},LVwy:function(e,o){e.exports='   \n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/badge.json\'">\n    <amexio-api-demo>\n   <amexio-row>\n        <amexio-column [size]="12">\n            <amexio-card [header]="true">\n                <amexio-header>\n                    Badge Demo\n                </amexio-header>\n                <amexio-body>\n                    <amexio-row>\n                        <amexio-column size="6">\n                            <amexio-card-ce>\n                                <amexio-image width="100%" path="assets/images/cardce/burger.jpg"></amexio-image>\n                                <amexio-badge [absolute]="true" [background]="\'red\'" [color]="\'white\'" [top]="\'0px\'" [right]="\'0px\'">\n                                    <amexio-label size="red">Non-Veg</amexio-label>\n                                </amexio-badge>\n\n                                <amexio-header-ce [border-bottom]="true" [align]="\'space-between\'">\n                                    <amexio-label size="medium-bold">Burger lovers</amexio-label>\n                                    <amexio-image [icon-class]="\'fa fa-phone fa-1x\'" [tooltip]="\'Phone\'"></amexio-image>\n                                </amexio-header-ce>\n                                <amexio-body-ce>\n                                    <amexio-label>Tonight\'s availability</amexio-label> <br />\n                                    <amexio-chips *ngFor="let item of [\'07:00\', \'08:00\', \'09:00\', \'11:00\']">\n                                        <amexio-chip [label]="item" [color]="item.color"> </amexio-chip>\n                                    </amexio-chips>\n                                </amexio-body-ce>\n                            </amexio-card-ce>\n\n                        </amexio-column>\n                        <amexio-column size="6">\n                            <amexio-card-ce>\n                                <amexio-header-ce>\n                                    <amexio-image width="50px" height="50px" [filter]="\'round\'" path="https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/022014/triumph_motorcycles_2013.jpg?itok=rysgr_NR"></amexio-image>\n                                    <amexio-label size="medium-bold">Triumph Bonneville T120 </amexio-label>\n                                </amexio-header-ce>\n                                <amexio-image width="100%" path="http://imagesvc.timeincapp.com/v3/foundry/image/?q=70&w=1440&url=https%3A%2F%2Ftimedotcom.files.wordpress.com%2F2018%2F12%2F3201_spt_2019_20191540_original-2.jpg%3Fquality%3D85"></amexio-image>\n                                <amexio-badge [absolute]="true" [background]="\'#e74c3c\'" [color]="\'white\'" [top]="\'6%\'" [right]="\'5%\'">\n                                    <amexio-label size="large">2019</amexio-label>\n                                    <amexio-label>Jan</amexio-label>\n                                </amexio-badge>\n\n                                <amexio-body-ce>\n                                    <p>\n                                        It accomplishes that goal with unique finishes and a limited production run. Let\u2019s take a look at what makes the 2019 Triumph Bonneville T120 Diamond Edition a special motorcycle.\n                                    </p>\n                                </amexio-body-ce>\n                                <amexio-action-ce>\n                                    <amexio-button [label]="\'BUY\'" [type]="\'transparent\'" [tooltip]="\'BUY\'">\n                                    </amexio-button>\n                                    <amexio-button [label]="\'SELL\'" [type]="\'transparent\'" [tooltip]="\'SELL\'">\n                                    </amexio-button>\n                                </amexio-action-ce>\n                            </amexio-card-ce>\n                        </amexio-column>\n                    </amexio-row>\n                </amexio-body>\n            </amexio-card>\n        </amexio-column>\n    </amexio-row>\n    </amexio-api-demo>\n    </amexio-api-structure>'},MKDr:function(e,o){e.exports='\n \n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/checkboxgroup.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Vertical Checkbox With Http Url\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox-group [field-label]="\'Vertical Checkbox\'" name="language"\n                                   [data-reader]="\'data\'"\n                                   [display-field]="\'language\'"\n                                   [value-field]="\'checked\'"\n                                   [http-method]="\'get\'"\n                                   [http-url]="\'assets/data/componentdata/checkgroup.json\'">\n            </amexio-checkbox-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Checkbox\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox-group [field-label]="\'Horizontal Checkbox\'" name="language"\n                                   [data-reader]="\'response.data\'"\n                                   [display-field]="\'language\'"\n                                   [horizontal]="true"\n                                   [value-field]="\'checked\'"\n                                   (onSelection)="selectedCheckboxgroup($event)"\n                                   [data]="checkboxGroupdata">\n            </amexio-checkbox-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Checkbox with disabled single item.\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox-group [field-label]="\'Horizontal Checkbox\'" name="language"\n                                   [data-reader]="\'response.data\'"\n                                   [display-field]="\'language\'"\n                                   [horizontal]="true"\n                                   [value-field]="\'checked\'"\n                                   [data]="checkboxGroupdatadisabled">\n            </amexio-checkbox-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Checkbox with disabled all item.\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox-group [field-label]="\'Horizontal Checkbox with disable\'" name="language"\n                                   [data-reader]="\'response.data\'"\n                                   [display-field]="\'language\'"\n                                   [horizontal]="true"\n                                   name="disabledcheckbox"\n                                   [disabled]="true"\n                                   [value-field]="\'checked\'"\n                                   [data]="checkboxGroupdatadisabledallitem">\n            </amexio-checkbox-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},REX1:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/datetimepicker.json\'">\n    <amexio-api-demo>\n        <amexio-row>\n            <amexio-column [size]="6">\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Inline Date Picker with min,max and disabled date\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n                                \x3c!-- ---1--- --\x3e\n                                <amexio-date-time-picker [inline-datepicker]="true" [field-label]="\'Date Of Birth\'" [time-picker]="false" [date-picker]="true" [min-date]="\'22-Mar-2016\'" [max-date]="\'22-Feb-2019\'" [disabled-date]="disabledDate" [(ngModel)]="currentDate1">\n                                </amexio-date-time-picker>\n\n\n\n\n\n                            </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                    <amexio-action>\n                        {{currentDate1}}\n                    </amexio-action>\n                </amexio-card>\n\n            </amexio-column>\n            <amexio-column [size]="6">\n                \x3c!-- -2- --\x3e\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Time Picker\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n                                <amexio-date-time-picker [field-label]="\'Time Of Birth\'" [time-picker]="true" [date-picker]="false" [min-date]="\'Thu Jul 25 2017 00:00:00 GMT+0530 (IST)\'" [ngModel]="time" (change)="onChangeTime($event)">\n                                </amexio-date-time-picker>\n                            </amexio-column>\n                        </amexio-row>\n                    </amexio-body>\n                    <amexio-action>\n                        {{time}}\n                    </amexio-action>\n                </amexio-card>\n\n            </amexio-column>\n\n        </amexio-row>\n        <amexio-row>\n            <amexio-column [size]="\'6\'">\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Date Picker with min,max date\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n                                \x3c!-- --3-- --\x3e\n\n                                <amexio-date-time-picker [field-label]="\'Date Of Birth\'" [place-holder]="\'Date Of Birth\'" [time-picker]="false" [date-picker]="true" [min-date]="\'22-Mar-2016\'" [max-date]="\'22-Feb-2019\'" [(ngModel)]="currentDate">\n                                </amexio-date-time-picker>\n\n\n\n\n                            </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                    <amexio-action>\n                        {{currentDate}}\n                    </amexio-action>\n                </amexio-card>\n            </amexio-column>\n            \x3c!-- ------4---------- --\x3e\n            <amexio-column [size]="\'6\'">\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Date Picker with Year dropdown and disabled date\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n\n                                <amexio-date-time-picker [dropdown-datepicker]="true" [field-label]="\'Date Of Birth\'" [time-picker]="false" [date-picker]="true" [disabled-date]="disabledDate" [(ngModel)]="currentDate2">\n                                </amexio-date-time-picker>\n                            </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                    <amexio-action>\n                        {{currentDate2}}\n                    </amexio-action>\n                </amexio-card>\n            </amexio-column>\n        </amexio-row>\n    </amexio-api-demo>\n</amexio-api-structure>'},RGbX:function(e,o){e.exports='\n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/email.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic Email Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-email-input [field-label]="\'Email Id\'" name ="email"\n                                [place-holder]="\'Enter Email Id\'"\n                                [allow-blank]="false" [error-msg] ="\'Please Enter Email Id\'"\n                                [enable-popover]="true"\n                                [icon-feedback]="true">\n            </amexio-email-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Email Input With Disable\n          </amexio-header>\n          <amexio-body>\n            <amexio-email-input name ="email" [field-label]="\'Email Id\'"\n                                [place-holder]="\'Enter Email Id\'"\n                                [disabled]="true">\n            </amexio-email-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Email Input Font Style\n          </amexio-header>\n          <amexio-body>\n            <amexio-email-input [field-label]="\'Email Id\'" name ="email"\n                                [place-holder]="\'Enter Email Id\'"\n                                [icon-feedback]="true"\n                                [font-style]="\'italic\'">\n            </amexio-email-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Font Family\n          </amexio-header>\n          <amexio-body>\n            <amexio-email-input name ="email" [field-label]="\'Email Id\'"\n                                [place-holder]="\'Enter Email Id\'"\n                                [font-family]="\'Times New Roman\'"\n                                [font-size]="\'large\'">\n            </amexio-email-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},RUvJ:function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/toggle.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Round Toggle\n          </amexio-header>\n          <amexio-body>\n            <amexio-toggle [field-label]="\'Round\'"></amexio-toggle>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Square Toggle\n          </amexio-header>\n          <amexio-body>\n            <amexio-toggle [field-label]="\'Square\'" shape="square" (onChange)="onSquareToggleClick($event)"></amexio-toggle>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n\n\n<amexio-notification [data]="toggleMsgArray" [vertical-position]="\'top\'" [horizontal-position]="\'right\'"></amexio-notification>\n'},RcL4:function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/textarea.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic TextArea Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-textarea-input [enable-popover]="true"  [field-label]="\'Textarea Input\'" name ="Address"\n                                   [place-holder]="\'permanent Address\'"\n                                   [allow-blank]="false" [error-msg] ="\'Please enter Address\'"\n                                   [icon-feedback]="true" [rows]="\'4\'" [columns]="\'2\'">\n            </amexio-textarea-input>\n\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            TextArea Input with rows 7 and columns 4\n          </amexio-header>\n          <amexio-body>\n            \x3c!--TextArea Input with rows 7 and columns 4--\x3e\n\n            <amexio-textarea-input [field-label]="\'Textarea Input\'" name ="Address"\n                                   [place-holder]="\'permanent Address\'"\n                                   [allow-blank]="true" [error-msg] ="\'Please enter Address\'"\n                                   [icon-feedback]="true" [rows]="\'7\'" [columns]="\'4\'">\n            </amexio-textarea-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},SL4k:function(e,o){e.exports='\n <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forminputs/dropdown.json\'">\n  <amexio-api-demo>\n<amexio-row>\n    <amexio-column size="6">\n      <amexio-card header="true">\n        <amexio-header>\n           Dropdown Multi Select Component \n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-dropdown\n                [place-holder]="\'Choose\'"\n                [field-label]="\'Choose Fruit\'"\n                [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/fruits.json\'"\n                [display-field]="\'fruitName\'" [value-field]="\'code\'"\n                [data-reader]="\'data\'"\n                [multi-select]="true"\n                (onMultiSelect)="onMultiSelectValue($event)"\n                [enable-sort]="true"\n                [sort]="\'asc\'"\n              >\n              </amexio-dropdown>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column [size]="6">\n      <amexio-card header="true">\n        <amexio-header>\n          Selected Record Data\n        </amexio-header>\n        <amexio-body>\n          <ng-container *ngIf="listOfFriut">\n            {{listOfFriut|json}}\n          </ng-container>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n\n  </amexio-api-demo>\n  </amexio-api-structure>'},SpD7:function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/label.json\'">\n    <amexio-api-demo>\n        <h2>Label Component</h2>\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-label size="large">This is large amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="large-bold">This is large-bold amexio label </amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="medium-bold">This is medium-bold amexio label</amexio-label>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-label>This is small amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="small-bold">This is small-bold amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="medium-bold" font-color="#FF5733">This is amexio label</amexio-label>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <h2>Label Component With Badges </h2>\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-label size="large" [badge]="1">This is large amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="large-bold" [badge]="2">This is large-bold amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="medium-bold" [badge]="3">This is medium-bold amexio label</amexio-label>\n            </amexio-column>\n        </amexio-row>\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-label size="small" [badge]="3">This is small amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="small-bold" [badge]="2">This is small-bold amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="medium-bold" font-color="#FF5733" [badge]="5">This is medium-bold amexio\n                    label</amexio-label>\n            </amexio-column>\n        </amexio-row>\n        <h2>Box Component</h2>\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-box border-color="red" border="top" padding="true" closable="\'true\'">\n                    <amexio-label>This is small-bold amexio label with red border</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border-color="blue" border="bottom" padding="true">\n                    <amexio-label>This is small-bold amexio label with blue border</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border-color="yellow" border="right" padding="true">\n                    <amexio-label>This is small-bold amexio label with yellow border</amexio-label>\n                </amexio-box>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-box border-color="green" border="left" padding="true">\n                    <amexio-label>This is small-bold amexio label with green border</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box background-color="purple" padding="true">\n                    <amexio-label>This is small-bold amexio label with purple bg color</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box background-color="yellow" padding="true">\n                    <amexio-label>This is small-bold amexio label with background-color yellow</amexio-label>\n                </amexio-box>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-box background-color="red" padding="true">\n                    <amexio-label>This is small-bold amexio label with background-color red</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box background-color="blue" padding="true">\n                    <amexio-label>This is small-bold amexio label with background-color blue</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border-color="green" border="bottom" padding="true" background-color="yellow">\n                    <amexio-label>This is small-bold amexio label with background-color green</amexio-label>\n                </amexio-box>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <amexio-row>\n\n            <amexio-column [size]="4">\n                <amexio-box border-color="brown" border="right-left" padding="true" background-color="brown">\n                    <amexio-label>This is small-bold amexio label with background-color</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border-color="purple" border="all" padding="true" background-color="purple" box-height="100px"\n                    box-width="282px">\n                    <amexio-text-input field-label="Aadhar No" name="name" place-holder="Enter aadhar card no"\n                        icon-feedback="true">\n                    </amexio-text-input>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border="top-bottom" padding="true">\n                    <amexio-label>This is small-bold amexio label with background-color</amexio-label>\n                </amexio-box>\n            </amexio-column>\n        </amexio-row>\n\n    </amexio-api-demo>\n\n</amexio-api-structure>\n'},SsRe:function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/slider.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Simple Slider\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column [size]="6">\n                <amexio-slider [(ngModel)]="stepVal1"></amexio-slider>\n                {{stepVal1}}\n              </amexio-column>\n              <amexio-column [size]="6">\n                <amexio-slider disabled = "true" min-value="0" max-value="50" [step-value]="2" [(ngModel)]="stepVal2"></amexio-slider>\n                {{stepVal2}}\n              </amexio-column>\n            </amexio-row>\n            <amexio-row>\n              <amexio-column size="12">\n                <b>Vertical Slider</b>\n                <amexio-slider [style]="{\'height\':\'200px\'}" orientation="vertical"></amexio-slider>\n\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},"VI+7":function(e,o,a){"use strict";a.r(o);var n=a("CcnG"),t=a("O4vx"),i=a("gIcY"),r=a("Ip0R"),m=a("t/Na"),c=a("d2mR"),l=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},d=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},s=function(){function e(){this.check=!1,this.checkWithDisable=!0}return e.prototype.onCheckClick=function(e){},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=l([Object(n.n)({selector:"singlecheckbox-demo",template:a("0qVq")}),d("design:paramtypes",[])],e)}(),p=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},u=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},x=function(){function e(){this.checkboxGroupdata={response:{data:[{language:"Angular 2",checked:!1,disabled:!1},{language:"JAVA",checked:!0,disabled:!1},{language:"C++",checked:!1,disabled:!1}]}},this.checkboxGroupdatadisabled={response:{data:[{language:"Angular 2",checked:!1,disabled:!1},{language:"JAVA",checked:!0,disabled:!0},{language:"C++",checked:!1,disabled:!1}]}},this.checkboxGroupdatadisabledallitem={response:{data:[{language:"Angular 2",checked:!1},{language:"JAVA",checked:!0},{language:"C++",checked:!1}]}}}return e.prototype.selectedCheckboxgroup=function(e){},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=p([Object(n.n)({selector:"checkboxgroup-demo",template:a("MKDr")}),u("design:paramtypes",[])],e)}(),f=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},h=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},g=function(){function e(){this.sampledatachips=[{icon:"fa fa-home",label:"Home",color:"turquoise",badge:4,closable:!0},{icon:"fa fa-download",label:"Download",color:"lightblue",badge:5,closable:!1},{icon:"fa fa-camera",label:"Camera",color:"lightgreen",badge:6,closable:!0},{icon:"fa fa-fire-extinguisher",label:"Fire Extinguisher",color:"yellow",badge:7,closable:!0},{icon:"fa fa-ambulance",label:"Emergency",color:"pink",badge:8,closable:!0}],this.sampledatachip=[{icon:"fa fa-linkedin-square",label:"Linkedin",color:"pink",badge:4,closable:!0},{icon:"fa fa-internet-explorer",label:"Internet-Explorer",color:"lightblue",badge:5,closable:!1},{icon:"fa fa-github",label:"Github",color:"lightgreen",badge:6,closable:!0},{icon:"fa fa-twitter",label:"Twitter",color:"lightblue",badge:7,closable:!0},{icon:"fa fa-reddit",label:"Reddit",color:"",badge:8,closable:!0}]}return e.prototype.onChipDataLabelClick=function(e){this.emitdatachips=e},e.prototype.onChipDataCloseClick=function(e){this.emitdatachip=e},e.prototype.onChipsLabelClick=function(e){this.multipleemitchips=e},e.prototype.onCloseClick=function(e){this.multipleemitchip=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=f([Object(n.n)({selector:"chips-demo",template:a("w1fk")}),h("design:paramtypes",[])],e)}(),b=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},y=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},w=function(){function e(){this.creditcard=new t.b}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=b([Object(n.n)({selector:"credit-card-demo",template:a("jVkV")}),y("design:paramtypes",[])],e)}(),k=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},C=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},j=function(){function e(){this.date=new Date("March 21, 2018 01:15:00"),this.disabledDate=[{from:"13-Jul-2018",to:"15-Jul-2018"},{from:"20-Jul-2018",to:"23-Jul-2018"},{from:"15-Jun-2018",to:"19-Jun-2018"},{from:"27-Jun-2018",to:"29-Jun-2018"},{from:"23-Aug-2018",to:"28-Aug-2018"},{from:"17-Aug-2018",to:"19-Aug-2018"},{from:"19-Sep-2018",to:"21-Sep-2018"},{from:"25-Sep-2018",to:"28-Sep-2018"}]}return e.prototype.onChangeTime=function(e){this.time=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=k([Object(n.n)({selector:"date-picker-demo",template:a("REX1")}),C("design:paramtypes",[])],e)}(),R=a("f4zW"),M=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},v=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},D=function(){function e(){this.customSourceData=new R.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Dropdown",this.customSourceData.description="Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.",this.customSourceData.sourceMetadata.htmlUrl="forms/dropdown/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/dropdown/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.sourceMetadata.datasourceUrl1="assets/data/componentdata/personProfile.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dropdown?embed=1&file=app/forms/dropdown/dropdown.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=M([Object(n.n)({selector:"dropdownbasic",template:a("79yA")}),v("design:paramtypes",[])],e)}(),A=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},z=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},O=function(){function e(e){this.http=e,this.customSourceData=new R.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Dropdown Filter ",this.customSourceData.description="Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.",this.customSourceData.sourceMetadata.htmlUrl="forms/dropdownfilter/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/dropdownfilter/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dropdown-filter?embed=1&file=app/forms/dropdownfilter/dropdownfilter.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=A([Object(n.n)({selector:"dropdownfilter",template:a("du5V")}),z("design:paramtypes",[m.a])],e)}(),S=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},P=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},T=function(){function e(e){this.http=e,this.listOfFriut=[],this.customSourceData=new R.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Dropdown Multi Select ",this.customSourceData.description="Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.",this.customSourceData.sourceMetadata.htmlUrl="forms/dropdownmulti/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/dropdownmulti/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/fruits.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dropdown-multiselect?embed=1&file=app/forms/dropdownmulti/dropdownmulti.demo.html&view=editor"},e.prototype.onMultiSelectValue=function(e){var o=this;this.listOfFriut=[],e.forEach(function(e){o.listOfFriut.push(e)})},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=S([Object(n.n)({selector:"dropdownmulti",template:a("SL4k")}),P("design:paramtypes",[m.a])],e)}(),I=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},L=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},F=function(){function e(e){this.http=e,this.customSourceData=new R.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Dropdown With Template ",this.customSourceData.description="Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.",this.customSourceData.sourceMetadata.htmlUrl="forms/dropdowntemplate/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/dropdowntemplate/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/gridtemplate.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dropdown-template?embed=1&file=app/forms/dropdown/dropdown.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getRowData=function(e){this.clickedRowData=e},e=I([Object(n.n)({selector:"dropdowntemplate",template:a("310c")}),L("design:paramtypes",[m.a])],e)}(),E=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},N=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},U=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=E([Object(n.n)({selector:"email-demo",template:a("RGbX")}),N("design:paramtypes",[])],e)}(),H=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},V=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},G=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=H([Object(n.n)({selector:"fileupload-demo",template:a("HVHI")}),V("design:paramtypes",[])],e)}(),q=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},J=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},B=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=q([Object(n.n)({selector:"label-demo",template:a("SpD7")}),J("design:paramtypes",[])],e)}(),$=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},W=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},_=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=$([Object(n.n)({selector:"number-demo",template:a("Jrhs")}),W("design:paramtypes",[])],e)}(),Y=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},X=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Z=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Y([Object(n.n)({selector:"password-demo",template:a("I72g")}),X("design:paramtypes",[])],e)}(),K=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},Q=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ee=function(){function e(){this.model1="male",this.model2="female",this.model3="male1",this.model4="female",this.radioGroupData={response:{data:[{gender:"Male",genderId:"male"},{gender:"Female",genderId:"female"}]}}}return e.prototype.setSelectedGender=function(e){},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=K([Object(n.n)({selector:"radiogroup-demo",template:a("JftQ")}),Q("design:paramtypes",[])],e)}(),oe=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},ae=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ne=function(){function e(){this.max=10,this.rate=7,this.profileMaxRate=5,this.customIconRate=10,this.customRate=5,this.profileRate=2,this.disableProfileRate=3,this.disableProfileMaxRate=5,this.isReadonly=!1,this.titles=["Poor","Fair","Average","Good","Excellent"]}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=oe([Object(n.n)({selector:"rating-demo",template:a("n8uM")}),ae("design:paramtypes",[])],e)}(),te=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},ie=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},re=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.onSuccess=function(e){this.response=e},e.prototype.onFailure=function(e){this.response=e},e=te([Object(n.n)({selector:"recaptcha-demo",template:a("VcZQ")}),ie("design:paramtypes",[])],e)}(),me=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},ce=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},le=function(){function e(e){this.element=e,this.subject="",this.from="",this.to="",this.bindData=[],this.localData=[{from:"araf.karsh@metamagic.in",subject:"amexio release plans",to:"ketan.gote@metamagic.in"},{from:"araf.karsh@metamagic.in",subject:"visual studio extension",to:"engineering@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"amexio on angular.io",to:"engineering@metamagic.in "},{from:"deepali.arvind@metamagic.in",subject:"amexio npm download spike",to:"ketan.gote@metamagic.in"},{from:"dattaram.gawas@metamagic.in ",subject:"building web components",to:"ketan.gote@metamagic.in"},{from:"sagar.jadhav@metamagic.in",subject:"showcase app url",to:"deepali.arvind@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"spring cloud stream demo",to:"deepali.arvind@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"spring microservice demo",to:"deepali.arvind@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"spring kafka integration",to:"sagar.jadhav@metamagic.in"},{from:"ankita.Jain@metamagic.in",subject:"jsr Implementation",to:"ketan.gote@metamagic.in"},{from:"mahesh.pardeshi@metamagic.in",subject:"axon cqrs demo",to:"ketan.gote@metamagic.in"},{from:"pratik.kelwalkar@metamagic.in",subject:"angular routing",to:"sagar.jadhav@metamagic.in"},{from:"dattaram.gawas@metamagic.in",subject:"angular pipes",to:"ashwini.agre@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"ribbon, hysterix",to:"dattaram.gawas@metamagic.in "},{from:"deepali.arvind@metamagic.in",subject:"eureka server using spring cloud",to:"ketan.gote@metamagic.in"},{from:"kedar.kokil@metamagic.in",subject:"rx java",to:"ashwini.agre@metamgic.in"},{from:"manisha.boddu@metamgic.in",subject:"spring + mongo db",to:"ketan.gote@metamagic.in"},{from:"araf.karsh@metamagic.in",subject:"flux / redux architecture",to:"ketan.gote@metamgic.in"},{from:"ketan.gote@metamagic.in",subject:"desire platform git repos",to:"rashmi.thakkar@metamagic.in"},{from:"ashwini.agre@metamagic.in",subject:"pwa from react to angular/ionic",to:"sagar.jadhav@metamagic.in"},{from:"rashmi.thakkar@metamagic.in",subject:"messages in platform",to:"ankita.jain@metamagic.in"},{from:"araf.karsh@metamagic.in",subject:"typeScript secret weapon...",to:"sagar.jadhav@metamagic.in"},{from:"araf.karsh@metamagic.in",subject:"visual studio code plugin",to:"sagar.jadhav@metamagic.in"},{from:"kedar.kokil@metamagic.in",subject:"hashing algo",to:"dattaram.gawas@metamagic.in "},{from:"sagar.jadhav@metamagic.in ",subject:"vs code for windows, linux and mac os",to:"dattaram.gawas@metamagic.in "},{from:"dattaram.gawas@metamagic.in",subject:"chart library - open source",to:"rashmi.thakkar@metamagic.in"},{from:"ankita.jain@metamagic.in",subject:"tdom uptos in angular",to:"manisha.boddu@metamagic.in"},{from:"dattaram.gawas@metamagic.in ",subject:"hampi release",to:"sagar.jadhav@metamagic.in"},{from:"manisha.boddu@metamagic.in",subject:"building web components",to:"ankita.jain@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"spring + redis ",to:"deepali.arvind@metamagic.in"},{from:"rashmi.thakkar@metamgic.in",subject:"amexio plans",to:"ketan.gote@metamagic.in"}],this.searchdata=this.localData}return e.prototype.filter=function(e){var o=this;this.bindData=[];var a=this.subject,n=this.to,t=this.from;""==a&&""==t&&""==n?this.bindData=this.searchdata:this.searchdata.forEach(function(e){a.length>0&&n.length>0?o.contains(e.subject,a)&&o.contains(e.to,n)&&o.bindData.push(e):a.length>0&&o.contains(e.subject,a)?o.bindData.push(e):n.length>0&&o.contains(e.to,n)?o.bindData.push(e):t.length>0&&n.length>0?o.contains(e.from,t)&&o.contains(e.to,n)&&o.bindData.push(e):a.length>0&&t.length>0&&n.length>0&&o.contains(e.from,t)&&o.contains(e.to,n)&&o.contains(e.subject,a)&&o.bindData.push(e)}),e.closeSearchForm()},e.prototype.contains=function(e,o){return(e+"").startsWith(o)},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.ngOnInit=function(){this.bindData=JSON.parse(JSON.stringify(this.localData))},e=me([Object(n.n)({selector:"searchbox-demo",template:a("0hgq")}),ce("design:paramtypes",[n.u])],e)}(),de=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},se=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},pe=function(){function e(){this.stepVal1=10,this.stepVal2=20}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=de([Object(n.n)({selector:"slider-demo",template:a("SsRe")}),se("design:paramtypes",[])],e)}(),ue=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},xe=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},fe=function(){function e(e){this.http=e,this.getHtmlAndTypeScriptCode()}return e.prototype.onLoginClick=function(e){this.facebookLoginData=e},e.prototype.getHtmlAndTypeScriptCode=function(){var e,o,a=this;this.http.get("assets/data/code/forms/facebooklogin/form.html",{responseType:"text"}).subscribe(function(o){e=o},function(e){},function(){a.htmlCode=e}),this.http.get("assets/data/code/forms/facebooklogin/form.text",{responseType:"text"}).subscribe(function(e){o=e},function(e){},function(){a.typeScriptCode=o})},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=ue([Object(n.n)({selector:"facebook-login-demo",template:a("ppUx")}),xe("design:paramtypes",[m.a])],e)}(),he=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},ge=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},be=function(){function e(e){this.http=e,this.getHtmlAndTypeScriptCode()}return e.prototype.onLoginClick=function(e){this.googleLoginData=e},e.prototype.getHtmlAndTypeScriptCode=function(){var e,o,a=this;this.http.get("assets/data/code/forms/googlelogin/form.html",{responseType:"text"}).subscribe(function(o){e=o},function(e){},function(){a.htmlCode=e}),this.http.get("assets/data/code/forms/googlelogin/form.text",{responseType:"text"}).subscribe(function(e){o=e},function(e){},function(){a.typeScriptCode=o})},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=he([Object(n.n)({selector:"google-login-demo",template:a("74Hw")}),ge("design:paramtypes",[m.a])],e)}(),ye=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},we=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ke=function(){function e(e){this.http=e,this.getHtmlAndTypeScriptCode()}return e.prototype.onLoginClick=function(e){this.linkedinLoginData=e},e.prototype.getHtmlAndTypeScriptCode=function(){var e,o,a=this;this.http.get("assets/data/code/forms/linkedinlogin/form.html",{responseType:"text"}).subscribe(function(o){e=o},function(e){},function(){a.htmlCode=e}),this.http.get("assets/data/code/forms/linkedinlogin/form.text",{responseType:"text"}).subscribe(function(e){o=e},function(e){},function(){a.typeScriptCode=o})},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=ye([Object(n.n)({selector:"linkedin-login-demo",template:a("pbue")}),we("design:paramtypes",[m.a])],e)}(),Ce=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},je=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Re=function(){function e(e){this.http=e,this.getHtmlAndTypeScriptCode()}return e.prototype.onRecordSelect=function(e){this.outputData=e},e.prototype.getHtmlAndTypeScriptCode=function(){var e,o,a,n=this;this.http.get("assets/data/code/forms/taginput/form.html",{responseType:"text"}).subscribe(function(o){e=o},function(e){},function(){n.htmlCode=e}),this.http.get("assets/data/code/forms/taginput/form.text",{responseType:"text"}).subscribe(function(e){o=e},function(e){},function(){n.typeScriptCode=o}),this.http.get("assets/data/componentdata/country.json",{responseType:"text"}).subscribe(function(e){a=e},function(e){},function(){n.dataSource=a})},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Ce([Object(n.n)({selector:"taginput-demo",template:a("s2mN")}),je("design:paramtypes",[m.a])],e)}(),Me=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},ve=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},De=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Me([Object(n.n)({selector:"text-demo",template:a("KMof")}),ve("design:paramtypes",[])],e)}(),Ae=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},ze=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Oe=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Ae([Object(n.n)({selector:"textarea-demo",template:a("RcL4")}),ze("design:paramtypes",[])],e)}(),Se=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},Pe=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Te=function(){function e(){this.toggleMsgArray=[]}return e.prototype.onSquareToggleClick=function(e){this.toggleMsgArray.push("Square Toggle Click")},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Se([Object(n.n)({selector:"toggle-demo",template:a("RUvJ")}),Pe("design:paramtypes",[])],e)}(),Ie=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},Le=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Fe=function(){function e(){this.typeAHeadData={data:[{sportName:"Cricket",code:"Ck"},{sportName:"Swimming",code:"Sw"},{sportName:"Golf",code:"Glf"},{sportName:"Hockey",code:"Hky"},{sportName:"Soccer",code:"Scr"},{sportName:"Formula One",code:"F1"}]}}return e.prototype.onTypeheadClick=function(e){this.name=e.name},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Ie([Object(n.n)({selector:"typeahead-demo",template:a("3mc+")}),Le("design:paramtypes",[])],e)}(),Ee=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},Ne=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Ue=function(){function e(e){this.http=e}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Ee([Object(n.n)({selector:"badge-demo",template:a("LVwy")}),Ne("design:paramtypes",[m.a])],e)}(),He=[{path:"singlecheckbox-demo",component:s},{path:"checkboxgroup-demo",component:x},{path:"chips-demo",component:g},{path:"credit-card-demo",component:w},{path:"date-picker-demo",component:j},{path:"dropdownbasic",component:D},{path:"dropdownfilter",component:O},{path:"dropdownmulti",component:T},{path:"dropdowntemplate",component:F},{path:"email-demo",component:U},{path:"fileupload-demo",component:G},{path:"label-demo",component:B},{path:"number-demo",component:_},{path:"password-demo",component:Z},{path:"radiogroup-demo",component:ee},{path:"rating-demo",component:ne},{path:"recaptcha-demo",component:re},{path:"searchbox-demo",component:le},{path:"slider-demo",component:pe},{path:"facebook-login-demo",component:fe},{path:"google-login-demo",component:be},{path:"linkedin-login-demo",component:ke},{path:"taginput-demo",component:Re},{path:"textinput",component:De},{path:"textarea-demo",component:Oe},{path:"toggle-demo",component:Te},{path:"typeahead-demo",component:Fe},{path:"badge-demo",component:Ue}],Ve=a("ZYCi");a.d(o,"FormsInputModule",function(){return qe});var Ge=function(e,o,a,n){var t,i=arguments.length,r=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(t=e[m])&&(r=(i<3?t(r):i>3?t(o,a,r):t(o,a))||r);return i>3&&r&&Object.defineProperty(o,a,r),r},qe=function(){function e(){}return e=Ge([Object(n.J)({declarations:[s,x,g,w,j,D,O,T,F,U,G,B,_,Z,ee,ne,re,le,pe,fe,be,ke,Re,De,Oe,Te,Fe,Ue],imports:[r.b,i.d,m.b,c.a.forRoot(),t.i,Ve.d.forChild(He)],providers:[t.q]})],e)}()},VcZQ:function(e,o){e.exports='\n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/recaptcha.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column [size]="12">\n        <amexio-card [header]="true">\n\n\n          <amexio-header>Captcha Response data</amexio-header>\n          <amexio-body>\n\n            <amexio-google-recaptcha (onSuccess)="onSuccess($event)"\n                                     (onFailure)="onFailure($event)"\n                                     [site-key]="\'6LeZ5W8UAAAAAIHXZf35oYoUhpsICnJzqSxx3fpf\'">\n\n            </amexio-google-recaptcha>\n\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},du5V:function(e,o){e.exports='\n\n \n<amexio-api-structure  [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forminputs/dropdown.json\'">\n  <amexio-api-demo>\n\n  <amexio-row>\n    <amexio-column size="6">\n      <amexio-card header="true">\n        <amexio-header>\n           Dropdown Filter Component \n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-dropdown [(ngModel)]="countryCode1"\n                               [place-holder]="\'Choose\'"\n                               name="countryCode1"\n                               [search]="true"\n                               [data-reader]="\'data\'"\n                               [field-label]="\'Choose Country\'"\n                               [http-url]="\'assets/data/componentdata/country.json\'"\n                               [http-method]="\'get\'"\n                               [display-field]="\'countryName\'"\n                               [value-field]="\'countryCode1\'"\n                               [enable-sort]="true"\n                               [sort]="\'asc\'">\n              </amexio-dropdown>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column [size]="6">\n      <amexio-card header="true">\n        <amexio-header>\n          Selected Record Data\n        </amexio-header>\n        <amexio-body>\n        <ng-container *ngIf="countryCode1">\n          {{countryCode1}}\n        </ng-container>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n\n  </amexio-api-demo>\n  </amexio-api-structure>'},jVkV:function(e,o){e.exports='\n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/creditcard.json\'">\n  <amexio-api-demo>\n    <amexio-card  header="true" show-error="true">\n      <amexio-header style="width:100%">\n        Credit Card\n      </amexio-header>\n      <amexio-body>\n        <amexio-row>\n          <amexio-column size="9">\n            <pre><code>{{creditcard|json}}</code></pre>\n\n            <h2>Credit Card with Model Binding, label and double column template</h2>\n            <amexio-creditcard [year-count]="4" [show-label]="true" [(ngModel)]="creditcard"></amexio-creditcard>\n            <br>\n            <h2>Credit Card with double column template and without Model Binding and label</h2>\n            <amexio-creditcard [show-label]="false" [year-count]="4"></amexio-creditcard>\n            <br>\n            <h2>Credit Card with single column template</h2>\n            <br>\n            <amexio-creditcard [template]="\'single-column\'" [year-count]="4"></amexio-creditcard>\n          </amexio-column>\n        </amexio-row>\n      </amexio-body>\n    </amexio-card>\n\n  </amexio-api-demo>\n</amexio-api-structure>\n'},n8uM:function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/rating.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n          <amexio-header>\n            Sample Rating With Label\n          </amexio-header>\n          <amexio-body>\n            <amexio-rating-input [(ngModel)]="rate" [field-label]="\'Film Rating\'"\n                                 [max]="max" name="rate" [float]="true"\n                                 [read-only]="isReadonly">\n            </amexio-rating-input>\n          </amexio-body>\n          <amexio-action>\n            Rating : {{rate}}\n          </amexio-action>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true" [footer]="true"  [footer-align]="\'center\'">\n          <amexio-header>\n            Rating With Rate Titles\n          </amexio-header>\n          <amexio-body>\n            <amexio-rating-input [(ngModel)]="profileRate"\n                                 [max]="profileMaxRate" name="profileRate"\n                                 [titles]="titles"\n                                 [read-only]="isReadonly">\n            </amexio-rating-input>\n          </amexio-body>\n          <amexio-action>\n            Rating : {{profileRate}}\n          </amexio-action>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n          <amexio-header>\n            Custom Rating Icons\n          </amexio-header>\n          <amexio-body>\n            <amexio-rating-input [(ngModel)]="customRate" [full-icon]="\'\u2611\'" [empty-icon]="\'\u2610\'"\n                                 [max]="customIconRate" name="customRate" [float]="true"\n                                 [read-only]="isReadonly">\n            </amexio-rating-input>\n          </amexio-body>\n          <amexio-action>\n            Rating : {{customRate}}\n          </amexio-action>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Rating With Read Only\n          </amexio-header>\n          <amexio-body>\n            \x3c!--Read only Rating--\x3e\n            <amexio-rating-input [field-label]="\'Profile Rating\'"\n                                 [(ngModel)]="disableProfileRate"\n                                 [max]="disableProfileMaxRate"\n                                 [read-only]="true">\n            </amexio-rating-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},pbue:function(e,o){e.exports=' \n \n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/linkedln.json\'">\n  <amexio-api-reference><amexio-box border-color="brown" border="left" padding="true" background-color="brown">\n          <amexio-label>\n            Make sure api-key is created before use this component.refer Linkedin developer webside to create key <a href="https://developer.linkedin.com/docs/signin-with-linkedin" target="_blank">Linkedin Sign-In</a>\n            <br/><br/>\n          </amexio-label>\n        </amexio-box>\n  </amexio-api-reference>\n  <amexio-api-demo>\n <amexio-row>\n    <amexio-column size="4">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          Demo\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [label]="\'Signup With Linkedin\'" [api-key]="\'8110cgvg7wbie7\'" [type]="\'linkedin\'"\n                (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'square\'" [api-key]="\'8110cgvg7wbie7\'" [type]="\'linkedin\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'circle\'" [api-key]="\'8110cgvg7wbie7\'" [type]="\'linkedin\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column size="8">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          User Info After Login\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12" [fit]="true">\n              {{linkedinLoginData|json}}\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n\n  </amexio-api-demo>\n  </amexio-api-structure>'},ppUx:function(e,o){e.exports='\n\n\n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/facebook.json\'">\n  <amexio-api-reference><amexio-box border-color="brown" border="left" padding="true" background-color="brown">\n          <amexio-label>\n            Make sure api-key is created before use this component.refer Facebook developer webside to create key <a href="https://developers.facebook.com/apps" target="_blank">Facebook Sign-In</a>\n            <br/><br/>\n          </amexio-label>\n        </amexio-box>\n  </amexio-api-reference>\n  <amexio-api-demo>\n  <amexio-row>\n    <amexio-column size="4">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          Demo\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [label]="\'Signup With Facebook\'" [api-key]="\'2203895509849807\'" [type]="\'facebook\'"\n                (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'square\'" [api-key]="\'2203895509849807\'" [type]="\'facebook\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'circle\'" [api-key]="\'2203895509849807\'" [type]="\'facebook\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column size="8">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          User Info After Login\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12" [fit]="true">\n              {{facebookLoginData|json}}\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n  </amexio-api-demo>\n  </amexio-api-structure>'},s2mN:function(e,o){e.exports='\n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/taginput.json\'">\n    <amexio-api-demo>\n\n<amexio-row>\n    <amexio-column size="12">\n        <amexio-card header="true">\n            <amexio-header>\n                Simple Tags Input\n            </amexio-header>\n            <amexio-body>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-tag-input [data-reader]="\'data\'" [http-url]="\'assets/data/componentdata/country.json\'"\n                            [http-method]="\'get\'" [key]="\'countryName\'" [display-field]="\'countryName\'" [value-field]="\'countryName\'"\n                            [field-label]="\'Country Name\'" (onChange)="onRecordSelect($event)">\n                        </amexio-tag-input>\n                    </amexio-column>\n\n                    <amexio-column [size]="6">\n\n                        <amexio-card [header]="true" [body-height]="50">\n                            <amexio-header>\n                                Output Code\n                            </amexio-header>\n                            <amexio-body>\n                                <ng-container *ngIf="outputData">\n                                    <pre><code>  {{outputData|json}} </code></pre>\n                                </ng-container>\n                            </amexio-body>\n                        </amexio-card>\n\n                    </amexio-column>\n                </amexio-row>\n            </amexio-body>\n        </amexio-card>\n    </amexio-column>\n</amexio-row>\n\n</amexio-api-demo>\n</amexio-api-structure>\n'},w1fk:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/chip.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n\n      <amexio-column size="12">\n        <amexio-card header="true">\n          <amexio-header>\n            Chips with Data Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-chips [data]="sampledatachips" (selectedchipsData)="onChipDataLabelClick($event)" (onCloseClick)="onChipDataCloseClick($event)"></amexio-chips>\n            <pre><code>{{emitdatachips | json}}</code></pre>\n          </amexio-body>\n        </amexio-card>\n        <amexio-card header="true">\n          <amexio-header>\n            Chip with multiple Inputs\n          </amexio-header>\n          <amexio-body>\n            <amexio-chips (selectedchipsData)="onChipsLabelClick($event)" (onCloseClick)="onCloseClick($event)">\n              <amexio-chip [icon]="\'fa fa-linkedin-square\'" [label]="\'Linkedin\'" [color]="\'red\'" [badge]="4" [closable]="true">\n              </amexio-chip>\n\n              <amexio-chip [icon]="\'fa fa-internet-explorer\'" [label]="\'Internet-Explorer\'" [color]="\'blue\'" [badge]="2" [closable]="false">\n              </amexio-chip>\n\n              <amexio-chip [icon]="\'fa fa-github\'" [label]="\'Github\'" [color]="\'green\'" [badge]="3" [closable]="true">\n              </amexio-chip>\n\n            </amexio-chips>\n            <pre><code>{{multipleemitchips | json}}</code></pre>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'}}]);