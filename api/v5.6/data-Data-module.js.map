{"version":3,"sources":["webpack:///./src/app/data/Data.module.ts","webpack:///./src/app/data/Data.routes.ts","webpack:///./src/app/data/customcolsize/customcolsizegrid.demo.html","webpack:///./src/app/data/customcolsize/customcolsizegrid.demo.ts","webpack:///./src/app/data/filtergrid/filtergrid.demo.html","webpack:///./src/app/data/filtergrid/filtergrid.demo.ts","webpack:///./src/app/data/globalfiltergrid/globalfilter.demo.html","webpack:///./src/app/data/globalfiltergrid/globalfilter.demo.ts","webpack:///./src/app/data/gridwithcontextmenu/gridwithcontextmenu.demo.html","webpack:///./src/app/data/gridwithcontextmenu/gridwithcontextmenu.demo.ts","webpack:///./src/app/data/gridwithscroll/gridwithscroll.demo.html","webpack:///./src/app/data/gridwithscroll/gridwithscroll.demo.ts","webpack:///./src/app/data/gridwithtemplate/gridwithtemplate.demo.html","webpack:///./src/app/data/gridwithtemplate/gridwithtemplate.demo.ts","webpack:///./src/app/data/gridwithtoolbar/gridwithtoolbar.demo.html","webpack:///./src/app/data/gridwithtoolbar/gridwithtoolbar.demo.ts","webpack:///./src/app/data/groupby/groupbygrid.demo.html","webpack:///./src/app/data/groupby/groupbygrid.demo.ts","webpack:///./src/app/data/headertemplate/headertemplate.demo.html","webpack:///./src/app/data/headertemplate/headertemplate.demo.ts","webpack:///./src/app/data/itemselector/itemselector.demo.html","webpack:///./src/app/data/itemselector/itemselector.demo.ts","webpack:///./src/app/data/listbox/listbox.demo.html","webpack:///./src/app/data/listbox/listbox.demo.ts","webpack:///./src/app/data/serversidepagination/serversidepagination.demo.html","webpack:///./src/app/data/serversidepagination/serversidepagination.demo.ts","webpack:///./src/app/data/simplegrid/simplegrid.demo.html","webpack:///./src/app/data/simplegrid/simplegrid.demo.ts","webpack:///./src/app/data/spinner/spinner.demo.html","webpack:///./src/app/data/spinner/spinner.demo.ts","webpack:///./src/app/data/spinner/spinner.model.ts","webpack:///./src/app/data/timeline/timeline.demo.html","webpack:///./src/app/data/timeline/timeline.demo.ts","webpack:///./src/app/data/tree/checkboxtree/checkboxtree.demo.html","webpack:///./src/app/data/tree/checkboxtree/checkboxtree.demo.ts","webpack:///./src/app/data/tree/collapsetree/collapsetree.demo.html","webpack:///./src/app/data/tree/collapsetree/collapsetree.demo.ts","webpack:///./src/app/data/tree/contextmenutree/contextmenutree.demo.component.html","webpack:///./src/app/data/tree/contextmenutree/contextmenutree.demo.component.ts","webpack:///./src/app/data/tree/filtertree/filtertree.demo.html","webpack:///./src/app/data/tree/filtertree/filtertree.demo.ts","webpack:///./src/app/data/tree/horizontaltree/horizontaltree.demo.html","webpack:///./src/app/data/tree/horizontaltree/horizontaltree.demo.ts","webpack:///./src/app/data/tree/simpletree/simpletree.demo.html","webpack:///./src/app/data/tree/simpletree/simpletree.demo.ts","webpack:///./src/app/data/tree/treedragdrop/treedragdrop.demo.html","webpack:///./src/app/data/tree/treedragdrop/treedragdrop.demo.ts","webpack:///./src/app/data/tree/treewithbadge/treewithbadge.demo.component.html","webpack:///./src/app/data/tree/treewithbadge/treewithbadge.demo.component.ts","webpack:///./src/app/data/tree/treewithtemplate/treewithtemplate.demo.html","webpack:///./src/app/data/tree/treewithtemplate/treewithtemplate.demo.ts","webpack:///./src/app/data/treedatagrid/treedatagrid.demo.html","webpack:///./src/app/data/treedatagrid/treedatagrid.demo.ts","webpack:///./src/app/data/treedatatemplate/treedatatemplate.demo.html","webpack:///./src/app/data/treedatatemplate/treedatatemplate.demo.ts"],"names":[],"mappings":"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","file":"data-Data-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared.module';\nimport { DATA_ROUTE } from './Data.routes';\n\nimport { RouterModule } from '@angular/router';\n\n\nimport { ItemSelectorDemo } from './itemselector/itemselector.demo';\nimport { ListBoxDemo } from './listbox/listbox.demo';\nimport { TimelineDemoComponent } from './timeline/timeline.demo';\nimport { AmexioSpinnerDemo } from './spinner/spinner.demo';\n//  Tree\nimport { SimpleTreeDemo } from './tree/simpletree/simpletree.demo';\nimport { CheckboxTreeDemo } from './tree/checkboxtree/checkboxtree.demo';\nimport { CollapseTreeDemo } from './tree/collapsetree/collapsetree.demo';\nimport { ContextMenuTreeDemo } from './tree/contextmenutree/contextmenutree.demo.component';\nimport { FilterTreeDemo } from './tree/filtertree/filtertree.demo';\nimport { HorizontalTreeDemo } from './tree/horizontaltree/horizontaltree.demo';\nimport { TreeWithBadgeDemo } from './tree/treewithbadge/treewithbadge.demo.component';\nimport { DragDropTreeDemo } from './tree/treedragdrop/treedragdrop.demo';\nimport { TreeWithTemplateDemo } from './tree/treewithtemplate/treewithtemplate.demo';\n // Grid\nimport { SimpleGridDemo } from './simplegrid/simplegrid.demo';\nimport { CustomColSizeDemo } from './customcolsize/customcolsizegrid.demo';\nimport { FilterGridDemo } from './filtergrid/filtergrid.demo';\nimport { GlobalFilterDemo } from './globalfiltergrid/globalfilter.demo';\nimport { GridWithTemplateDemo } from './gridwithtemplate/gridwithtemplate.demo';\nimport { GridWithContextMenuDemo } from './gridwithcontextmenu/gridwithcontextmenu.demo';\nimport { GridWithScrollDemo } from './gridwithscroll/gridwithscroll.demo';\nimport { GridWithToolBarDemo } from './gridwithtoolbar/gridwithtoolbar.demo';\nimport { GroupByGridDemo } from './groupby/groupbygrid.demo';\nimport { HeaderTemplateDemo } from './headertemplate/headertemplate.demo';\nimport { TreeDataGridDemo } from './treedatagrid/treedatagrid.demo';\nimport { TreeDataTemplateDemo } from './treedatatemplate/treedatatemplate.demo';\nimport {ServerSidePaginationDemo} from './serversidepagination/serversidepagination.demo';\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\n\n\n/**\n * Created by kedar on 4/2/19.\n */\n@NgModule({\n    declarations: [ ItemSelectorDemo , ListBoxDemo, TimelineDemoComponent , AmexioSpinnerDemo,\n\n        SimpleTreeDemo, CheckboxTreeDemo, CollapseTreeDemo, ContextMenuTreeDemo, FilterTreeDemo,\n        HorizontalTreeDemo, TreeWithBadgeDemo, DragDropTreeDemo, TreeWithTemplateDemo,\n\n        SimpleGridDemo, CustomColSizeDemo, FilterGridDemo, GlobalFilterDemo, GridWithTemplateDemo,\n        GridWithContextMenuDemo, GridWithScrollDemo, GridWithToolBarDemo , GroupByGridDemo, HeaderTemplateDemo,\n        TreeDataGridDemo, TreeDataTemplateDemo, ServerSidePaginationDemo\n\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        AmexioWidgetModule,\n        SharedModule.forRoot(),\n        RouterModule.forChild(DATA_ROUTE),\n    ],\n    providers: []\n})\nexport class DataModule {\n\n}\n","import { Routes } from '@angular/router';\n\nimport { ItemSelectorDemo } from './itemselector/itemselector.demo';\nimport { ListBoxDemo } from './listbox/listbox.demo';\nimport { TimelineDemoComponent } from './timeline/timeline.demo';\nimport { AmexioSpinnerDemo } from './spinner/spinner.demo';\n//  Tree\nimport { SimpleTreeDemo } from './tree/simpletree/simpletree.demo';\nimport { CheckboxTreeDemo } from './tree/checkboxtree/checkboxtree.demo';\nimport { CollapseTreeDemo } from './tree/collapsetree/collapsetree.demo';\nimport { ContextMenuTreeDemo } from './tree/contextmenutree/contextmenutree.demo.component';\nimport { FilterTreeDemo } from './tree/filtertree/filtertree.demo';\nimport { HorizontalTreeDemo } from './tree/horizontaltree/horizontaltree.demo';\nimport { TreeWithBadgeDemo } from './tree/treewithbadge/treewithbadge.demo.component';\nimport { DragDropTreeDemo } from './tree/treedragdrop/treedragdrop.demo';\nimport { TreeWithTemplateDemo } from './tree/treewithtemplate/treewithtemplate.demo';\n// Grid\nimport { SimpleGridDemo } from './simplegrid/simplegrid.demo';\nimport { CustomColSizeDemo } from './customcolsize/customcolsizegrid.demo';\nimport { FilterGridDemo } from './filtergrid/filtergrid.demo';\nimport { GlobalFilterDemo } from './globalfiltergrid/globalfilter.demo';\nimport { GridWithTemplateDemo } from './gridwithtemplate/gridwithtemplate.demo';\nimport { GridWithContextMenuDemo } from './gridwithcontextmenu/gridwithcontextmenu.demo';\n\nimport { GridWithScrollDemo } from './gridwithscroll/gridwithscroll.demo';\nimport { GridWithToolBarDemo } from './gridwithtoolbar/gridwithtoolbar.demo';\nimport { GroupByGridDemo } from './groupby/groupbygrid.demo';\nimport { HeaderTemplateDemo } from './headertemplate/headertemplate.demo';\nimport { TreeDataGridDemo } from './treedatagrid/treedatagrid.demo';\nimport { TreeDataTemplateDemo } from './treedatatemplate/treedatatemplate.demo';\nimport {ServerSidePaginationDemo} from './serversidepagination/serversidepagination.demo';\n\n\n\n\nexport const DATA_ROUTE: Routes = [\n\n    {\n        path: 'itemselector-demo', component: ItemSelectorDemo,\n    },\n    {\n        path: 'listbox-demo', component: ListBoxDemo,\n    },\n    {\n        path: 'timeline-demo', component: TimelineDemoComponent,\n    },\n    {\n        path: 'amexio-spinner-demo', component: AmexioSpinnerDemo,\n    },\n    // Tree demo\n    {\n        path: 'simple-tree-demo', component: SimpleTreeDemo,\n    },\n    {\n        path: 'collapsetree-demo', component: CollapseTreeDemo,\n    },\n    {\n        path: 'template-tree-demo', component: TreeWithTemplateDemo,\n    },\n    {\n        path: 'filter-tree-demo', component: FilterTreeDemo,\n    },\n    {\n        path: 'checkbox-tree-demo', component: CheckboxTreeDemo,\n    },\n    {\n        path: 'dragdrop-tree-demo', component: DragDropTreeDemo,\n    },\n    {\n        path: 'badge-tree-demo', component: TreeWithBadgeDemo,\n    },\n    {\n        path: 'context-menu-tree-demo', component: ContextMenuTreeDemo,\n    },\n    {\n        path: 'horizontal-tree-demo', component: HorizontalTreeDemo,\n    },\n\n    // Grid Demo\n    {\n        path: 'simplegrid-demo', component: SimpleGridDemo,\n    },\n    {\n        path: 'custom-col-grid-demo', component: CustomColSizeDemo,\n    },\n    {\n        path: 'filter-grid-demo', component: FilterGridDemo,\n    },\n    {\n        path: 'global-filter-grid-demo', component: GlobalFilterDemo,\n    },\n    {\n        path: 'template-grid-demo', component: GridWithTemplateDemo,\n    },\n    {\n        path: 'scroll-grid-demo', component: GridWithScrollDemo,\n    },\n    {\n        path: 'gridwithtoolbar-demo', component: GridWithToolBarDemo,\n    },\n    {\n        path: 'groupby-grid-demo', component: GroupByGridDemo,\n    },\n    {\n        path: 'header-template-demo', component: HeaderTemplateDemo,\n    },\n    {\n        path: 'tree-data-grid-demo', component: TreeDataGridDemo,\n    },\n    {\n        path: 'tree-data-template-demo', component: TreeDataTemplateDemo,\n    },\n    {\n        path: 'grid-context-menu-demo', component: GridWithContextMenuDemo,\n    },\n    {\n      path: 'server-side-pagination-demo', component: ServerSidePaginationDemo,\n    }\n];\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n  <amexio-api-demo>\\n  \\n    <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Data Grid With Custom Column Size\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-datagrid title=\\\"Country Grid\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/gridtemplate.json'\\\"\\n              [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\" [enable-data-filter]=\\\"false\\\" (rowSelect)=\\\"getRowData($event)\\\">\\n              <amexio-data-table-column [width]=\\\"70\\\" [data-index]=\\\"'name_official'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                [text]=\\\"'Name'\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                  <span>\\n                    <amexio-image [path]=\\\"'assets/images/flags/flags/'+row.flag_32\\\"></amexio-image>&nbsp;{{row.name}} (\\n                    {{row.name_official}} )\\n                  </span>\\n                </ng-template>\\n              </amexio-data-table-column>\\n              <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'latitude'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                [text]=\\\"'Latitude'\\\"></amexio-data-table-column>\\n              <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"'longitude'\\\" [data-type]=\\\"'number'\\\" [hidden]=\\\"false\\\"\\n                [text]=\\\"'Longitude'\\\"></amexio-data-table-column>\\n            </amexio-datagrid>\\n            <p><b>Clicked row data :</b> {{clickedRowData | json}}</p>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n  </amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n@Component({\n  selector: 'custom-col-size-grid-demo', \n  templateUrl :'./customcolsizegrid.demo.html',\n})\nexport class CustomColSizeDemo implements OnInit{\n  \n  copyMsgArray: any[];\n  clickedRowData: any;\n \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n \n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Data Grid With Custom Column Size';\n    this.customSourceData.description = 'Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/customcolsize/customcolsize.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/customcolsize/customcolsize.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/gridtemplate.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-column-sizing-grid?embed=1&file=app/grid/columnsize/columnsize.demo.html&view=editor';\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getRowData(data: any) {\n    this.clickedRowData = data;\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n  <amexio-api-demo>\\n  \\n    <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Data Grid With Filter \\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-datagrid\\n              [title]=\\\"'Employee Data'\\\"\\n              [page-size] = \\\"10\\\"\\n              [data-reader]=\\\"'data'\\\"\\n              [http-url]=\\\"'assets/data/componentdata/datagridgroupby.json'\\\"\\n              [http-method]=\\\"'get'\\\"\\n              [enable-data-filter]=\\\"true\\\"\\n              (rowSelect)=\\\"onRowSelect($event)\\\">\\n              <amexio-data-table-column [data-index]=\\\"'preferredFullName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Full Name'\\\"></amexio-data-table-column>\\n              <amexio-data-table-column [data-index]=\\\"'jobTitle'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Job Title'\\\">\\n              </amexio-data-table-column>\\n              <amexio-data-table-column [data-index]=\\\"'salary'\\\" [data-type]=\\\"'number'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Salary'\\\"></amexio-data-table-column>\\n            </amexio-datagrid>\\n            <p><b>Selected row data : </b>{{selectedData | json}}</p>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */ \n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'filtergrid-demo', \n  templateUrl: './filtergrid.demo.html',\n})\nexport class FilterGridDemo implements OnInit{\n\n  copyMsgArray: any[];\n  selectedData: any;\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n \n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Data Grid With Filter';\n    this.customSourceData.description = 'Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection,Filtering(enable only for string and number type data) user define template for rendering for column header and column data, displaying summation of numeric column.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/filter/filter.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/filter/filter.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/datagridgroupby.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-global-filter-grid?embed=1&file=app/grid/filtergrid/filtergrid.demo.html&view=editor';\n  }\n\n \n \n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  onRowSelect(data: any) {\n    this.selectedData = data;\n  }\n}\n","module.exports = \"\\n<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n  <amexio-api-demo>\\n  \\n<amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Data Grid with Global Filter \\n          </amexio-header>\\n          <amexio-body>\\n          <amexio-datagrid\\n          [global-filter]=\\\"true\\\" title=\\\"Country Grid\\\"   [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/datagrid.json'\\\" [data-reader]=\\\"'data'\\\"  [page-size] = \\\"10\\\" (rowSelect)=\\\"getRowData($event)\\\">\\n          <amexio-data-table-column [data-index]=\\\"'name_official'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\">\\n          </amexio-data-table-column>\\n          <amexio-data-table-column [data-index]=\\\"'code3l'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Country Code'\\\">\\n          </amexio-data-table-column>\\n          <amexio-data-table-column [data-index]=\\\"'latitude'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Latitude'\\\">\\n          </amexio-data-table-column>\\n          <amexio-data-table-column [data-index]=\\\"'longitude'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Longitude'\\\"></amexio-data-table-column>\\n        </amexio-datagrid>\\n            <p><b>Selected row data : </b>{{clickedRowData | json}}</p>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by rashmi on 30/5/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'global-filter-grid', \n  templateUrl: './globalfilter.demo.html',\n})\nexport class GlobalFilterDemo implements OnInit {\n \n  copyMsgArray: any[];\n  clickedRowData: any;\n \n\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n \n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Data Grid With Global Filter';\n    this.customSourceData.description = 'Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection,Common Filtering for all columns(enable only for string and number)(Filtering Criteria: starts with, ends with and contains) user define template for rendering for column header and column data, displaying summation of numeric column.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/globalfiltergrid/globalfiltergrid.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/globalfiltergrid/globalfiltergrid.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/gridtemplate.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-global-filter-grid?embed=1&file=app/grid/filtergrid/filtergrid.demo.html&view=editor';\n  }\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getRowData(data: any) {\n    this.clickedRowData = data;\n  }\n}\n\n\n","module.exports = \"   \\n   <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n    <amexio-api-demo>\\n    \\n   <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Data Grid with Context Menu \\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-datagrid\\n              [enable-column-fiter]=\\\"true\\\" [context-menu]=\\\"contextMenuRowData\\\" [height]=\\\"200\\\" title=\\\"Country Grid\\\" [enable-checkbox]=\\\"false\\\"  [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/country.json'\\\" [data-reader]=\\\"'data'\\\"  [page-size] = \\\"10\\\">\\n              <amexio-data-table-column [data-index]=\\\"'countryName'\\\" \\n                                        [data-type]=\\\"'string'\\\" \\n                                        [context-menu]=\\\"contextMenuColData\\\"\\n                                        [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\">\\n              </amexio-data-table-column>\\n              <amexio-data-table-column [data-index]=\\\"'countryCode1'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Code'\\\"></amexio-data-table-column>\\n              <amexio-data-table-column [data-index]=\\\"'currencyName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Currency'\\\"></amexio-data-table-column>\\n            </amexio-datagrid>\\n         <!--   <p><b>Selected row data : </b>{{selectedData | json}}</p>-->\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by rashmi on 29/6/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'grid-context-menu-demo', \n  templateUrl :'./gridwithcontextmenu.demo.html',\n})\nexport class GridWithContextMenuDemo implements OnInit{\n  \n  copyMsgArray: any[];\n  selectedData: any;\n  contextMenuColData: any[];\n  contextMenuRowData: any[];\n\n\n  customSourceData: ComponentDataStructure;\n\n  constructor(private http: HttpClient) {\n\n    this.customSourceData = new ComponentDataStructure();\n    this.contextMenuColData=\n    [{\"text\":\"Add State\",\"icon\":\"fa fa-plus\",\"disabled\":true},{\"text\":\"Edit\",\"icon\":\"\",\"seperator\":true}\n     ,{\"text\":\"Delete\",\"icon\":\"\"}];\n   this.contextMenuRowData =  [{\"text\":\"Reload\",\"icon\":\"fa fa-refresh\",\"disabled\":false,\"seperator\":false},{\"text\":\"Save\",\"icon\":\"fa fa-save\",\"seperator\":false}\n   ,{\"text\":\"Delete\",\"icon\":\"fa fa-close\"}];\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Data Grid With Context Menu';\n    this.customSourceData.description = 'Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column and with context menu(right-click mouse operation).';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/contextmenugrid/contextmenugrid.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/contextmenugrid/contextmenugrid.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/country.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-grid-contextmenu?embed=1&file=src/app/contextualmenu/grid/grid.demo.component.html&view=editor';\n  }\n\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"   \\n   <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n    <amexio-api-demo>\\n    \\n   \\n   <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Data Grid with scroll \\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-datagrid\\n              [enable-column-fiter]=\\\"true\\\" [height]=\\\"200\\\" title=\\\"Country Grid\\\" [enable-checkbox]=\\\"false\\\"  [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/country.json'\\\" [data-reader]=\\\"'data'\\\"  [page-size] = \\\"10\\\">\\n              <amexio-data-table-column [data-index]=\\\"'countryName'\\\" \\n                                        [data-type]=\\\"'string'\\\" \\n                                        [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\" (selectedRowData)=\\\"getSelectedData($event)\\\">\\n              </amexio-data-table-column>\\n              <amexio-data-table-column [data-index]=\\\"'countryCode1'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Code'\\\"></amexio-data-table-column>\\n              <amexio-data-table-column [data-index]=\\\"'currencyName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Currency'\\\"></amexio-data-table-column>\\n            </amexio-datagrid>\\n         <!--   <p><b>Selected row data : </b>{{selectedData | json}}</p>-->\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'grid-scroll-demo', \n  templateUrl : './gridwithscroll.demo.html',\n})\nexport class GridWithScrollDemo  implements OnInit{\n  \n  copyMsgArray: any[];\n  selectedData: any;\n \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n \n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Data Grid With Scroll';\n    this.customSourceData.description = 'Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/scrollgrid/scrollgrid.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/scrollgrid/scrollgrid.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/country.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-grid-with-scroll?embed=1&file=app/grid/gridwithscroll/gridwithscroll.demo.html&view=editor';\n  }\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n","module.exports = \"        \\n   <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n    <amexio-api-demo>\\n       \\n       <!--1-->\\n        <amexio-datagrid [enable-checkbox]=\\\"false\\\" title=\\\"Invoice Details\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/templategrid.json'\\\"\\n            [data-reader]=\\\"'response.data'\\\" [page-size]=\\\"10\\\" [enable-data-filter]=\\\"false\\\">\\n            <amexio-data-table-column [width]=\\\"5\\\" [data-index]=\\\"'No'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'No.'\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-label size=\\\"small\\\" font-color=\\\"grey\\\">\\n                        {{row.No}}\\n                    </amexio-label>\\n                </ng-template>\\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"10\\\" [data-index]=\\\"'Invoice Subject'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Invoice Subject'\\\">\\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"8\\\" [data-index]=\\\"'client'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Client'\\\">\\n        \\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"6\\\" [data-index]=\\\"'Vat No.'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Vat No.'\\\">\\n        \\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"8\\\" [data-index]=\\\"'Created'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Created'\\\">\\n        \\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"10\\\" [data-index]=\\\"'Status'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Status'\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-label class=\\\"fa fa-circle fa-lg\\\" [ngClass]=\\\"{'green': row.Status== 'Paid' , 'yellow': row.Status =='Pending' , 'red' : row.Status=='Paid Today'}\\\"></amexio-label>\\n                    &nbsp;{{row.Status}}\\n                </ng-template>\\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"5\\\" [data-index]=\\\"'Price'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Price'\\\">\\n        \\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"15\\\" [data-index]=\\\"''\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"''\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-row>\\n                        <amexio-column [size]=\\\"4\\\">\\n                            <amexio-button [label]=\\\"'Manage'\\\" [size]=\\\"'small'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Manage'\\\">\\n                            </amexio-button>\\n                        </amexio-column>\\n                        <amexio-column [size]=\\\"5\\\">\\n                            <amexio-btn-dropdown [label]=\\\"'Action'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [size]=\\\"'small'\\\">\\n                                <amexio-btn-dropdown-item [label]=\\\"'Accept'\\\">\\n                                </amexio-btn-dropdown-item>\\n                                <amexio-btn-dropdown-item [label]=\\\"'Reject'\\\">\\n                                </amexio-btn-dropdown-item>\\n                            </amexio-btn-dropdown>\\n                        </amexio-column>\\n                        <amexio-column [size]=\\\"3\\\">\\n                            <amexio-image style=\\\"color:grey;\\\" [icon-class]=\\\"'fa fa-pencil fa-2x'\\\"></amexio-image>\\n                        </amexio-column>\\n                    </amexio-row>\\n                </ng-template>\\n            </amexio-data-table-column>\\n        \\n        </amexio-datagrid>\\n        \\n        <!--2-->\\n        <br>\\n        <amexio-datagrid [enable-checkbox]=\\\"false\\\" title=\\\"User Activity Details\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/datagridtemplate.json'\\\"\\n            [data-reader]=\\\"'response.data'\\\" [page-size]=\\\"10\\\" [enable-data-filter]=\\\"false\\\">\\n            <amexio-data-table-column [width]=\\\"40\\\" [data-index]=\\\"'User'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'USER'\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-row>\\n                        <amexio-column [size]=\\\"3\\\">\\n                            <amexio-image [path]=\\\"'assets/images/profile/'+row.profile\\\" [c-class]=\\\"'image-round'\\\">\\n                            </amexio-image>\\n                         </amexio-column>\\n                        <amexio-column [size]=\\\"9\\\">\\n                            <amexio-label size=\\\"small\\\">\\n                                {{row.User}}\\n                            </amexio-label>\\n                            <br>\\n                            <amexio-label size=\\\"small\\\" font-color=\\\"grey\\\">\\n                                Registered:{{row.Date}}\\n                            </amexio-label>\\n                        </amexio-column>\\n                    </amexio-row>\\n                </ng-template>\\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"40\\\" [data-index]=\\\"'Usage'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'USAGE'\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-label>{{row.Usage}}%</amexio-label>\\n        \\n                    <amexio-progress-bar [height]=\\\"'10'\\\" [current-value]=\\\"row.Usage\\\" [infinite]=\\\"false\\\" [type]=\\\"getGridTemplateData(row)\\\"></amexio-progress-bar>\\n        \\n                    <amexio-label size=\\\"small\\\" font-color=\\\"grey\\\">\\n                        {{row.usageFromDate}}-{{row.usageToDate}}\\n                    </amexio-label>\\n        \\n                </ng-template>\\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"20\\\" [data-index]=\\\"'Payment'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'PAYMENT'\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-label>\\n                        <amexio-image [height]=\\\"'59.75px'\\\" [width]=\\\"'59.75px'\\\" [path]=\\\"'assets/images/'+row.Payment\\\" [c-class]=\\\"'image-round'\\\">\\n                        </amexio-image>\\n                     </amexio-label>\\n                </ng-template>\\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"20\\\" [data-index]=\\\"'Activity'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'ACTIVITY'\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-label size=\\\"small\\\" font-color=\\\"grey\\\">\\n                        Last login\\n                    </amexio-label>\\n                    <br>\\n                    <amexio-label size=\\\"small\\\">\\n                        {{row.Activity}}\\n                    </amexio-label>\\n        \\n        \\n                </ng-template>\\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"10\\\" [data-index]=\\\"''\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"''\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n        \\n\\n                        <amexio-image  style=\\\"color:grey;\\\" [icon-class]=\\\"'fa fa-pencil  fa-2x'\\\"></amexio-image>\\n\\n        \\n                </ng-template>\\n            </amexio-data-table-column>\\n        </amexio-datagrid>\\n        \\n        <!--3-->\\n        <br>\\n        <amexio-datagrid title=\\\"Country Grid\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/gridtemplate.json'\\\" [data-reader]=\\\"'data'\\\"\\n            [page-size]=\\\"10\\\" [enable-data-filter]=\\\"false\\\" (rowSelect)=\\\"getRowData($event)\\\">\\n            <amexio-data-table-column [width]=\\\"70\\\" [data-index]=\\\"'name_official'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\">\\n                <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                    <amexio-label class=\\\"datagrid-template\\\">\\n                        <amexio-label>\\n                            <amexio-image [width]=\\\"100\\\" [path]=\\\"'assets/images/flags/flags/'+row.flag_32\\\"></amexio-image>\\n                        </amexio-label>\\n                        <amexio-label>{{row.name}}</amexio-label>\\n        \\n                        <amexio-label >( {{row.name_official}} )</amexio-label>\\n                    </amexio-label>\\n                </ng-template>\\n            </amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"20\\\" [data-index]=\\\"'latitude'\\\" [data-type]=\\\"'number'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Latitude'\\\"></amexio-data-table-column>\\n            <amexio-data-table-column [width]=\\\"20\\\" [data-index]=\\\"'longitude'\\\" [data-type]=\\\"'number'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Longitude'\\\"></amexio-data-table-column>\\n        </amexio-datagrid>\\n        <p>\\n            <b>Clicked row data :</b> {{clickedRowData | json}}</p>\\n\\n</amexio-api-demo>\\n</amexio-api-structure>\\n\\n\"","/**\n * Created by sagar on 9/1/18.\n */ \n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'grid-template-demo', \n  templateUrl: './gridwithtemplate.demo.html',\n  styles: [\n    `\n    .listbox-StatusYellow {\n      background-color: yellow;\n    }\n    .listbox-StatusGreen  {\n      background-color: green;\n     }\n    .listbox-StatusRed {\n      background-color: red;\n  }\n  \n.red {\n    color: red!important;\n   \n}\n.green {\n    color: green!important;\n   \n}\n.yellow {\n    color: yellow!important;\n    \n}\n.template-progressBar .progress{\n  height:5px !important;\n}  \n`\n  ]\n})\nexport class GridWithTemplateDemo implements OnInit{\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource: string;\n  copyMsgArray: any[];\n  clickedRowData: any;\n  progressType: string;\n  actionWindowFlag: boolean;\n  projectData: any;\n  browserData: any;\n  \n \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n    \n    this.projectData = {\n      \"response\": {\n        \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n          {\n            \"name\": \"Admin Template\t\",\n            \"status\": \" 65%\"\n          },\n          {\n            \"name\": \"Landing Page\",\n            \"status\": \"Finished\"\n          },\n          {\n            \"name\": \"Backend UI\t\",\n            \"status\": \"Rejected\"\n          },\n          {\n            \"name\": \"Personal Blog\",\n            \"status\": \"40%\"\n          },\n          {\n            \"name\": \"E-mail Templates\t\",\n            \"status\": \"13%\"\n          },\n          {\n            \"name\": \"Corporate Website\",\n            \"status\": \"Pending\"\n          }\n        ]\n      }\n    }\n    this.browserData = {\n      \"response\": {\n        \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n          {\n            \"name\": \"Google Chrome\",\n            \"usage\": \"23%\",\n            \"icon\": \"GoogleChrome.jpg \"\n          },\n          {\n            \"name\": \"Mozila Firefox\",\n            \"usage\": \"15%\",\n            \"icon\": \"MozilaFirefox.png \"\n          },\n          {\n            \"name\": \"Apple Safari\",\n            \"usage\": \"7%\",\n            \"icon\": \"AppleSafari.png \"\n          },\n          {\n            \"name\": \"Internet Explorer\",\n            \"usage\": \"9%\",\n            \"icon\": \"InternetExplorer.jpeg\"\n          },\n          {\n            \"name\": \"Opera mini\",\n            \"usage\": \"20%\",\n            \"icon\": \"Operamini.jpg\"\n          },\n          {\n            \"name\": \"Microsoft edge\",\n            \"usage\": \"9%\",\n            \"icon\": \"Microsoftedge.jpg\"\n          }\n        ]\n      }\n    }\n\n\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Data Grid With template';\n    this.customSourceData.description = 'To define the detail template, nest an ng-template tag inside the AmexioColumn component. The template context is set to the current row.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/templategrid/templategrid.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/templategrid/templategrid.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/gridtemplate.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-template-grid?embed=1&file=app/grid/templategrid/templategrid.demo.html&view=editor';\n  }\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n  getRowData(data: any) {\n    this.clickedRowData = data;\n  }\n\n  getGridTemplateData(row: any): string {\n    if (row.Usage >= 50) {\n      return \"success\";\n    }\n    if (row.Usage < 50 && row.Usage >= 30) {\n      return \"warning\";\n    }\n    if (row.Usage < 30) {\n      return \"danger\";\n    }\n  }\n\n\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n    <amexio-api-demo>\\n\\n        <amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n                <amexio-card [header]=\\\"true\\\">\\n                    <amexio-header>\\n                        Grid with Toolbar\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <amexio-datagrid [enable-column-fiter]=\\\"true\\\" title=\\\" Grid with Toolbar \\\" [enable-checkbox]=\\\"false\\\"\\n                            [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/country.json'\\\" [data-reader]=\\\"'data'\\\"\\n                            [page-size]=\\\"10\\\">\\n                            <amexio-datagrid-header>\\n                                <amexio-drop-down-menu [icon-align]=\\\"'left'\\\" [title]=\\\"'Country Currency '\\\" [padding]=\\\"'5px 10px'\\\"\\n                                    [icon]=\\\"'fa fa-empire'\\\">\\n                                    <amexio-drop-down-menu-item [label]=\\\"'India'\\\" [icon]=\\\"'fa fa-inr'\\\">\\n                                    </amexio-drop-down-menu-item>\\n                                    <amexio-drop-down-menu-item [label]=\\\"'Russia'\\\" [icon]=\\\"'fa fa-rouble'\\\" [separator]=\\\"true\\\">\\n                                    </amexio-drop-down-menu-item>\\n                                    <amexio-drop-down-menu-item [label]=\\\"'Japan'\\\" [icon]=\\\"'fa fa-cny'\\\">\\n                                    </amexio-drop-down-menu-item>\\n                                    <amexio-drop-down-menu-item [label]=\\\"'United States'\\\" [icon]=\\\"'fa fa-dollar'\\\">\\n                                    </amexio-drop-down-menu-item>\\n                                </amexio-drop-down-menu>\\n                                <amexio-label size=\\\"small\\\">\\n                                    My Drive\\n                                </amexio-label>\\n                                <amexio-image aria-hidden=\\\"true\\\" [icon-class]=\\\"'fa fa-info-circle'\\\"> </amexio-image>\\n\\n                            </amexio-datagrid-header>\\n                            <amexio-data-table-column [data-index]=\\\"'countryName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                                [text]=\\\"'Name'\\\" (selectedRowData)=\\\"getSelectedData($event)\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'countryCode1'\\\" [data-type]=\\\"'string'\\\"\\n                                [hidden]=\\\"false\\\" [text]=\\\"'Code'\\\"></amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'currencyName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                                [text]=\\\"'Currency'\\\"></amexio-data-table-column>\\n                        </amexio-datagrid>\\n                    </amexio-body>\\n                </amexio-card>\\n            </amexio-column>\\n        </amexio-row>\\n\\n    </amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by kedar on 17/10/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'gridwithtoolbar-demo', \n  templateUrl: './gridwithtoolbar.demo.html',\n})\nexport class GridWithToolBarDemo implements OnInit {\n \n  copyMsgArray: any[];\n  selectedData: any;\n  \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Data Grid With toolbar';\n    this.customSourceData.description = 'Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/gridwithtoolbar/gridwithtoolbar.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/gridwithtoolbar/gridwithtoolbar.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/country.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-grid-with-toolbar?embed=1&file=app/grid/gridwithtoolbar/gridwithtoolbar.demo.html&view=editor';\n  }\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n  <amexio-api-demo>\\n  \\n\\n<amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Data Grid Group By \\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-datagrid\\n              [title]=\\\"'Employee Data'\\\"\\n              [page-size] = \\\"10\\\"\\n              [data-reader]=\\\"'data'\\\"\\n              [groupby]=\\\"true\\\"\\n              [groupby-data-index]=\\\"'jobTitle'\\\"\\n              [http-url]=\\\"'assets/data/componentdata/datagridgroupby.json'\\\"\\n              [http-method]=\\\"'get'\\\">\\n              <amexio-data-table-column [width]=\\\"30\\\" [data-index]=\\\"'preferredFullName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Full Name'\\\"></amexio-data-table-column>\\n              <amexio-data-table-column  [width]=\\\"30\\\" [data-index]=\\\"'jobTitle'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Job Title'\\\">\\n              </amexio-data-table-column>\\n              <amexio-data-table-column [width]=\\\"30\\\" [data-index]=\\\"'salary'\\\" [data-type]=\\\"'number'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Salary'\\\"></amexio-data-table-column>\\n            </amexio-datagrid>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'groupbygrid-demo',\n  templateUrl :'./groupbygrid.demo.html'\n})\nexport class GroupByGridDemo  implements OnInit{\n  \n  copyMsgArray: any[];\n  selectedData: any;\n  \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n \n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Data Grid Group By';\n    this.customSourceData.description = 'Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection,Filtering(enable only for string and number type data), user define template for rendering for column header and column data, displaying summation of numeric column and grouping column.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/groupby/groupby.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/groupby/groupby.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/datagridgroupby.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-groupby-grid?embed=1&file=app/grid/groupbygrid/groupbygrid.demo.html&view=editor';\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n  <amexio-api-demo>\\n           \\n    <!--1-->\\n    <amexio-datagrid [enable-checkbox]=\\\"false\\\" title=\\\"Registration Details\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/headertemplateemail.json'\\\"\\n        [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\" [enable-data-filter]=\\\"false\\\">\\n        <amexio-data-table-column [width]=\\\"5\\\" [data-index]=\\\"'No'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'No.'\\\">\\n            <ng-template #amexioHeaderTmpl let-column=\\\"column\\\" let-index=\\\"index\\\">\\n                <amexio-label size=\\\"small\\\" font-color=\\\"white\\\">\\n                    {{column.text}}\\n                </amexio-label>\\n            </ng-template>\\n        </amexio-data-table-column>\\n        <amexio-data-table-column   [width]=\\\"10\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\">\\n        <ng-template #amexioHeaderTmpl let-column=\\\"column\\\" let-index=\\\"index\\\">\\n                <amexio-label size=\\\"small-bold\\\" font-color=\\\"white\\\">\\n                    {{column.text}}\\n                </amexio-label>\\n            </ng-template>\\n        </amexio-data-table-column>\\n        <amexio-data-table-column [width]=\\\"8\\\" [data-index]=\\\"'loginid'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Login-Id'\\\">\\n        <ng-template #amexioHeaderTmpl let-column=\\\"column\\\" let-index=\\\"index\\\">\\n        <amexio-label size=\\\"small\\\" font-color=\\\"red\\\">\\n            {{column.text}}\\n        </amexio-label>\\n    </ng-template>\\n        </amexio-data-table-column>\\n        <amexio-data-table-column [width]=\\\"14\\\" [data-index]=\\\"'emailid'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Email-Id'\\\">\\n        <ng-template #amexioHeaderTmpl let-column=\\\"column\\\" let-index=\\\"index\\\">\\n        <amexio-label size=\\\"small\\\" font-color=\\\"white\\\">\\n        <i class=\\\"fa fa-envelope\\\"  style=\\\"color:white\\\"></i>\\n            {{column.text}}\\n        </amexio-label>\\n    </ng-template>\\n        </amexio-data-table-column>\\n        <amexio-data-table-column [width]=\\\"8\\\" [data-index]=\\\"'phone'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Phone'\\\">\\n        <ng-template #amexioHeaderTmpl let-column=\\\"column\\\" let-index=\\\"index\\\">\\n        <amexio-label size=\\\"small\\\" font-color=\\\"white\\\">\\n        <i class=\\\"fa fa-phone\\\"  style=\\\"color:white\\\"></i>\\n            {{column.text}}\\n        </amexio-label>\\n    </ng-template>\\n        </amexio-data-table-column>\\n        <amexio-data-table-column [sort]=\\\"false\\\" [width]=\\\"10\\\" [data-index]=\\\"'Status'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Status'\\\">\\n        <ng-template #amexioHeaderTmpl let-column=\\\"column\\\" let-index=\\\"index\\\">\\n        <amexio-btn-dropdown [label]=\\\"'Status'\\\" [type]=\\\"'red'\\\" [size]=\\\"'small'\\\">\\n        \\n        <amexio-btn-dropdown-item  [label]=\\\"'Accept All'\\\">\\n        </amexio-btn-dropdown-item>\\n        <amexio-btn-dropdown-item [label]=\\\"'Reject All'\\\">\\n        </amexio-btn-dropdown-item>\\n        \\n    </amexio-btn-dropdown>\\n    </ng-template>\\n        <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n                <amexio-label class=\\\"fa fa-circle fa-lg\\\" [ngClass]=\\\"{'green': row.Status== 'Paid' , 'yellow': row.Status =='Pending' , 'red' : row.Status=='Approved'}\\\"></amexio-label>\\n                &nbsp;{{row.Status}}\\n            </ng-template>\\n        </amexio-data-table-column>\\n         \\n    </amexio-datagrid>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\\n\\n\"","/**\n * Created by Manisha on 22/6/18.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'grid-template-demo', \n  templateUrl: './headertemplate.demo.html',\n  styles: [\n    `\n    .button-dropdown{\n        color:black;\n        padding: 50px;\n    }\n    .listbox-StatusYellow {\n      background-color: yellow;\n    }\n    .listbox-StatusGreen  {\n      background-color: green;\n     }\n    .listbox-StatusRed {\n      background-color: red;\n  }\n  \n.red {\n    color: red!important;\n   \n}\n.green {\n    color: green!important;\n   \n}\n.yellow {\n    color: yellow!important;\n    \n}\n.template-progressBar .progress{\n  height:5px !important;\n}  \n`\n  ]\n})\nexport class HeaderTemplateDemo implements OnInit {\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource: string;\n  copyMsgArray: any[];\n  clickedRowData: any;\n  progressType: string;\n  actionWindowFlag: boolean;\n  projectData: any;\n  browserData: any;\n  \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n\n    this.projectData = {\n      \"response\": {\n        \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n          {\n            \"name\": \"Admin Template\t\",\n            \"status\": \" 65%\"\n          },\n          {\n            \"name\": \"Landing Page\",\n            \"status\": \"Finished\"\n          },\n          {\n            \"name\": \"Backend UI\t\",\n            \"status\": \"Rejected\"\n          },\n          {\n            \"name\": \"Personal Blog\",\n            \"status\": \"40%\"\n          },\n          {\n            \"name\": \"E-mail Templates\t\",\n            \"status\": \"13%\"\n          },\n          {\n            \"name\": \"Corporate Website\",\n            \"status\": \"Pending\"\n          }\n        ]\n      }\n    }\n    this.browserData = {\n      \"response\": {\n        \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n          {\n            \"name\": \"Google Chrome\",\n            \"usage\": \"23%\",\n            \"icon\": \"GoogleChrome.jpg \"\n          },\n          {\n            \"name\": \"Mozila Firefox\",\n            \"usage\": \"15%\",\n            \"icon\": \"MozilaFirefox.png \"\n          },\n          {\n            \"name\": \"Apple Safari\",\n            \"usage\": \"7%\",\n            \"icon\": \"AppleSafari.png \"\n          },\n          {\n            \"name\": \"Internet Explorer\",\n            \"usage\": \"9%\",\n            \"icon\": \"InternetExplorer.jpeg\"\n          },\n          {\n            \"name\": \"Opera mini\",\n            \"usage\": \"20%\",\n            \"icon\": \"Operamini.jpg\"\n          },\n          {\n            \"name\": \"Microsoft edge\",\n            \"usage\": \"9%\",\n            \"icon\": \"Microsoftedge.jpg\"\n          }\n        ]\n      }\n    }\n\n\n  }\n\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Header Template';\n    this.customSourceData.description = 'Defines header template for user customization AmexioColumn component. The template context is set to the current header.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/headertemplate/headertemplate.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/headertemplate/headertemplate.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/headertemplateemail.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/header-template?embed=1&file=app/data/headertemplate/headertemplate.demo.html&view=editor';\n  }\n  \n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n  getRowData(data: any) {\n    this.clickedRowData = data;\n  }\n\n  getGridTemplateData(row: any): string {\n    if (row.Usage >= 50) {\n      return \"success\";\n    }\n    if (row.Usage < 50 && row.Usage >= 30) {\n      return \"warning\";\n    }\n    if (row.Usage < 30) {\n      return \"danger\";\n    }\n  }\n\n\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\"  [url]=\\\"'assets/componentjson/data/item-selector.json'\\\">\\n  <amexio-api-demo>\\n   \\n   <amexio-row>\\n      <amexio-column [size]=\\\"12\\\">\\n        <amexio-card >\\n          <amexio-body>\\n            <amexio-row>\\n              <amexio-column [size]=\\\"12\\\">\\n                <amexio-item-selector  [height]=\\\"250\\\" [display-field]=\\\"'countryName'\\\"\\n                                      [value-field]=\\\"'countryId'\\\"  (selectedRecords)=\\\"getSelectedData($event)\\\"\\n                                      [http-url]=\\\"'assets/data/componentdata/selectordata.json'\\\"\\n                                      [http-method]=\\\"'get'\\\" [data-reader]=\\\"'data'\\\" \\n                                        >\\n                </amexio-item-selector>\\n              </amexio-column>\\n            </amexio-row>\\n            \\n            <amexio-row>\\n              <amexio-column [size]=\\\"12\\\">\\n                <amexio-card [header]=\\\"true\\\">\\n                  <amexio-header>Selected data</amexio-header>\\n                  <amexio-body>\\n                    {{selectedData|json}}\\n                  </amexio-body>\\n                </amexio-card>\\n              </amexio-column>\\n            </amexio-row>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, ViewChild, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'itemselector-demo', \n  templateUrl : './itemselector.demo.html',\n})\nexport class ItemSelectorDemo implements OnInit{\n  @ViewChild('item') itemRef: any;\n\n \n  copyMsgArray: any[];\n  selectedData: any;\n  selectedData1: any;\n  \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n  \n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Amexio Item-Selector';\n    this.customSourceData.description = 'ItemSelector is a specialized MultiSelect field that renders as a pair of MultiSelect field, one with available options and the other with selected options. A set of buttons in between allows items to be moved between the fields and reordered within the selection.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'forms/itemselector/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'forms/itemselector/form.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/country.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-itemselector?embed=1&file=app/data/itemselector/itemselector.demo.html&view=editor';\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n  getDropData(event: any) {\n    this.itemRef.removeNode(event);\n  }\n  drag(data: any) {\n    data.event.dataTransfer.setData(\"dragdata\", JSON.stringify(data.data));\n  }\n\n  dragOver(event: any) {\n    event.preventDefault();\n  }\n\n  drop(event: any) {\n    event.preventDefault();\n    this.selectedData = JSON.parse(event.dataTransfer.getData('dragdata'))\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure  [url]=\\\"'assets/componentjson/data/listbox.json'\\\">\\n  <amexio-api-demo>\\n    \\n    <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Simple List Box\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-listbox [enable-checkbox]=\\\"true\\\" [height]=\\\"400\\\"\\n                            [header]=\\\"'Contacts'\\\" [search-placeholder]=\\\"'Search Contacts'\\\"\\n                            [data]=\\\"localData\\\" [filter]=\\\"true\\\"\\n                            [data-reader]=\\\"'response.data'\\\"\\n                            [display-field]=\\\"'name_official'\\\" (selectedRows)=\\\"getSelectedData($event)\\\">\\n            </amexio-listbox>\\n            <p>\\n              <b>selected data</b> : {{selectedData | json}}\\n            </p>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             List Box with Template\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-listbox [height]=\\\"400\\\" [header]=\\\"'Contacts'\\\" [search-placeholder]=\\\"'Search Contacts'\\\"\\n                            [data]=\\\"localData\\\" [filter]=\\\"false\\\"\\n                            [data-reader]=\\\"'response.data'\\\"\\n                            [display-field]=\\\"'name'\\\" (onRowClick)=\\\"onRowClick($event)\\\">\\n              <ng-template #amexioBodyTmpl let-row=\\\"row\\\">\\n                <amexio-row>\\n                  <amexio-column [size]=\\\"1\\\">\\n                      <amexio-image [c-class]=\\\"'around-image'\\\" height=\\\"50px\\\" width=\\\"50px\\\" path=\\\"assets/images/profile/{{row.profile}}\\\"></amexio-image>\\n                  </amexio-column>\\n                  <amexio-column [size]=\\\"11\\\">\\n                    {{row.name}}\\n                  </amexio-column>\\n                </amexio-row>\\n              </ng-template>\\n            </amexio-listbox>\\n           <!-- <p>\\n              <b>clicked record data</b> : {{onRowClickData | json}}\\n            </p>-->\\n\\n            <amexio-row>\\n            <amexio-column [size]=\\\"5\\\">\\n              <amexio-listbox [height]=\\\"360\\\" [data]=\\\"projectData\\\" [filter]=\\\"false\\\" [header]=\\\"'Project'\\\" [enable-checkbox]=\\\"false\\\" [data-reader]=\\\"'response.data'\\\"\\n                [display-field]=\\\"'name'\\\">\\n                <ng-template #amexioBodyTmpl let-row=\\\"row\\\">\\n                  <amexio-row>\\n                    <amexio-column [size]=\\\"5\\\">\\n                      <amexio-label size=\\\"small\\\">\\n                        {{row.name}}\\n                      </amexio-label>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"3\\\">\\n  \\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"4\\\">\\n  \\n                      <a [ngClass]=\\\"{'listbox-StatusYellow': row.status == 'Pending', 'listbox-StatusGreen' : row.status == 'Finished','listbox-StatusRed'  : row.status == 'Rejected'}\\\">\\n                        {{row.status}}\\n                      </a>\\n                    </amexio-column>\\n                  </amexio-row>\\n                </ng-template>\\n              </amexio-listbox>\\n            </amexio-column>\\n            <amexio-column [size]=\\\"7\\\">\\n              <amexio-listbox [height]=\\\"400\\\" [data]=\\\"browserData\\\" [filter]=\\\"false\\\" [header]=\\\"'Browser Stats'\\\" [enable-checkbox]=\\\"false\\\"\\n                [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'name'\\\">\\n                <ng-template #amexioBodyTmpl let-row=\\\"row\\\">\\n                  <amexio-row>\\n                    <amexio-column [size]=\\\"4\\\">\\n                      <span>\\n  \\n                        <amexio-image [path]=\\\"'assets/images/'+row.icon\\\" [c-class]=\\\"'image-round'\\\">\\n                        </amexio-image>\\n  \\n                      </span>\\n  \\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                      <amexio-label size=\\\"small\\\">\\n                        {{row.name}}\\n                      </amexio-label>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"2\\\">\\n                      <amexio-label size=\\\"small\\\" font-color=\\\"grey\\\">\\n                        {{row.usage}}\\n                      </amexio-label>\\n  \\n                    </amexio-column>\\n                  </amexio-row>\\n                </ng-template>\\n              </amexio-listbox>\\n            </amexio-column>\\n          </amexio-row>\\n\\n\\n          </amexio-body>\\n        </amexio-card>\\n\\n      </amexio-column>\\n    </amexio-row>\\n\\n    <amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n      <amexio-card [header]=\\\"true\\\">\\n        <amexio-header>\\n           List Box With Context Menu\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-listbox [enable-checkbox]=\\\"true\\\" [height]=\\\"400\\\"\\n                          [header]=\\\"'Contacts'\\\" [search-placeholder]=\\\"'Search Contacts'\\\"\\n                          [data]=\\\"localData\\\" [filter]=\\\"true\\\"\\n                          [data-reader]=\\\"'response.data'\\\" [context-menu]=\\\"contextMenuData\\\"\\n                          [display-field]=\\\"'name_official'\\\" (selectedRows)=\\\"getSelectedData($event)\\\">\\n          </amexio-listbox>\\n        </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n\\n     \\n  </amexio-api-demo>\\n  </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'listbox-demo', \n  templateUrl: './listbox.demo.html',\n  styles:[\n    `\n    .listbox-StatusYellow {\n      background-color: yellow;\n    }\n    .listbox-StatusGreen  {\n      background-color: green;\n     }\n    .listbox-StatusRed {\n      background-color: red;\n  }\n  \n.red {\n    color: red!important;\n   \n}\n.green {\n    color: green!important;\n   \n}\n.yellow {\n    color: yellow!important;\n    \n}\n.template-progressBar .progress{\n  height:5px !important;\n}  \n`\n  ]\n})\nexport class ListBoxDemo {\n  \n  copyMsgArray: any[];\n  localData: any;\n  onRowClickData: any;\n  selectedData: any;\n  progressType: string;\n  actionWindowFlag: boolean;\n  projectData: any;\n  browserData: any;\n  contextMenuData: any;\n  constructor(private http: HttpClient) {\n    this.contextMenuData =\n    [{ \"text\": \"Add New\", \"icon\": \"fa fa-arrows\", \"disabled\": true },\n    { \"text\": \"Edit\", \"icon\": \"\", \"seperator\": true }\n        , { \"text\": \"Send data in email\", \"icon\": \"\" }];\n\n    this.localData = {\"response\": {\n      \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n        {\n          \"name\": \"Buck Kulkarni\",\n          \"name_official\": \"Buck Kulkarni\",\n          \"profile\": \"buck.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"Araf Karsh Hamid\",\n          \"name_official\": \"Araf Karsh Hamid\",\n          \"profile\": \"karsh.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"ketan Gote\",\n          \"name_official\": \"Ketan Gote\",\n          \"profile\": \"ketan.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n\n        {\n          \"name\": \"Dattaram Gawas\",\n          \"name_official\": \"Dattaram Gawas\",\n          \"profile\": \"dats.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"Sagar Jadhav\",\n          \"name_official\": \"Sagar Jadhav\",\n          \"profile\": \"sagar.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n      \n        {\n          \"name\": \"Rashmi Thakkar\",\n          \"name_official\": \"Rashmi Thakkar\",\n          \"profile\": \"rashmi.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"Deepali Arvind\",\n          \"name_official\": \"Deepali Arvind\",\n          \"profile\": \"dipali.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        },\n        {\n          \"name\": \"Ashwini Agre\",\n          \"name_official\": \"Ashwini Agre\",\n          \"profile\": \"ashwini.jpg\",\n          \"email\" : \"XYZ@metamagic.in\"\n        }\n      ]\n    }};\n\n    this.projectData = {\n      \"response\": {\n        \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n          {\n            \"name\": \"Admin Template\t\",\n            \"status\": \" 65%\"\n          },\n          {\n            \"name\": \"Landing Page\",\n            \"status\": \"Finished\"\n          },\n          {\n            \"name\": \"Backend UI\t\",\n            \"status\": \"Rejected\"\n          },\n          {\n            \"name\": \"Personal Blog\",\n            \"status\": \"40%\"\n          },\n          {\n            \"name\": \"E-mail Templates\t\",\n            \"status\": \"13%\"\n          },\n          {\n            \"name\": \"Corporate Website\",\n            \"status\": \"Pending\"\n          }\n        ]\n      }\n    }\n    this.browserData = {\n      \"response\": {\n        \"success\": true,\n        \"message\": \"Fetching  Data  Request Succeeded: Profile\",\n        \"data\": [\n          {\n            \"name\": \"Google Chrome\",\n            \"usage\": \"23%\",\n            \"icon\": \"GoogleChrome.jpg \"\n          },\n          {\n            \"name\": \"Mozila Firefox\",\n            \"usage\": \"15%\",\n            \"icon\": \"MozilaFirefox.png \"\n          },\n          {\n            \"name\": \"Apple Safari\",\n            \"usage\": \"7%\",\n            \"icon\": \"AppleSafari.png \"\n          },\n          {\n            \"name\": \"Internet Explorer\",\n            \"usage\": \"9%\",\n            \"icon\": \"InternetExplorer.jpeg\"\n          },\n          {\n            \"name\": \"Opera mini\",\n            \"usage\": \"20%\",\n            \"icon\": \"Operamini.jpg\"\n          },\n          {\n            \"name\": \"Microsoft edge\",\n            \"usage\": \"9%\",\n            \"icon\": \"Microsoftedge.jpg\"\n          }\n        ]\n      }\n    }\n\n\n  }\n\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  onRowClick(data: any) {\n    this.onRowClickData = data;\n  }\n\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n\n}\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\"  [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n  <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-spinner [show]=showLoader [type]=\\\"'fadingcircle'\\\" [vertical-position]=\\\"'center'\\\"\\n                        [horizontal-position]=\\\"'center'\\\">\\n        </amexio-spinner>\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n            Grid - Lazy Loading\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-datagrid\\n              title=\\\"Country Data \\\"\\n              [data]=\\\"countryData\\\"\\n              [height]=\\\"500\\\"\\n              [server-side-paging]=\\\"true\\\"\\n              [total-data-count]=\\\"totalDataCount\\\"\\n              (onPageChange)=\\\"loadPageData($event)\\\">\\n              <amexio-data-table-column\\n                [data-index]=\\\"'countryName'\\\"\\n                [data-type]=\\\"'string'\\\"\\n                [sort]=\\\"true\\\"\\n                [text]=\\\"'Name'\\\">\\n              </amexio-data-table-column>\\n              <amexio-data-table-column\\n                [sort]=\\\"true\\\"\\n                [data-index]=\\\"'countryCode1'\\\"\\n                [data-type]=\\\"'string'\\\"\\n                [text]=\\\"'Country Code'\\\">\\n              </amexio-data-table-column>\\n              <amexio-data-table-column\\n                [sort]=\\\"true\\\"\\n                [data-index]=\\\"'currencyName'\\\"\\n                [data-type]=\\\"'string'\\\"\\n                [text]=\\\"'Currency'\\\">\\n              </amexio-data-table-column>\\n            </amexio-datagrid>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-api-demo>\\n\\n</amexio-api-structure>\\n\\n\"","/**\n * Created by dattaram on 15/2/19.\n */\n\n\nimport {Component, OnInit} from '@angular/core';\nimport {ComponentDataStructure} from '../../apimetadata/models/component.structure';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'server-side-pagination-demo',\n  templateUrl : './serversidepagination.demo.html',\n})\nexport class ServerSidePaginationDemo implements OnInit {\n  countryData: any[] = [];\n  totalDataCount = 239;\n  showLoader = false;\n  customSourceData: ComponentDataStructure;\n  constructor(private _httpClient: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n    this.getData(0 , 10);\n  }\n\n  getData(startIndex: number, lastIndex: number) {\n    this.showLoader = true;\n    this._httpClient.get('https://restapi.amexio.org:8991/rest-sample-app/api/region/country/' + startIndex + '/' + lastIndex).subscribe(\n      (res: any) => {\n        this.countryData = res.response.data;\n        this.showLoader = false;\n      });\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Grid- Lazy Loading';\n    this.customSourceData.description = 'Data grid With lazy loading enabled for large data sets pagination, user can bring only require data and show. Based on total-count (attribute mapped) and initial datasize number of pages will be shown.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/serversidepagination/serversidepagination.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/serversidepagination/serversidepagination.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/country.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/server-side-paging?embed=1&file=src/app/grid/serverside.paging.component.html&view=editor';\n  }\n\n\n  loadPageData(pageInfo: any) {\n    this.getData(pageInfo.next.startIndex - 1, (pageInfo.next.endIndex > this.totalDataCount) ? this.totalDataCount : pageInfo.next.endIndex );\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\"  [url]=\\\"'assets/componentjson/data/grid.json'\\\">\\n    <amexio-api-demo>\\n      <amexio-row>\\n        <amexio-column size=\\\"12\\\">\\n          <amexio-card [header]=\\\"true\\\">\\n            <amexio-header>\\n              Simple Data Grid\\n            </amexio-header>\\n            <amexio-body>\\n              <amexio-datagrid [enable-column-fiter]=\\\"true\\\" title=\\\"Simple Data Grid \\\" [enable-checkbox]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/country.json'\\\"\\n                               [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n                <amexio-data-table-column [data-index]=\\\"'countryName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\" (selectedRowData)=\\\"getSelectedData($event)\\\">\\n                </amexio-data-table-column>\\n                <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'countryCode1'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Code'\\\"></amexio-data-table-column>\\n                <amexio-data-table-column [data-index]=\\\"'currencyName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Currency'\\\"></amexio-data-table-column>\\n              </amexio-datagrid>\\n            </amexio-body>\\n          </amexio-card>\\n        </amexio-column>\\n        <br>\\n        <amexio-column size=\\\"12\\\">\\n          <amexio-card [header]=\\\"true\\\">\\n            <amexio-header>\\n              Simple Data Grid with inner structure\\n            </amexio-header>\\n            <amexio-body>\\n              <amexio-datagrid [enable-column-fiter]=\\\"true\\\" title=\\\"Simple Data Grid with inner structure\\\" [enable-checkbox]=\\\"false\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/personProfile.json'\\\"\\n                               [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n                <amexio-data-table-column [data-index]=\\\"'personName'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\" (selectedRowData)=\\\"getSelectedRecord($event)\\\">\\n                </amexio-data-table-column>\\n                <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'designation'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Designation'\\\"></amexio-data-table-column>\\n                <amexio-data-table-column [data-index]=\\\"'address.addressLabel'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Address'\\\"></amexio-data-table-column>\\n              </amexio-datagrid>\\n            </amexio-body>\\n          </amexio-card>\\n        </amexio-column>\\n      </amexio-row>\\n    </amexio-api-demo>\\n\\n  </amexio-api-structure>\\n\\n\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n@Component({\n  selector: 'simplegrid-demo',\n  templateUrl :'./simplegrid.demo.html',\n})\nexport class SimpleGridDemo implements OnInit{\n  copyMsgArray: any[];\n  selectedData: any;\n  selectedRecord: any;\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n \n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Simple Data Grid';\n    this.customSourceData.description = 'Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/simplegrid/simplegrid.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/simplegrid/simplegrid.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/country.json';\n    this.customSourceData.sourceMetadata.datasourceUrl1 = 'assets/data/componentdata/personProfile.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-simple-grid?embed=1&file=app/grid/simplegrid/simplegrid.demo.html&view=editor';\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n\n  getSelectedRecord(data: any) {\n    this.selectedRecord = data;\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure  [url]=\\\"'assets/componentjson/data/spinner.json'\\\">\\n    <amexio-api-demo>\\n   \\n   <amexio-row>\\n        <amexio-column size=\\\"12\\\">\\n            <amexio-card [header]=\\\"true\\\">\\n                <amexio-header>\\n                    Data Loading Indicator\\n                </amexio-header>\\n                <amexio-body>\\n\\n                    <amexio-button [label]=\\\"text\\\" [type]=\\\"'yellow'\\\" [tooltip]=\\\"'show'\\\" (onClick)=\\\"onButtonClick()\\\">\\n                    </amexio-button>\\n                    <br />\\n                    <amexio-label size=\\\"small-bold\\\">Select Color For Spinner : -</amexio-label>\\n                    <input type=\\\"color\\\" id=\\\"head\\\" name=\\\"color\\\" (input)=\\\"setColorForIndictor($event)\\\" value=\\\"colorModel.color\\\" />\\n\\n\\n                    <amexio-row>\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'right'\\\">\\n                                <amexio-header>\\n                                    Advanced Spinner\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner *ngIf=\\\"isBoxShow\\\" [type]=\\\"spinnerModel.spinnerType\\\"\\n                                        [vertical-position]=\\\"spinnerModel.vposition\\\" [horizontal-position]=\\\"spinnerModel.hposition\\\"\\n                                        [color]=\\\"colorModel.color\\\">\\n                                    </amexio-spinner>\\n                                    <amexio-dropdown [place-holder]=\\\"'Choose'\\\" [(ngModel)]=\\\"spinnerModel.spinnerType\\\"\\n                                        [data-reader]=\\\"'type'\\\" [field-label]=\\\"'Choose Spinner Type'\\\" [data]=\\\"spinnerData\\\"\\n                                        [display-field]=\\\"'spinnerType'\\\" [value-field]=\\\"'spinnerType'\\\">\\n                                    </amexio-dropdown>\\n\\n                                    <amexio-dropdown [(ngModel)]=\\\"spinnerModel.vposition\\\" [place-holder]=\\\"'Choose'\\\"\\n                                        [data-reader]=\\\"'verticalPosition'\\\" [field-label]=\\\"'Choose Vertical Position'\\\"\\n                                        [data]=\\\"spinnerData\\\" [display-field]=\\\"'vposition'\\\" [value-field]=\\\"'vposition'\\\">\\n                                    </amexio-dropdown>\\n\\n                                    <amexio-dropdown [(ngModel)]=\\\"spinnerModel.hposition\\\" [place-holder]=\\\"'Choose'\\\"\\n                                        [data-reader]=\\\"'horizontalPosition'\\\" [field-label]=\\\"'Choose Horizontal Position'\\\"\\n                                        [data]=\\\"spinnerData\\\" [display-field]=\\\"'hposition'\\\" [value-field]=\\\"'hposition'\\\">\\n                                    </amexio-dropdown>\\n                                </amexio-body>\\n\\n                                <amexio-action>\\n                                    <amexio-button [label]=\\\"buttonShowHide\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'show'\\\"\\n                                        (onClick)=\\\"onAdvanceClick()\\\">\\n                                    </amexio-button>\\n                                </amexio-action>\\n                            </amexio-card>\\n                        </amexio-column>\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\">\\n                                <amexio-header>\\n                                    fading circle round loader\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner [show]=clickShow [size]=\\\"'10px'\\\" relative=\\\"true\\\" [type]=\\\"'fadingcircle'\\\"\\n                                        [color]=\\\"colorModel.color\\\">\\n                                    </amexio-spinner>\\n                                </amexio-body>\\n                            </amexio-card>\\n                        </amexio-column>\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\">\\n                                <amexio-header>\\n                                    ball spin loader\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner [show]=clickShow [size]=\\\"'9px'\\\" relative=\\\"true\\\" [type]=\\\"'ballspin'\\\"\\n                                        [color]=\\\"colorModel.color\\\">\\n                                    </amexio-spinner>\\n                                </amexio-body>\\n                            </amexio-card>\\n                        </amexio-column>\\n                    </amexio-row>\\n\\n                    <amexio-row>\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                <amexio-header>\\n                                    fire spin loader\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner [show]=clickShow [size]=\\\"'50px'\\\" relative=\\\"true\\\" [type]=\\\"'firespin'\\\"\\n                                        [color]=\\\"colorModel.color\\\">\\n                                    </amexio-spinner>\\n                                </amexio-body>\\n                            </amexio-card>\\n                        </amexio-column>\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                <amexio-header>\\n                                    three bounce loader\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner [show]='clickShow' [size]=\\\"'8px'\\\" relative=\\\"true\\\" [type]=\\\"'threebounce'\\\"\\n                                        [color]=\\\"colorModel.color\\\">\\n                                    </amexio-spinner>\\n                                </amexio-body>\\n                            </amexio-card>\\n                        </amexio-column>\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\">\\n                                <amexio-header>\\n                                    spinner round loader\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner [show]=clickShow [size]=\\\"'6px'\\\" relative=\\\"true\\\" [type]=\\\"'spinnerround'\\\"\\n                                        [color]=\\\"colorModel.color\\\">\\n                                    </amexio-spinner>\\n                                </amexio-body>\\n                            </amexio-card>\\n                        </amexio-column>\\n                    </amexio-row>\\n\\n                    <amexio-row>\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                <amexio-header>\\n                                    ring loader\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner [show]=clickShow [size]=\\\"'10px'\\\" [color]=\\\"colorModel.color\\\"\\n                                        relative=\\\"true\\\" [type]=\\\"'ring'\\\">\\n                                    </amexio-spinner>\\n                                </amexio-body>\\n                            </amexio-card>\\n                        </amexio-column>\\n\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                <amexio-header>\\n                                    half circle loader\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner [show]=clickShow [size]=\\\"'10px'\\\" relative=\\\"true\\\" [type]=\\\"'halfcircle'\\\">\\n                                    </amexio-spinner>\\n                                </amexio-body>\\n                            </amexio-card>\\n                        </amexio-column>\\n                        <amexio-column [size]=\\\"4\\\" [fit]=true>\\n                            <amexio-card [header]=\\\"true\\\" [body-height]=\\\"45\\\">\\n                                <amexio-header>\\n                                    rectangle Bounce loader\\n                                </amexio-header>\\n                                <amexio-body>\\n                                    <amexio-spinner [show]=clickShow [size]=\\\"'9px'\\\" relative=\\\"true\\\" [type]=\\\"'rectanglebounce'\\\">\\n                                    </amexio-spinner>\\n                                </amexio-body>\\n                            </amexio-card>\\n                        </amexio-column>\\n                    </amexio-row>\\n\\n\\n\\n\\n                </amexio-body>\\n            </amexio-card>\\n\\n        </amexio-column>\\n    </amexio-row>\\n</amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by kedar on 19/9/18.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SpinnerModel } from './spinner.model';\n@Component({\n    selector: 'amexio-spinner-demo',\n    templateUrl: './spinner.demo.html',\n\n})\nexport class AmexioSpinnerDemo {\n    copyMsgArray: any[];\n    color: any;\n    boxFlag: any;\n    spinnerData: any;\n    isBoxShow: boolean = false;\n    colorModel: ColorModel;\n    clickShow: boolean = true;\n    buttonShowHide: string = 'Show';\n    text: string = 'Hide';\n\n    showSpinner: any;\n    spinnerType: string;\n    hposition: string;\n    vposition: string;\n    spinnerModel: SpinnerModel;\n    constructor(private http: HttpClient) {\n        this.colorModel = new ColorModel();\n        this.spinnerModel = new SpinnerModel();\n        this.spinnerData = {\n            \"type\": [\n                {\n                    \"spinnerType\": \"rectanglebounce\",\n                },\n                {\n                    \"spinnerType\": \"ring\",\n                },\n                {\n                    \"spinnerType\": \"halfcircle\",\n                },\n                {\n                    \"spinnerType\": \"fadingcircle\",\n                },\n                {\n                    \"spinnerType\": \"ballspin\",\n                },\n                {\n                    \"spinnerType\": \"firespin\",\n                },\n                {\n                    \"spinnerType\": \"threebounce\",\n                },\n                {\n                    \"spinnerType\": \"spinnerround\",\n                }\n            ],\n            \"horizontalPosition\": [\n                {\n                    \"hposition\": \"left\"\n                },\n                {\n                    \"hposition\": \"center\"\n                },\n                {\n                    \"hposition\": \"right\"\n                }\n            ],\n            \"verticalPosition\": [\n                {\n                    \"vposition\": \"top\"\n                },\n                {\n                    \"vposition\": \"center\"\n                },\n                {\n                    \"vposition\": \"bottom\"\n                }\n            ]\n        }\n    }\n\n   \n    //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n    onCopyClick() {\n        if (this.copyMsgArray.length >= 1) {\n            this.copyMsgArray = [];\n            this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n        } else {\n            this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n        }\n    }\n\n    //THIS METHOD IS USED FOR SETTING COLOR FOR INDICATOR\n    setColorForIndictor(colorName: any) {\n        this.colorModel.color = colorName.target.value;\n    }\n    // Method For the spinner show and hide\n    onButtonClick() {\n\n        if (this.clickShow) {\n            this.text = 'Show';\n        } else {\n            this.text = 'Hide'\n        }\n        this.clickShow = !this.clickShow;\n    }\n\n\n    onAdvanceClick() {\n        if (this.spinnerModel.hposition != null && this.spinnerModel.spinnerType != null && this.spinnerModel.vposition != null) {\n            this.buttonShowHide = 'Show';\n\n        } else {\n            this.buttonShowHide = 'Hide';\n        }\n        this.isBoxShow = !this.isBoxShow;\n        if(this.isBoxShow){\n            this.buttonShowHide = 'Hide';\n        }else{\n            this.buttonShowHide = 'Show';\n        }\n    }\n}\n\n\n\nexport class ColorModel {\n    color: string;\n    show: boolean;\n    constructor() {\n\n    }\n}\n","export class SpinnerModel {\n    vposition: string;\n    hposition: string;\n    spinnerType: string;\n}","module.exports = \"<amexio-api-structure  [url]=\\\"'assets/componentjson/data/timeline.json'\\\">\\n    <amexio-api-demo>\\n      \\n      <amexio-card header=\\\"true\\\">\\n            <amexio-header> Timeline Component (Example-1)</amexio-header>\\n            <amexio-body>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"12\\\">\\n                        <amexio-timeline [content-alignment]=\\\"''\\\">\\n                            <amexio-timeline-event [label]=\\\"'08:30'\\\" [icon]=\\\"'fa fa-file'\\\" [content-border]=\\\"true\\\">\\n                                <amexio-label size=\\\"large-bold\\\">REGISTRATION</amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'09:00'\\\" [icon]=\\\"'fa fa-microphone'\\\">\\n                                <amexio-label>Keynote Talk:Disrupting the Disruptors- Where does Blockchain go from here\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'09:15'\\\" [icon]=\\\"'fa fa-microphone'\\\">\\n                                <amexio-label>Blockchain in Enterprise- How Companies are using Blockchain Today\\n                                </amexio-label>\\n                                <amexio-chips>\\n                                    <amexio-chip [label]=\\\"'Araf Karsh Hamid'\\\" [color]=\\\"'grey'\\\">\\n                                    </amexio-chip>\\n                                </amexio-chips>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'09:50'\\\" [icon]=\\\"'fa fa-coffee'\\\">\\n                                <amexio-label>Networking Break\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'10:05'\\\" [icon]=\\\"'fa fa-microphone'\\\">\\n                                <amexio-label>Understand Blockchain HyperLedger Fabric For Enterprises\\n                                </amexio-label>\\n                                <amexio-chips>\\n                                    <amexio-chip [label]=\\\"'Ketan Gote'\\\" [color]=\\\"'grey'\\\">\\n                                    </amexio-chip>\\n                                </amexio-chips>\\n                            </amexio-timeline-event>\\n                        </amexio-timeline>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-body>\\n        </amexio-card>\\n        <amexio-card header=\\\"true\\\">\\n            <amexio-header> Timeline Component (Example-2)</amexio-header>\\n            <amexio-body>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"12\\\">\\n                        <amexio-timeline [content-alignment]=\\\"''\\\">\\n                            <amexio-timeline-event [label]=\\\"''\\\" [icon]=\\\"'fa fa-asterisk'\\\">\\n                                <amexio-image [path]=\\\"'assets/images/timeline/ataturk_1.jpg'\\\" [filter]=\\\"'sepia'\\\" [image-title]=\\\"'1981'\\\" [title-position]=\\\"'bottom-left'\\\">\\n                                </amexio-image>\\n                                <amexio-label>\\n                                    He was born in 1881 (probably in the spring) in Salonica, then an Ottoman city, now inGreece. His father Ali Riza, a customs\\n                                    official turned lumber merchant, died when Mustafawas still a boy. His mother\\n                                    Zubeyde, adevout and strong-willed woman, raised him and his sister.\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"''\\\" [icon]=\\\"'fa fa-asterisk'\\\">\\n                                <amexio-image [path]=\\\"'assets/images/timeline/mustafa-kemal.jpg'\\\" [filter]=\\\"'sepia'\\\" [image-title]=\\\"'1983'\\\" [title-position]=\\\"'bottom-left'\\\">\\n                                </amexio-image>\\n                                <amexio-label>First enrolled in a traditionalreligious school, he soon switched to a modern school.\\n                                    In 1893, he entered a military highschool where his mathematics teacher gave\\n                                    him the second name Kemal (meaning perfection)in recognition of young Mustafa's\\n                                    superior achievement.\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"''\\\" [icon]=\\\"'fa fa-asterisk'\\\">\\n                                <amexio-image [path]=\\\"'assets/images/timeline/mustafa-kemal1.jpg'\\\" [filter]=\\\"'sepia'\\\" [image-title]=\\\"'1905'\\\" [title-position]=\\\"'bottom-left'\\\">\\n                                </amexio-image>\\n                                <amexio-label>In 1905, Mustafa Kemal graduated from the War Academy in Istanbul with the rank of\\n                                    Staff Captain. Posted in Damascus, he started with several colleagues, a clandestinesociety\\n                                    called \\\"Homeland and Freedom\\\" to fight against the Sultan'sdespotism.\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"''\\\" [icon]=\\\"'fa fa-asterisk'\\\">\\n                                <amexio-image [path]=\\\"'assets/images/timeline/ataturk-10-kasim.jpg'\\\" [filter]=\\\"'sepia'\\\" [image-title]=\\\"'1908'\\\" [title-position]=\\\"'bottom-left'\\\">\\n                                </amexio-image>\\n                                <amexio-label>In 1908 he helped the group of officers who toppled the Sultan. Mustafa Kemal'scareer\\n                                    flourished as he won his heroism in the far corners of the Ottoman Empire,including\\n                                    Albania and Tripoli. He also briefly served as a staff officer in Salonica andIstanbul\\n                                    and as a military attache in Sofia.\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"''\\\" [icon]=\\\"'fa fa-asterisk'\\\">\\n                                <amexio-image [path]=\\\"'assets/images/timeline/mustafa-kemal2.jpg'\\\" [filter]=\\\"'sepia'\\\" [image-title]=\\\"'1915'\\\" [title-position]=\\\"'bottom-left'\\\">\\n                                </amexio-image>\\n                                <amexio-label>In 1915, when Dardanelles campaign was launched, Colonel Mustafa Kemal became anational\\n                                    hero by winning successive victories and finally repelling the invaders.\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"''\\\" [icon]=\\\"'fa fa-asterisk'\\\">\\n                                <amexio-image [path]=\\\"'assets/images/timeline/atatürk-ün-inanılmaz-karizmatik.jpg'\\\" [filter]=\\\"'sepia'\\\" [image-title]=\\\"'1916'\\\"\\n                                    [title-position]=\\\"'bottom-left'\\\">\\n                                </amexio-image>\\n                                <amexio-label>\\n                                    Promotedto general in 1916, at age 35, he liberated two major provinces in eastern Turkey thatyear. In the next two years,\\n                                    he served as commander of several Ottoman armies inPalestine, Aleppo, and elsewhere,\\n                                    achieving another major victory by stopping the enemyadvance at Aleppo.\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                        </amexio-timeline>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-body>\\n        </amexio-card>\\n        <amexio-card header=\\\"true\\\">\\n            <amexio-header> Timeline Component(Right-Align)</amexio-header>\\n            <amexio-body>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"12\\\">\\n                        <amexio-timeline [content-alignment]=\\\"'right'\\\">\\n                            <amexio-timeline-event [label]=\\\"'Week One'\\\" [icon]=\\\"'fa fa-book'\\\" [content-border]=\\\"true\\\">\\n                                <amexio-label size=\\\"medium-bold\\\">UNDERSTAND</amexio-label>\\n                                <amexio-label size=\\\"small\\\">Gather existing knowledge,expose assumptions and unknowns</amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'Week Two'\\\" [icon]=\\\"'fa fa-certificate'\\\" [content-border]=\\\"true\\\">\\n\\n                                <amexio-label size=\\\"medium-bold\\\"> DIVERGE</amexio-label>\\n                                <amexio-label size=\\\"small\\\">Elluminate all paths.Our goal is to explore as many possibilities as possible,regardless\\n                                    of how realistic,feasible or viable they may or may not be. </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'Week Three'\\\" [icon]=\\\"'fa fa-asterisk'\\\" [content-border]=\\\"true\\\">\\n                                <amexio-label size=\\\"medium-bold\\\">CONVERGE</amexio-label>\\n                                <amexio-label size=\\\"small\\\">Our Goal is to take all of the possibilities that we have exposed over the past two\\n                                    weeks and hone in on a single version of the prototype that we will build tomorrow\\n                                </amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'Week Four'\\\" [icon]=\\\"'fa fa-cogs'\\\" [content-border]=\\\"true\\\">\\n                                <amexio-label size=\\\"medium-bold\\\">PROTOTYPING</amexio-label>\\n                                <amexio-label size=\\\"small\\\">During this phase you will build a quick and dirty prototype.Since you only have\\n                                    at most a week to build the prototype it should be low-fi as you can get away\\n                                    with during Testing.</amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'Week Five'\\\" [icon]=\\\"'fa fa-edit'\\\" [content-border]=\\\"true\\\">\\n                                <amexio-label size=\\\"medium-bold\\\">TESTING</amexio-label>\\n                                <amexio-label size=\\\"small\\\">Going into each test you should have a plan of what you area testing and how you\\n                                    know if that is successful or not.</amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'Week Six'\\\" [icon]=\\\"'fa fa-spinner'\\\" [content-border]=\\\"true\\\">\\n                                <amexio-label size=\\\"medium-bold\\\">REITERATION</amexio-label>\\n                                <amexio-label size=\\\"small\\\">To reiterate something is to say or do something again, or many times.Let me reiterate:if\\n                                    you reapeat yourself,you're reiterating the thing you originally said.</amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'Week Seven'\\\" [icon]=\\\"'fa fa-calendar'\\\" [content-border]=\\\"true\\\">\\n                                <amexio-label size=\\\"medium-bold\\\">REVIEW</amexio-label>\\n                                <amexio-label size=\\\"small\\\">To look back over something for evaluation or memory.*The year in review* is a popular\\n                                    form of news feature near the end of December.</amexio-label>\\n                            </amexio-timeline-event>\\n                            <amexio-timeline-event [label]=\\\"'Week Eight'\\\" [icon]=\\\"'fa fa-thumbs-up'\\\" [content-border]=\\\"true\\\">\\n                                <amexio-label size=\\\"medium-bold\\\">FINALIZE </amexio-label>\\n                                <amexio-label size=\\\"small\\\">When you put the finishing touches on something,such as agreeeing on a specific time\\n                                    and place to meet your friend on Saturday,you finalie your plans.</amexio-label>\\n                            </amexio-timeline-event>\\n                        </amexio-timeline>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-body>\\n        </amexio-card>\\n\\n        </amexio-api-demo>\\n        </amexio-api-structure>\\n\"","/**\n * Created by pratik on 16/1/18.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n selector: 'timeline-demo',\n templateUrl:'timeline.demo.html'\n})\n\nexport class TimelineDemoComponent {\n  \n  copyMsgArray: any[];\n  asyncFlag : boolean;\n  constructor(private http: HttpClient) {\n    \n  }\n  getDta() {\n    this.asyncFlag = true;\n    setTimeout(() => {\n      this.asyncFlag = false;\n    }, 3000);\n  }\n  \n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n","module.exports = \"    \\n    <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/tree.json'\\\">\\n      <amexio-api-demo>\\n      \\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Tree with Checkbox\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-treeview [enable-checkbox]=\\\"true\\\" [data-reader]=\\\"'data'\\\"\\n                             [data]=\\\"treeLocalData\\\" (onTreeNodeChecked)=\\\"getNodeData($event)\\\">\\n            </amexio-treeview>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Selected Data \\n          </amexio-header>\\n          <amexio-body>\\n            <pre><code>{{selectedData | json}}</code></pre>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'checkbox-tree-demo', \n  templateUrl : './checkboxtree.demo.html',\n})\nexport class CheckboxTreeDemo implements OnInit {\n \n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n\n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\" : true,\n                \"children\":[],\n                \"lazy\":{\n                  \"http-url\":\"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Tree With Checkbox';\n    this.customSourceData.description = 'A Expandable Tree Component for Angular, having Checkbox functionality.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/checkboxtree/checkboxtree.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/checkboxtree/checkboxtree.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/treeview.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-tree-with-checkbox?embed=1&file=app/tree/treewithcheckbox/treewithcheckbox.demo.html&view=editor';\n  }\n\n  \n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/tree.json'\\\">\\n    <amexio-api-demo>\\n    \\n       \\n       <amexio-row>\\n            <amexio-column size=\\\"6\\\">\\n                <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'right'\\\">\\n                    <amexio-header style=\\\"width:100%\\\">\\n                    <amexio-toolbar>\\n                    <amexio-toolbar-item position-left >\\n                    <amexio-image [ngClass]=\\\"text\\\" (click)=\\\"expandAlldata(id)\\\">\\n                         </amexio-image>\\n                    </amexio-toolbar-item>\\n                    <amexio-toolbar-item position-left >\\n                     <label style=\\\"margin-top: 0px; font-size: 18px\\\">\\n                     &nbsp;  &nbsp; Expand all and collapse all function\\n                     </label>\\n                    </amexio-toolbar-item>\\n                    </amexio-toolbar>\\n                        \\n                    </amexio-header>\\n                    <amexio-body>\\n                        <amexio-treeview #id [data-reader]=\\\"'item'\\\" [data]=\\\"treeLocalExpandData\\\" (nodeClick)=\\\"getNodeDataClick($event)\\\">\\n                        </amexio-treeview>\\n                    </amexio-body>\\n                    <amexio-action>\\n                        </amexio-action>\\n                </amexio-card>\\n            </amexio-column>\\n            <amexio-column size=\\\"6\\\" [fit]='true'>\\n                <amexio-card [header]=\\\"true\\\">\\n                    <amexio-header>\\n                        Selected Data\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <pre><code>{{expandSelectedData | json}}</code></pre>\\n                    </amexio-body>\\n                </amexio-card>\\n            </amexio-column>\\n        </amexio-row>\\n\\n        </amexio-api-demo>\\n        </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { AmexioTreeViewComponent } from 'amexio-ng-extensions';\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'collapsetree-demo',\n  templateUrl :'./collapsetree.demo.html',\n})\nexport class CollapseTreeDemo implements OnInit{\n \n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  treeLocalExpandData: any;\n  expandSelectedData: any;\n\n  public text: string = \"fa fa-minus\";\n  expand: boolean = true;\n\n  expandAlldata(id) {\n    if (!this.expand) {\n      id.expandAll();\n      this.text = \"fa fa-minus\"\n    } else {\n      id.collapseAll();\n      this.text = \"fa fa-plus\"\n    }\n    this.expand = !this.expand;\n  }\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n\n    this.treeLocalExpandData = {\n      \"item\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\": true,\n                \"children\": [],\n                \"lazy\": {\n                  \"http-url\": \"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Collapseable And Expandable Tree ';\n    this.customSourceData.description = 'A Collapse and Expandable Tree component which create Tree View based on standard datasource attached.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/collapsetree/collapsetree.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/collapsetree/collapsetree.text';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-collapseble-tree?embed=1&file=app/collapsetree/simpletree/simpletree.demo.html&view=editor';\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n  getNodeDataClick(data: any) {\n    this.expandSelectedData = data;\n  }\n\n \n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n}\n","module.exports = \"   \\n    <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/tree.json'\\\">\\n      <amexio-api-demo>\\n      \\n   <amexio-row>\\n      <amexio-column size=\\\"8\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n              Tree With Context Menu \\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-treeview \\n                [data-reader]=\\\"'data'\\\" \\n                [data]=\\\"treeLocalData\\\" \\n                [context-menu]=\\\"rightclickdata\\\">\\n            </amexio-treeview>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'contextmenutree-demo', \n  templateUrl :'./contextmenutree.demo.component.html',\n})\nexport class ContextMenuTreeDemo implements OnInit {\n\n  copyMsgArray: any[];\n  treeLocalData: any;\n  rightclickdata: any;\n\n  \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n    this.rightclickdata=\n    [{\"text\":\"Add New\",\"icon\":\"fa fa-plus\",\"disabled\":true},{\"text\":\"Edit\",\"icon\":\"\",\"seperator\":true}\n     ,{\"text\":\"Send data in email\",\"icon\":\"\"}];\n\n   \n\n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"badge\": 1,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\",\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"badge\": 3,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"badge\": 3,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\",\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\",\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\" : true,\n                \"children\":[],\n                \"lazy\":{\n                  \"http-url\":\"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"badge\": 1,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"badge\": 2,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Tree With Context Menu';\n    this.customSourceData.description = 'A Expandable Tree component which create Tree View based on standard datasource with context menu(right-click mouse operation)';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/contextmenutree/tree.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/contextmenutree/tree.text';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-tree-contextmenu-demo?embed=1&file=src/app/contextualmenu/tree/tree.demo.component.html&view=editor';\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n}\n\n\n","module.exports = \"    \\n     <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/filtertree.json'\\\">\\n      <amexio-api-demo>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Filter Tree\\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-tree-filter-view [data-reader]=\\\"'data'\\\"\\n                                     [http-method]=\\\"'get'\\\" (nodeClick)=\\\"getNodeData($event)\\\"\\n                                     [http-url]=\\\"'assets/data/componentdata/sidenav.json'\\\">\\n            </amexio-tree-filter-view>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Selected Data\\n          </amexio-header>\\n          <amexio-body>\\n            <pre><code>{{selectedData | json}}</code></pre>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'tree-filter-demo', \n  templateUrl: './filtertree.demo.html',\n})\nexport class FilterTreeDemo implements OnInit{\n\n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  \n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\" : true,\n                \"children\":[],\n                \"lazy\":{\n                  \"http-url\":\"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  \n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Filter Tree';\n    this.customSourceData.description = 'A Expandable Tree Component for Angular, having Filtering functionality.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/filtertree/filtertree.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/filtertree/filtertree.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/sidenav.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-tree-with-filter?embed=1&file=app/tree/treewithfilter/treewithfilter.demo.html&view=editor';\n  }\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/horizontaltree.json'\\\">\\n  <amexio-api-demo>\\n  \\n  <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Horizontal Tree \\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-horizontal-treeview [data-reader]=\\\"'data'\\\"\\n                                     [http-method]=\\\"'get'\\\" \\n                                     [label]=\\\"'Menu'\\\"\\n                                     (nodeClick)=\\\"getNodeData($event)\\\"\\n                                     [http-url]=\\\"'assets/data/componentdata/sidenav.json'\\\">\\n            </amexio-horizontal-treeview>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Selected Data \\n          </amexio-header>\\n          <amexio-body>\\n            <pre><code>{{selectedData | json}}</code></pre>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\\n    \"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'horizontal-tree-demo',\n  templateUrl : './horizontaltree.demo.html',\n})\nexport class HorizontalTreeDemo implements OnInit{\n \n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\" : true,\n                \"children\":[],\n                \"lazy\":{\n                  \"http-url\":\"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'horizontal Tree';\n    this.customSourceData.description = 'A Horizontal Tree Component.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/horizontaltree/horizontaltree.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/horizontaltree/horizontaltree.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/sidenav.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-tree-horizontal?embed=1&file=app/tree/treehorizontal/treehorizontal.demo.html&view=editor';\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/tree.json'\\\">\\n    <amexio-api-demo>\\n        <amexio-row>\\n            <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">\\n                <amexio-card [header]=\\\"true\\\">\\n                    <amexio-header>\\n                        Simple Tree\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <amexio-treeview [data-reader]=\\\"'data'\\\" [data]=\\\"treeLocalData\\\" (nodeClick)=\\\"getNodeData($event)\\\">\\n                        </amexio-treeview>\\n                    </amexio-body>\\n                </amexio-card>\\n            </amexio-column>\\n            <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">\\n                <amexio-card [header]=\\\"true\\\">\\n                    <amexio-header>\\n                        Selected Data\\n                    </amexio-header>\\n                    <amexio-body>\\n                        <pre><code>{{selectedData | json}}</code></pre>\\n                    </amexio-body>\\n                </amexio-card>\\n            </amexio-column>\\n        </amexio-row>\\n\\n\\n        <amexio-card header=\\\"true\\\">\\n            <amexio-header>\\n                Dynamically Changes Tree Data\\n            </amexio-header>\\n            <amexio-body>\\n\\n                <p> By Default Tree consumes standard JSON structure i.e to display node/leaf “Text” Key\\n                    should be present in JSON && array with “Children” Key present in JSON.\\n                    Now with 5.2.x release Amexio-tree component can consume user defined data structure and\\n                    pass what is key for node/leaf and what is key for children array.\\n                </p>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Tree with user define keys\\n                            </amexio-header>\\n                            <amexio-body>\\n\\n                                <amexio-treeview [data-reader]=\\\"'customArray'\\\" [display-key]=\\\"'demo'\\\" [child-array-key]=\\\"'object'\\\"\\n                                    [data]=\\\"customArrayLocalData\\\" (nodeClick)=\\\"getCustomNodeData($event)\\\">\\n                                </amexio-treeview>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">\\n                        <amexio-card [header]=\\\"true\\\">\\n                            <amexio-header>\\n                                Selected Data\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <pre><code>{{selectedCustomData | json}}</code></pre>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-body>\\n        </amexio-card>\\n\\n    </amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { AmexioTreeViewComponent } from 'amexio-ng-extensions';\n\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'simpletree-demo', \n  templateUrl :'./simpletree.demo.html',\n})\nexport class SimpleTreeDemo implements OnInit{\n \n  dataCustomSource: string;\n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  selectedCustomData: any;\n  expandSelectedData: any;\n  customArrayLocalData: any;\n\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\": true,\n                \"children\": [],\n                \"lazy\": {\n                  \"http-url\": \"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n\n    this.customArrayLocalData = {\n      \"customArray\": [{\n        \"demo\": \"Web App\",\n        \"expand\": true,\n        \"object\": [\n          {\n            \"demo\": \"app\",\n            \"expand\": true,\n            \"object\": [\n              {\n                \"leaf\": true,\n                \"demo\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"demo\": \"button\",\n            \"expand\": true,\n            \"object\": [\n              {\n                \"leaf\": true,\n                \"demo\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"demo\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"demo\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"demo\": \"container\",\n            \"expand\": true,\n            \"object\": [\n              {\n                \"leaf\": true,\n                \"demo\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"demo\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"demo\": \"Viewport.js\",\n                \"expand\": true,\n                \"object\": [],\n                \"lazy\": {\n                  \"http-url\": \"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"demo\": \"core\",\n            \"expand\": true,\n            \"object\": [\n              {\n                \"demo\": \"dom\",\n                \"expand\": true,\n                \"object\": [\n                  {\n                    \"leaf\": true,\n                    \"demo\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"demo\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n\n  }\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'simple Tree';\n    this.customSourceData.description = 'A Simple Expandable Tree component which create Tree View based on standard datasource attached.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/simpletree/simpletree.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/simpletree/simpletree.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/simpletreeview.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-simple-tree?embed=1&file=app/tree/simpletree/simpletree.demo.html&view=editor';\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n\n  getCustomNodeData(data: any) {\n    this.selectedCustomData = data;\n  }\n \n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/tree.json'\\\">\\n    <amexio-api-demo>\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n            <amexio-header>\\n                Drag Drop Functionality within Tree\\n            </amexio-header>\\n            <amexio-body>\\n                <amexio-treeview [data-reader]=\\\"'data'\\\" [enable-drag]=\\\"true\\\" [enable-drop]=\\\"true\\\" [data]=\\\"treeData\\\">\\n                </amexio-treeview>\\n            </amexio-body>\\n        </amexio-card>\\n    </amexio-column>\\n\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\" [footer]=\\\"false\\\" [footer-align]=\\\"'right'\\\">\\n            <amexio-header>\\n                Drag Drop Functionality across Tree\\n            </amexio-header>\\n            <amexio-body>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-card [header]=\\\"true\\\" [footer]=\\\"false\\\" [footer-align]=\\\"'right'\\\">\\n                            <amexio-header>\\n                                Tree 1\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-treeview #tree (onDrop)=\\\"getDropData1($event)\\\" [data-reader]=\\\"'data'\\\"\\n                                    [enable-drag]=\\\"true\\\" [enable-drop]=\\\"true\\\" [data]=\\\"treeLocalData\\\" [across-tree]=\\\"true\\\">\\n                                </amexio-treeview>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-card [header]=\\\"true\\\" [footer]=\\\"false\\\" [footer-align]=\\\"'right'\\\">\\n                            <amexio-header>\\n                                Tree 2\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-treeview #tree1 (onDrop)=\\\"getDropData($event)\\\" [data-reader]=\\\"'data'\\\"\\n                                    [enable-drag]=\\\"true\\\" [enable-drop]=\\\"true\\\" [data]=\\\"treeLocalData1\\\" [across-tree]=\\\"true\\\">\\n                                </amexio-treeview>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-body>\\n        </amexio-card>\\n    </amexio-column>\\n\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-card [header]=\\\"true\\\" [footer]=\\\"false\\\" [footer-align]=\\\"'right'\\\">\\n            <amexio-header>\\n                Drag and Drop: Tree to Panel\\n            </amexio-header>\\n            <amexio-body>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-card [header]=\\\"true\\\" [footer]=\\\"false\\\" [footer-align]=\\\"'right'\\\">\\n                            <amexio-header>\\n                                Tree 1\\n                            </amexio-header>\\n                            <amexio-body>\\n                                <amexio-treeview [data-reader]=\\\"'data'\\\" (onDrag)=\\\"drag($event)\\\" [enable-drag]=\\\"true\\\"\\n                                    [enable-drop]=\\\"false\\\" [data]=\\\"treeLocalData\\\">\\n                                </amexio-treeview>\\n                            </amexio-body>\\n                        </amexio-card>\\n                    </amexio-column>\\n\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-panel (dragover)=\\\"dragOver($event)\\\" (drop)=\\\"drop($event)\\\" [header]=\\\"true\\\" [title]=\\\"'Panel'\\\"\\n                            [expanded]=\\\"true\\\">\\n                            <pre><code>{{selectedData | json}}</code></pre>\\n                        </amexio-panel>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-body>\\n        </amexio-card>\\n    </amexio-column>\\n</amexio-row>\\n</amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by rashmi on 20/6/18.\n */\n\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'dragdroptree-demo',\n  templateUrl :'./treedragdrop.demo.html',\n})\nexport class DragDropTreeDemo implements OnInit{\n\n  @ViewChild('tree') treeRef: any;\n  @ViewChild('tree1') treeRef1: any;\n\n \n  \n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  treeLocalData1: any;\n  treeData: any;\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n\n    this.treeData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\": true,\n                \"children\": [],\n                \"lazy\": {\n                  \"http-url\": \"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n\n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\": true,\n                \"children\": [],\n                \"lazy\": {\n                  \"http-url\": \"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n\n    this.treeLocalData1 = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"Grid\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Column.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Boolean.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Check.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"Layout\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"Component\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Auto.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"FieldSet.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Dock.js\"\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"text\": \"Tree\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"Plugin\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"TreeViewDragDrop.js\"\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"text\": \"Panel\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Header.js\"\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'drag and drop Tree';\n    this.customSourceData.description = 'A Expandable Tree component which create Tree View based on standard datasource attached and having functionality of drag and drop (within tree as well as across tree).    ';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/dragdroptree/dragdroptree.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/dragdroptree/dragdroptree.text';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-dragdrop?embed=1&file=app/tree/acrosstree/acrosstree.demo.html&view=editor';\n  }\n  \n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n  getDropData(event: any) {\n    this.treeRef.removeNode(event);\n  }\n\n  getDropData1(event: any) {\n    this.treeRef1.removeNode(event);\n  }\n  drag(data: any) {\n    data.event.dataTransfer.setData(\"dragdata\", JSON.stringify(data.data));\n  }\n\n  dragOver(event: any) {\n    event.preventDefault();\n  }\n\n  drop(event: any) {\n    event.preventDefault();\n    this.selectedData = JSON.parse(event.dataTransfer.getData('dragdata'))\n  }\n}\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/tree.json'\\\">\\n  <amexio-api-demo>\\n   \\n   <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Simple Tree \\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-treeview [badge]=\\\"true\\\" [data-reader]=\\\"'data'\\\" [data]=\\\"treeLocalData\\\" (nodeClick)=\\\"getNodeData($event)\\\">\\n            </amexio-treeview>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Selected Data \\n          </amexio-header>\\n          <amexio-body>\\n            <pre><code>{{selectedData | json}}</code></pre>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'treewithbadge-demo', \n  templateUrl : './treewithbadge.demo.component.html',\n})\nexport class TreeWithBadgeDemo implements OnInit {\n  \n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n\n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"badge\": 1,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\",\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"badge\": 3,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"badge\": 3,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\",\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\",\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\" : true,\n                \"children\":[],\n                \"lazy\":{\n                  \"http-url\":\"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"badge\": 1,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"badge\": 2,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Tree With Badge';\n    this.customSourceData.description = 'A Simple Expandable Tree component which create Tree View based on standard datasource attached with badge property    ';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/treewithbadge/tree.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/treewithbadge/tree.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/treeviewwithbadge.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-tree-with-badge?embed=1&file=app/tree/simpletree/simpletree.demo.html&view=editor';\n  }\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/tree.json'\\\">\\n  <amexio-api-demo>\\n    \\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Tree With template \\n          </amexio-header>\\n          <amexio-body>\\n            <amexio-treeview [data-reader]=\\\"'data'\\\"\\n                             [http-url]=\\\"'assets/data/componentdata/sidenav.json'\\\"\\n                             [http-method]=\\\"'get'\\\" (nodeClick)=\\\"getNodeData($event)\\\">\\n              <ng-template #amexioTreeTemplate let-tree let-icon=\\\"icon\\\" let-node=\\\"node\\\">\\n                <i [attr.class]=\\\"node.icon\\\"></i> &nbsp;{{tree.text}}\\n              </ng-template>\\n            </amexio-treeview>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-card [header]=\\\"true\\\">\\n          <amexio-header>\\n             Selected Data \\n          </amexio-header>\\n          <amexio-body>\\n            <pre><code>{{selectedData | json}}</code></pre>\\n          </amexio-body>\\n        </amexio-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'tree-template-demo',\n  templateUrl :'./treewithtemplate.demo.html',\n})\nexport class TreeWithTemplateDemo  implements OnInit{\n  \n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n   \n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\" : true,\n                \"children\":[],\n                \"lazy\":{\n                  \"http-url\":\"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Tree With template';\n    this.customSourceData.description = 'To define the detail template, nested ng-template tag inside the AmexioTreeComponent component. The template context is set to the current node.    ';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/tree/treetemplate/treetemplate.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/tree/treetemplate/treetemplate.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/sidenav.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-tree-with-template?embed=1&file=app/tree/treewithtemplate/treewithtemplate.demo.html&view=editor';\n  }\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n","module.exports = \"\\n<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/treedatagrid.json'\\\">\\n    <amexio-api-demo>\\n<amexio-row>\\n            <amexio-column size=\\\"12\\\">\\n                <amexio-card [footer]=\\\"false\\\" [header]=\\\"true\\\">\\n                    <amexio-header> Tree Data Grid </amexio-header>\\n                    <amexio-body>\\n                        <amexio-tree-data-table [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/data/componentdata/treedatatable.json'\\\"\\n                            [data-reader]=\\\"'data'\\\" (selectedRecord)=\\\"getSelectedData($event)\\\">\\n                            <amexio-data-table-column [data-index]=\\\"'task'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                                [text]=\\\"'Task'\\\"></amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'user'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\"\\n                                [text]=\\\"'User'\\\"></amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'duration'\\\" [data-type]=\\\"'number'\\\" [hidden]=\\\"false\\\"\\n                                [text]=\\\"'Duration'\\\"></amexio-data-table-column>\\n                        </amexio-tree-data-table>\\n                        <p><b>Clicked Row Data : </b>{{selectedData | json}}</p>\\n                    </amexio-body>\\n                </amexio-card>\\n            </amexio-column>\\n        </amexio-row>\\n\\n\\n        </amexio-api-demo>\\n        </amexio-api-structure>\\n        \"","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'treedata-grid-demo',\n  templateUrl : './treedatagrid.demo.html'\n})\nexport class TreeDataGridDemo implements OnInit{\n \n  copyMsgArray: any[];\n  selectedData: any;\n\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n\n\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Tree Data Grid';\n    this.customSourceData.description = 'Collapsible Data Grid Component displays data in expandable/collapsible rows.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/treedatagrid/treedatagrid.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/treedatagrid/treedatagrid.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/treedatatable.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-tree-data-grid?embed=1&file=app/grid/treedatagrid/treedatagrid.demo.html&view=editor';\n  }\n\n  \n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n","module.exports = \"<amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/data/treedatagrid.json'\\\">\\n  <amexio-api-demo>\\n  \\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n      <amexio-card [footer]=\\\"false\\\" [header]=\\\"true\\\">\\n        <amexio-header> Tree Data Template </amexio-header>\\n        <amexio-body>\\n        <amexio-tree-data-table [http-method]=\\\"'get'\\\"\\n        [http-url]=\\\"'assets/data/componentdata/treedatatable.json'\\\" \\n        [data-reader]=\\\"'data'\\\" (selectedRecord)=\\\"getSelectedData($event)\\\">\\n        \\n        <amexio-data-table-column [data-index]=\\\"'task'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Task'\\\">\\n        \\n        </amexio-data-table-column>\\n            <amexio-data-table-column [data-index]=\\\"'user'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'User'\\\"></amexio-data-table-column>\\n            <amexio-data-table-column    [data-index]=\\\"'duration'\\\" [data-type]=\\\"'number'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Duration'\\\"></amexio-data-table-column>\\n            \\n           \\n\\n        <!--checkbox-->\\n        <amexio-data-table-column  [data-index]=\\\"'done'\\\"  \\n        [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Done'\\\">\\n\\n        <ng-template #amexioHeaderTmpl let-column=\\\"column\\\" let-index=\\\"index\\\">\\n        <span style=\\\"padding-left:65px\\\">{{column.text}} </span> \\n        </ng-template>\\n\\n        <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\" >\\n    <span  style=\\\"display: flex;\\n        justify-content: center;\\\">\\n        <amexio-checkbox   \\n            (onSelection)=\\\"onCheckClick(row)\\\" [(ngModel)]=\\\"row.done\\\">\\n            \\n        </amexio-checkbox>\\n        \\n      </span>\\n        </ng-template>\\n        </amexio-data-table-column>\\n\\n        <!--edit-->\\n        <amexio-data-table-column   [data-index]=\\\"'edit'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Edit'\\\">\\n        \\n        <ng-template #amexioBodyTmpl let-column let-row=\\\"row\\\">\\n          <amexio-image style=\\\"color:grey;\\\" [icon-class]=\\\"'fa fa-edit  fa-2x'\\\"></amexio-image>\\n        </ng-template>\\n        </amexio-data-table-column>\\n\\n        </amexio-tree-data-table> \\n\\n\\n         </amexio-body>\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>   \\n</amexio-api-demo>\\n</amexio-api-structure>\\n\\n\\n\"","\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n\n@Component({\n  selector: 'treedata-grid-demo', \n  templateUrl: './treedatatemplate.demo.html',\n})\nexport class TreeDataTemplateDemo implements OnInit{\n \n  copyMsgArray: any[];\n  selectedData: any;\n  checkFlag: boolean;\n  \n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  }\n \n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Tree Data Template';\n    this.customSourceData.description = 'Collapsible Data Grid Component displays data in expandable/collapsible rows.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'data/treedatatemplate/treedatatemplate.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'data/treedatatemplate/treedatatemplate.text';\n    this.customSourceData.sourceMetadata.datasourceUrl = 'assets/data/componentdata/treedatatable.json';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v4-tree-data-grid?embed=1&file=app/grid/treedatagrid/treedatagrid.demo.html&view=editor';\n}\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n  getSelectedData(data: any) {\n    this.selectedData = data;\n  }\n\n  onCheckClick(data: any) {\n    if (data.hasOwnProperty('children') && data.children.length > 0) {\n      this.checkchild(data);\n    }\n  }\n\n\n  checkchild(data: any) {\n    data.children.forEach((element: any) => {\n      element.done = !element.done;\n      if (element.hasOwnProperty('children') && element.children.length > 0) {\n        this.checkchild(element);\n      }\n    });\n  }\n\n\n\n}\n\n"],"sourceRoot":""}