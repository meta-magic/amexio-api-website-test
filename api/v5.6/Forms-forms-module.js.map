{"version":3,"sources":["webpack:///./src/app/Forms/form-html/reactive-forms/reactiveform.demo.component.ts","webpack:///./src/app/Forms/form-html/reactive-forms/reactiveform.demo.html","webpack:///./src/app/Forms/form-html/template-driven/employee.registration.ts","webpack:///./src/app/Forms/form-html/template-driven/form.demo.html","webpack:///./src/app/Forms/form-html/template-driven/form.demo.ts","webpack:///./src/app/Forms/form/employee.registration.ts","webpack:///./src/app/Forms/form/form.demo.html","webpack:///./src/app/Forms/form/form.demo.ts","webpack:///./src/app/Forms/forms.module.ts","webpack:///./src/app/Forms/forms.routes.ts","webpack:///./src/app/Forms/reactiveform/reactiveform.demo.component.ts","webpack:///./src/app/Forms/reactiveform/reactiveform.demo.html"],"names":[],"mappings":"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","file":"Forms-forms-module.js","sourcesContent":["/**\n * Created by kedar kokil on 22/11/18.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { FormArray } from '@angular/forms';\n\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n\n\n@Component({\n  selector: 'reactive-form',\n  templateUrl: './reactiveform.demo.html',\n})\n\nexport class HtmlReactiveFormComponent implements OnInit {\n\n  checkboxGroupdata: any;\n  copyMsgArray: any = [];\n  age: number;\n  radioGroupData: any[] = [];\n  employeeForm: FormGroup;\n  employeeFormInsideForm: FormGroup;\n  addressForm: FormGroup;\n  address: Address;\n  employeeFormGroup: FormGroup;\n  enableFieldSet: boolean;\n  emplpoyeeRegistration: EmplpoyeeRegistration;\n  registration:Registration;\n  registration1:Registration;\n  dynamicFormsReg:DynamicFormsReg;\n  // TO DYNAMIC FORMS\n  dynamicEmployeeForm: FormGroup;\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient, private fb: FormBuilder) {\n    this.customSourceData = new ComponentDataStructure();\n    this.address = new Address();\n    this.emplpoyeeRegistration = new EmplpoyeeRegistration();\n    this.registration1 = new Registration();\n    this.registration = new Registration();\n    this.dynamicFormsReg = new DynamicFormsReg();\n    this.radioGroupData = [{\n      genderName: 'Male',\n      genderId: 'male'\n    }, {\n      genderName: 'Female',\n      genderId: 'female'\n    }];\n\n  }\n  ngOnInit(): void  {\n    this.createCustomSourceData();\n\n    this.employeeForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]]\n    });\n\n\n    //HERE EMP FORM VALIDATION ADDED\n    this.employeeFormInsideForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]]\n    });\n\n    //HERE INNER ADDRESS FORM VALIDATION ADDED\n    this.addressForm = this.fb.group({\n      TemporaryAddress: ['', [Validators.required]],\n      PermanentAddress: ['', [Validators.required]]\n    });\n\n    // froms inside group\n\n    this.employeeFormGroup = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]],\n      AddressFormGroup: new FormGroup({\n        temporaryAddress: new FormControl('', Validators.required),\n        permanentAddress: new FormControl('', Validators.required)\n      })\n    });\n\n    this.dynamicEmployeeForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]],\n      phones : this.fb.array([])\n    });\n  }\n\n\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Reactive  Forms With HTML Form Tag And Amexio Inputs Components ';\n    this.customSourceData.description = 'Reactive Forms can be used basically for validation purposes and below examples show reactive forms with amexio inputs components';\n    this.customSourceData.sourceMetadata.htmlUrl = 'pane/html-form/reactiveform/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'pane/html-form/reactiveform/form.text';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/simple-reactive-forms-tu9tkf?file=src%2Fapp%2Famexio-reactive-forms%2Famexio-reactive-forms%2Famexio-reactive-forms.component.html';\n    this.customSourceData.liveMetadata.stackblitzUrl1 = 'https://stackblitz.com/edit/reactive-forms-within-forms-wxnrvo?embed=1&file=src/app/app.component.ts';\n    this.customSourceData.liveMetadata.stackblitzUrl2 = 'https://stackblitz.com/edit/amexio-reactive-form-group-inside-form-usemf8?embed=1&file=src/app/app.component.ts';\n  \n    \n  }\n\n\n\n  // GET PHONE FORMS\n  get phoneForms() {\n    return this.dynamicEmployeeForm.get('phones') as FormArray;\n  }\n\n  // ADD PHONE NUMBER\n  addPhone() {\n    const phone = this.fb.group({\n      phoneLabel: ['', [Validators.required]],\n      countryCode: ['', [Validators.required]],\n      phoneNumber: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(10), Validators.pattern('[0-9 ]*')]]\n    });\n    this.phoneForms.push(phone);\n  }\n\n  // THIS EVENT FIRE WHEN USER ADD PHONE NUMBER\n  addPhoneClick() {\n    this.enableFieldSet = true;\n    this.dynamicFormsReg.add(new Phone());\n    this.addPhone();\n  }\n  //THIS METHOD IS USED FOR MAKING PERMANENT ADDRESS AS TEMP ADDRESS BASE UPON CHECKED\n  onCheckClick1(data: any) {\n    if (data) {\n      this.registration.address.perAddress = this.registration.address.tempAddress;\n    }\n  }\n\n  onCheckClick2(data: any) {\n    if (data) {\n      this.registration1.address.perAddress = this.registration1.address.tempAddress;\n    }\n  }\n\n  onDeleteClick(index: number) {\n    this.phoneForms.removeAt(index);\n  }\n\n  onAddClick(data:any) {\n    this.dynamicFormsReg.add(data);\n  }\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n\n}\n\n\n//THIS MODEL CLASS IS USED FOR BINDING TO EMPLOYEE ADDRESS\nexport class Address {\n  tempAddress: string;\n  perAddress: string;\n}\n\n\nexport class EmplpoyeeRegistration {\n  firstName: string;\n  lastName: string;\n  email: string;\n  age: number;\n  gender: string;\n  agree: any;\n  constructor() {\n  }\n}\n\nexport class Registration extends EmplpoyeeRegistration{\n  address :Address;\n  constructor(){\n    super();\n    this.address = new Address();\n  }\n}\n\nexport class DynamicFormsReg extends EmplpoyeeRegistration {\n  phones: Phone[];\n  constructor() {\n    super();\n    this.phones = [];\n  }\n  add(phone: Phone) {\n    this.phones.push(phone);\n  }\n}\n\nexport class Phone {\n  phoneLabel: string;\n  countryCode: string;\n  phoneNumber: string;\n}\n","module.exports = \"  \\n  \\n <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" >\\n    <amexio-api-demo>\\n    \\n  <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'right'\\\">\\n        <amexio-header>\\n            Simple Reactive Forms\\n        </amexio-header>\\n        <amexio-body>\\n            <form [formGroup]=\\\"employeeForm\\\">\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"emplpoyeeRegistration.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\"\\n                            [min-length]=\\\"2\\\"  [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"emplpoyeeRegistration.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                            [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                            [icon-feedback]=\\\"true\\\" >\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"emplpoyeeRegistration.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-email-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"emplpoyeeRegistration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\"\\n                            [max-value]=\\\"100\\\" [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-number-input>\\n                    </amexio-column>\\n                </amexio-row>\\n\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"emplpoyeeRegistration.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                        </amexio-radio-group>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"emplpoyeeRegistration.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                        </amexio-checkbox>\\n                    </amexio-column>\\n                </amexio-row>\\n            </form>\\n        </amexio-body>\\n        <amexio-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n            </amexio-button>\\n        </amexio-action>\\n    </amexio-card>\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeForm.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data </b>: {{emplpoyeeRegistration|json}} <br>\\n\\n    <!-- forms within forms -->\\n    <br>\\n    <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'right'\\\">\\n        <amexio-header>\\n            Reactive Forms Within Forms\\n        </amexio-header>\\n        <amexio-body>\\n            <form [formGroup]=\\\"employeeFormInsideForm\\\">\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"registration.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                            [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"registration.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                            [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                            [icon-feedback]=\\\"true\\\" >\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"registration.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-email-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"registration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                            [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-number-input>\\n                    </amexio-column>\\n                </amexio-row>\\n\\n                <amexio-row>\\n                    <amexio-column size=\\\"12\\\">\\n                        <amexio-fieldset [collapsible]=\\\"true\\\" title=\\\"Address\\\">\\n                            <form [formGroup]=\\\"addressForm\\\">\\n                                <amexio-row>\\n                                    <amexio-column size=\\\"5\\\">\\n                                        <amexio-textarea-input formControlName=\\\"TemporaryAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Temporary Address'\\\" [place-holder]=\\\"'Temporary address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter temporary address'\\\" [(ngModel)]=\\\"registration.address.tempAddress\\\"\\n                                            [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                        </amexio-textarea-input>\\n                                    </amexio-column>\\n                                    <amexio-column size=\\\"2\\\">\\n                                        <amexio-checkbox [field-label]=\\\"'Permanent address same as temporary address'\\\" (onSelection)=\\\"onCheckClick1($event)\\\">\\n                                        </amexio-checkbox>\\n\\n                                    </amexio-column>\\n                                    <amexio-column size=\\\"5\\\">\\n                                        <amexio-textarea-input formControlName=\\\"PermanentAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Permanent Address'\\\" [place-holder]=\\\"'Permanent address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter permanent address'\\\" [(ngModel)]=\\\"registration.address.perAddress\\\"\\n                                            [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                        </amexio-textarea-input>\\n                                    </amexio-column>\\n                                </amexio-row>\\n\\n                            </form>\\n                            <amexio-row>\\n                                <amexio-column size=\\\"12\\\">\\n                                    <amexio-button [label]=\\\"'Add Address'\\\" [disabled]=\\\"!addressForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n                                    </amexio-button>\\n                                </amexio-column>\\n                            </amexio-row>\\n                        </amexio-fieldset>\\n\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"registration.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                        </amexio-radio-group>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"registration.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                        </amexio-checkbox>\\n                    </amexio-column>\\n                </amexio-row>\\n            </form>\\n        </amexio-body>\\n        <amexio-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeFormInsideForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n            </amexio-button>\\n        </amexio-action>\\n    </amexio-card>\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeFormInsideForm.value | json}}<br>\\n    <b style=\\\"color:green\\\">Inner Form Model Data : </b> {{addressForm.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data </b>: {{registration|json}} <br>\\n    <br>\\n\\n    <!--  forms group inside forms -->\\n\\n    <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'right'\\\">\\n        <amexio-header>\\n            Reactive Forms Group Inside Forms\\n        </amexio-header>\\n        <amexio-body>\\n            <form [formGroup]=\\\"employeeFormGroup\\\">\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"registration1.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                             [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"registration1.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                            [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                            [icon-feedback]=\\\"true\\\" >\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"registration1.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-email-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"registration1.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                            [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-number-input>\\n                    </amexio-column>\\n                </amexio-row>\\n\\n                <amexio-row>\\n                    <amexio-column size=\\\"12\\\">\\n                        <amexio-fieldset [collapsible]=\\\"true\\\" title=\\\"Address\\\">\\n                            <form formGroupName=\\\"AddressFormGroup\\\">\\n                                <amexio-row>\\n                                    <amexio-column size=\\\"5\\\">\\n                                        <amexio-textarea-input formControlName=\\\"temporaryAddress\\\" [enable-popover]=\\\"true\\\" [(ngModel)]=\\\"registration1.address.tempAddress\\\" [field-label]=\\\"'Temporary Address'\\\" [place-holder]=\\\"'Temporary Address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter temporary address'\\\"\\n                                            [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                        </amexio-textarea-input>\\n                                    </amexio-column>\\n                                    <amexio-column size=\\\"2\\\">\\n                                        <amexio-checkbox [field-label]=\\\"'Permanent address same as temporary address'\\\" (onSelection)=\\\"onCheckClick2($event)\\\">\\n                                        </amexio-checkbox>\\n\\n                                    </amexio-column>\\n                                    <amexio-column size=\\\"5\\\">\\n                                        <amexio-textarea-input formControlName=\\\"permanentAddress\\\" [(ngModel)]=\\\"registration1.address.perAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Permanent Address'\\\" [place-holder]=\\\"'Permanent Address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter permanent address'\\\"\\n                                            [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                        </amexio-textarea-input>\\n                                    </amexio-column>\\n                                </amexio-row>\\n                            </form>\\n                        </amexio-fieldset>\\n\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"registration1.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                        </amexio-radio-group>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"registration1.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                        </amexio-checkbox>\\n                    </amexio-column>\\n                </amexio-row>\\n            </form>\\n        </amexio-body>\\n        <amexio-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeFormGroup.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n            </amexio-button>\\n        </amexio-action>\\n    </amexio-card>\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeFormGroup.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data </b>: {{registration1|json}} <br>\\n    <br>\\n    <!-- Reactive Form with Dynamic Forms -->\\n\\n    <amexio-card [header]=\\\"true\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'right'\\\">\\n        <amexio-header>\\n            Reactive Form with Dynamic Forms\\n        </amexio-header>\\n        <amexio-body>\\n            <form [formGroup]=\\\"dynamicEmployeeForm\\\">\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"dynamicFormsReg.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                             [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"dynamicFormsReg.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                            [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                            [icon-feedback]=\\\"true\\\" >\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"dynamicFormsReg.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-email-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"dynamicFormsReg.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                            [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-number-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-button [label]=\\\"'Add Phone'\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Add Phone'\\\" (onClick)=\\\"addPhoneClick()\\\">\\n                        </amexio-button>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-fieldset *ngIf=\\\"enableFieldSet\\\" formArrayName=\\\"phones\\\" [collapsible]=\\\"false\\\" [title]=\\\"'Add Phone Numbers'\\\">\\n                    <amexio-row *ngFor=\\\"let phone of phoneForms.controls;let i=index\\\" [formGroupName]=\\\"i\\\">\\n                        <amexio-column size=\\\"3\\\">\\n                            <amexio-text-input formControlName=\\\"phoneLabel\\\" [(ngModel)]=\\\"phone.phoneLabel\\\" enable-popover=\\\"true\\\" field-label=\\\"Phone Label\\\" name=\\\"phoneLabel\\\" error-msg=\\\"Please add phone label\\\" place-holder=\\\"Enter phone label\\\" allow-blank=\\\"false\\\" min-length=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                                max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                        <amexio-column size=\\\"3\\\">\\n                            <amexio-text-input formControlName=\\\"countryCode\\\" [(ngModel)]=\\\"phone.countryCode\\\" enable-popover=\\\"true\\\" field-label=\\\"Country Code\\\" name=\\\"countryCode\\\" error-msg=\\\"Please add country code\\\" place-holder=\\\"Enter country code\\\" allow-blank=\\\"false\\\" min-length=\\\"1\\\"\\n                                min-error-msg=\\\"Minimum 1 char required\\\" max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                        <amexio-column size=\\\"3\\\">\\n                            <amexio-text-input formControlName=\\\"phoneNumber\\\" [(ngModel)]=\\\"phone.phoneNumber\\\" enable-popover=\\\"true\\\" field-label=\\\"Phone Number\\\" name=\\\"phoneNumber\\\" error-msg=\\\"Please add phone number\\\" place-holder=\\\"Enter phone number\\\" allow-blank=\\\"false\\\" min-length=\\\"8\\\"\\n                                min-error-msg=\\\"Minimum 8 char required\\\" max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                        <amexio-column size=\\\"3\\\">\\n                            <!-- <amexio-button  [label]=\\\"'Add'\\\"  [type]=\\\"'green'\\\" [tooltip]=\\\"'add'\\\"  [icon]=\\\"'fa fa-check'\\\" (onClick)=\\\"addClick({'phoneLabel':phone.phoneLabel,'countryCode':phone.countryCode,'phoneNumber':phone.phoneNumber})\\\">\\n                                </amexio-button> -->\\n                            <amexio-button [label]=\\\"'Delete'\\\" [type]=\\\"'red'\\\" [tooltip]=\\\"'delete'\\\" [icon]=\\\"'fa fa-trash'\\\" (onClick)=\\\"onDeleteClick(i)\\\">\\n                            </amexio-button>\\n                        </amexio-column>\\n                    </amexio-row>\\n                </amexio-fieldset>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"dynamicFormsReg.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                        </amexio-radio-group>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"dynamicFormsReg.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                        </amexio-checkbox>\\n                    </amexio-column>\\n                </amexio-row>\\n\\n            </form>\\n        </amexio-body>\\n        <amexio-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!dynamicEmployeeForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n            </amexio-button>\\n        </amexio-action>\\n    </amexio-card>\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{dynamicEmployeeForm.value | json}}<br>\\n    <!-- <b style=\\\"color:blue\\\">UI Model Data </b>: {{dynamicFormsReg|json}} <br> -->\\n\\n    <br>\\n\\n</amexio-api-demo>\\n</amexio-api-structure>\\n\"","export class EmplpoyeeRegistration {\n    firstName: string;\n    lastName: string;\n    address: Address;\n    gender: string;\n    email: string;\n    department: string;\n    dateOfBirth: any;\n    constructor() {\n      this.address = new Address();\n    }\n  }\n  \n  export class Address {\n    street: string;\n    city: string; \n    state: string;\n    country: string;\n    pincode: number;\n    constructor() { \n  \n    }\n  }","module.exports = \"   \\n   \\n <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/forms/amexioforms.json'\\\">\\n    <amexio-api-demo>\\n   \\n   <h2>Demo: Form </h2>\\n    <amexio-card header=\\\"true\\\" footer=\\\"true\\\">\\n        <amexio-header>\\n            Simple Form\\n        </amexio-header>\\n        <amexio-body>\\n            <form #empForm=\\\"ngForm\\\">\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-text-input [min-length]=\\\"3\\\" [(ngModel)]=\\\"userRegistration.firstName\\\" [max-length]=\\\"5\\\" [allow-blank]=\\\"false\\\" field-label=\\\"First Name\\\" name=\\\"firstName\\\" place-holder=\\\"Enter first name\\\" icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-text-input field-label=\\\"Last Name\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"userRegistration.lastName\\\" place-holder=\\\"Enter last name(not mandatory)\\\" allow-blank=\\\"true\\\" error-msg=\\\"Please enter last name\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                            [max-length]=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-textarea-input [field-label]=\\\"'Address'\\\" name=\\\"Address\\\" [(ngModel)]=\\\"userRegistration.address\\\" [place-holder]=\\\"'Enter address'\\\" [error-msg]=\\\"'Please enter address'\\\" [icon-feedback]=\\\"true\\\" [rows]=\\\"'1'\\\" [columns]=\\\"'2'\\\" [allow-blank]=\\\"false\\\"\\n                    [enable-popover]=\\\"true\\\"></amexio-textarea-input>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-radio-group [name]=\\\"'genderList'\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"userRegistration.gender\\\" [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'gender'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                        </amexio-radio-group>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-checkbox-group [field-label]=\\\"'Hobbies'\\\" name=\\\"hobbies\\\" [(ngModel)]=\\\"userRegistration.hobbies\\\" [horizontal]=\\\"true\\\" [required]=\\\"true\\\"  [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'hobbieName'\\\" [value-field]=\\\"'checked'\\\" [data]=\\\"checkboxGroupdata\\\">\\n                        </amexio-checkbox-group>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-tag-input [data-reader]=\\\"'response.data'\\\" [http-url]=\\\"'assets/data/componentdata/countryy.json'\\\" [has-label]=\\\"true\\\" [http-method]=\\\"'get'\\\" [key]=\\\"'countryName'\\\" [allow-blank]=\\\"false\\\" [display-field]=\\\"'countryName'\\\" [field-label]=\\\"'Having visa'\\\">\\n                        </amexio-tag-input>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-dropdown [place-holder]=\\\"'Choose City'\\\" name=\\\"city\\\" [(ngModel)]=\\\"userRegistration.city\\\" [allow-blank]=\\\"false\\\" [data-reader]=\\\"'response.data'\\\" [field-label]=\\\"'City'\\\" [http-url]=\\\"'assets/data/componentdata/cities.json'\\\" [http-method]=\\\"'get'\\\" [search]=\\\"'true'\\\"\\n                            [display-field]=\\\"'cityName'\\\" [value-field]=\\\"'cityName'\\\">\\n                        </amexio-dropdown>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-number-input [name]=\\\"'age'\\\" [(ngModel)]=\\\"userRegistration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\"\\n                            [max-value]=\\\"100\\\" [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-date-time-picker [(ngModel)]=\\\"userRegistration.dateOfBirth\\\" name=\\\"dateOfBirth\\\" [field-label]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [required]=\\\"true\\\">\\n                        </amexio-date-time-picker>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-email-input [field-label]=\\\"'Email Id'\\\" name=\\\"email\\\" [(ngModel)]=\\\"userRegistration.email\\\" [place-holder]=\\\"'Enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-email-input>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-password-input [enable-popover]=\\\"true\\\" [field-label]=\\\"'Password Input'\\\" name=\\\"password\\\" [(ngModel)]=\\\"userRegistration.password\\\" [place-holder]=\\\"'Enter Password'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter password'\\\" [min-length]=\\\"6\\\" [min-error-msg]=\\\"'Minimum 6 char required'\\\"\\n                            [max-length]=\\\"32\\\" [max-error-msg]=\\\"'Maximum 32 char allowed'\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-password-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-checkbox [field-label]=\\\"'Agree'\\\" name=\\\"agree\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"userRegistration.agree\\\">\\n                </amexio-checkbox>\\n            </form>\\n        </amexio-body>\\n        <amexio-action>\\n            <amexio-button [disabled]=\\\"!empForm.valid\\\" [label]=\\\"'Save'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Save'\\\" [size]=\\\"'large'\\\">\\n            </amexio-button>\\n        </amexio-action>\\n    </amexio-card>\\n\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{empForm.form.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data </b>: {{userRegistration|json}} <br><br>\\n    <amexio-card header=\\\"true\\\" footer=\\\"true\\\">\\n        <amexio-header>\\n            Employee Registration With Address\\n        </amexio-header>\\n        <amexio-body>\\n            <form #empFormWithAddress=\\\"ngForm\\\">\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-text-input [(ngModel)]=\\\"emplpoyeeRegistration.firstName\\\" [min-length]=\\\"3\\\" [max-length]=\\\"5\\\" [allow-blank]=\\\"false\\\" field-label=\\\"First Name\\\" [name]=\\\"'Firstname'\\\" place-holder=\\\"Enter first name\\\" icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-text-input field-label=\\\"Last Name\\\" [name]=\\\"'lastName'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.lastName\\\" place-holder=\\\"Enter last name\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter last name\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                            [max-length]=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-radio-group [name]=\\\"'genderList'\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"emplpoyeeRegistration.gender\\\" [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'gender'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                        </amexio-radio-group>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-dropdown [place-holder]=\\\"'Choose Department'\\\" [name]=\\\"'department'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.department\\\" [allow-blank]=\\\"false\\\" [field-label]=\\\"'Department'\\\" [search]=\\\"'true'\\\" [data]=\\\"departmentData\\\" [display-field]=\\\"'deptName'\\\" [value-field]=\\\"'deptId'\\\">\\n                        </amexio-dropdown>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-email-input [field-label]=\\\"'Email Id'\\\" [name]=\\\"'email'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.email\\\" [place-holder]=\\\"'Enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                        </amexio-email-input>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-date-time-picker [(ngModel)]=\\\"emplpoyeeRegistration.dateOfBirth\\\" [name]=\\\"'dateOfBirth'\\\" [field-label]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [required]=\\\"true\\\">\\n                        </amexio-date-time-picker>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-fieldset ngModelGroup=\\\"address\\\" title=\\\"Address\\\">\\n                    <amexio-row>\\n                        <amexio-column [size]=\\\"6\\\">\\n                            <amexio-text-input field-label=\\\"Street\\\" [name]=\\\"'street'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.street\\\" place-holder=\\\"Enter street\\\" enable-popover=\\\"true\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter street\\\"\\n                                icon-feedback=\\\"true\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                        <amexio-column [size]=\\\"6\\\">\\n                            <amexio-text-input field-label=\\\"city\\\" [name]=\\\"'city'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.city\\\" [min-length]=\\\"3\\\" enable-popover=\\\"true\\\" min-error-msg=\\\"Minimum 3 char required\\\" place-holder=\\\"Enter city\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter city\\\"\\n                                icon-feedback=\\\"true\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                    </amexio-row>\\n                    <amexio-row>\\n                        <amexio-column [size]=\\\"6\\\">\\n                            <amexio-text-input field-label=\\\"pincode\\\" [name]=\\\"'pincode'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.pincode\\\" [min-length]=\\\"3\\\" enable-popover=\\\"true\\\" min-error-msg=\\\"Minimum 3 char required\\\" place-holder=\\\"Enter pincode\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter pincode\\\"\\n                                icon-feedback=\\\"true\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                    </amexio-row>\\n                </amexio-fieldset>\\n            </form>\\n        </amexio-body>\\n        <amexio-action>\\n            <amexio-button [disabled]=\\\"!empFormWithAddress.valid\\\" [label]=\\\"'Save'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Save'\\\" [size]=\\\"'large'\\\">\\n            </amexio-button>\\n        </amexio-action>\\n    </amexio-card>\\n\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{empFormWithAddress.form.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data : </b> {{emplpoyeeRegistration | json}} <br>\\n\\n</amexio-api-demo>\\n</amexio-api-structure>\"","/**\n * Created by anaghak07 on 16/4/18.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { EmplpoyeeRegistration } from './employee.registration';\n\nimport {ComponentDataStructure} from \"../../../apimetadata/models/component.structure\";\n\n@Component({\n  selector: 'form-demo',\n  templateUrl: 'form.demo.html',\n})\n\nexport class HtmlFormDemoComponent implements OnInit{\n  \n  copyMsgArray: any[];\n  asyncFlag : boolean;\n  refreshDialogue: boolean;\n  radioGroupData : any;\n  checkboxGroupdata : any;\n  currentDate : Date = new Date();\n  payment :any;\n  userRegistration:UserRegistration;\n  emplpoyeeRegistration: EmplpoyeeRegistration;\n  firstName:string;\n  lastName:string;\n  departmentData: any;\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n  \n    this.userRegistration = new UserRegistration();\n    this.emplpoyeeRegistration = new EmplpoyeeRegistration();\n    this.departmentData = [{\n      'deptId':'1',\n      'deptName' :'Engineering'\n    },{\n      'deptId':'2',\n      'deptName' :'Tech Suppport'\n    },{\n      'deptId':'3',\n      'deptName' :'HR'\n    }]\n   this.checkboxGroupdata = {\n      response:{\n        data:[{\n          hobbieName:'Learning',\n          checked: false,\n          disabled : false\n        },{\n          hobbieName:'Shopping',\n          checked: false,\n          disabled : false\n        },{\n          hobbieName:'Fishing',\n          checked: false,\n          disabled : false\n        }\n        ]}};\n        this.payment=[\n          {\"label\": \"Open With\", \"icon\": \"fa fa-arrows-alt \"},\n          {\"label\": \"Make a Copy\", \"icon\": \"fa fa-files-o\",\"separator\":\"true\"},\n          {\"label\": \"Refresh\", \"icon\": \"fa fa-refresh\"},\n          {\"label\": \"Add Star\", \"icon\": \"fa fa-star\"},\n          {\"label\": \"download\", \"icon\": \"fa fa-download\"},\n          {\"label\": \"bookmark\", \"icon\": \"fa fa-bookmark\"}\n        ];\n\n    this.radioGroupData = {\n      response:{\n        data:[{\n          gender:'Male',\n          genderId:'male'\n        },{\n          gender:'Female',\n          genderId:'female',\n        },\n        ]\n      }\n    };\n  }\n \n\n  ngOnInit(): void  {\n    this.createCustomSourceData();\n  }\n  createCustomSourceData() {\n    this.customSourceData.title = 'Form With HTML Form Tag And Amexio Inputs Components';\n    this.customSourceData.description = 'Html Form can be used basically for validation purposes';\n    this.customSourceData.sourceMetadata.htmlUrl = 'pane/html-form/form/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'pane/html-form/form/form.text';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v42-form?embed=1&file=app/forms/form/form.demo.html&view=editor';\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  refreshData() {\n    this.refreshDialogue = !this.refreshDialogue;\n  }\n}\n\nexport class UserRegistration {\n  firstName: string;\n  lastName: string;\n  agree: boolean;\n  address: string;\n  gender: string;\n  hobbies: any[];\n  city: string;\n  age: number;\n  dateOfBirth = new Date();\n  email: string;\n  password: string;\n  constructor() {\n    this.hobbies = [];\n  }\n }\n","export class EmplpoyeeRegistration {\n    firstName: string;\n    lastName: string;\n    address: Address;\n    gender: string;\n    email: string;\n    department: string;\n    dateOfBirth: any;\n    constructor() {\n      this.address = new Address();\n    }\n  }\n  \n  export class Address {\n    street: string;\n    city: string; \n    state: string;\n    country: string;\n    pincode: number;\n    constructor() { \n  \n    }\n  }","module.exports = \" \\n\\n <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" [url]=\\\"'assets/componentjson/forms/amexioforms.json'\\\">\\n    <amexio-api-demo>\\n    \\n <h2>Demo: Form </h2>\\n    <amexio-form #simpleForm form-name=\\\"validateForm\\\" header=\\\"true\\\" show-error=\\\"true\\\">\\n        <amexio-form-header style='width:100%;'>\\n            Form\\n        </amexio-form-header>\\n        <amexio-form-body>\\n            <amexio-row>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-text-input [min-length]=\\\"3\\\" [(ngModel)]=\\\"userRegistration.firstName\\\" [max-length]=\\\"5\\\" [allow-blank]=\\\"false\\\" field-label=\\\"First Name\\\" name=\\\"firstName\\\" place-holder=\\\"Enter first name\\\" icon-feedback=\\\"true\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-text-input field-label=\\\"Last Name\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"userRegistration.lastName\\\" place-holder=\\\"Enter last name(not mandatory)\\\" allow-blank=\\\"true\\\" error-msg=\\\"Please enter last name\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                        [max-length]=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-textarea-input  [field-label]=\\\"'Address'\\\" name=\\\"Address\\\" [(ngModel)]=\\\"userRegistration.address\\\" [place-holder]=\\\"'Enter address'\\\" [error-msg]=\\\"'Please enter address'\\\" [icon-feedback]=\\\"true\\\" [rows]=\\\"'1'\\\" [columns]=\\\"'2'\\\" [allow-blank]=\\\"false\\\"\\n                [enable-popover]=\\\"true\\\"></amexio-textarea-input>\\n            <amexio-row>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-radio-group [name]=\\\"'genderList'\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"userRegistration.gender\\\" [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'gender'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                    </amexio-radio-group>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-checkbox-group [field-label]=\\\"'Hobbies'\\\" name=\\\"hobbies\\\" [(ngModel)]=\\\"userRegistration.hobbies\\\" [horizontal]=\\\"true\\\" [required]=\\\"true\\\"  [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'hobbieName'\\\" [value-field]=\\\"'checked'\\\" [data]=\\\"checkboxGroupdata\\\">\\n                    </amexio-checkbox-group>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-tag-input [data-reader]=\\\"'response.data'\\\" [http-url]=\\\"'assets/data/componentdata/countryy.json'\\\" [has-label]=\\\"true\\\" [http-method]=\\\"'get'\\\" [key]=\\\"'countryName'\\\" [allow-blank]=\\\"false\\\" [display-field]=\\\"'countryName'\\\" [field-label]=\\\"'Having visa'\\\">\\n                    </amexio-tag-input>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-dropdown [place-holder]=\\\"'Choose City'\\\" name=\\\"city\\\" [(ngModel)]=\\\"userRegistration.city\\\" [allow-blank]=\\\"false\\\" [data-reader]=\\\"'response.data'\\\" [field-label]=\\\"'City'\\\" [http-url]=\\\"'assets/data/componentdata/cities.json'\\\" [http-method]=\\\"'get'\\\" [search]=\\\"'true'\\\"\\n                        [display-field]=\\\"'cityName'\\\" [value-field]=\\\"'cityName'\\\">\\n                    </amexio-dropdown>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-number-input [name]=\\\"'age'\\\" [(ngModel)]=\\\"userRegistration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\"\\n                        [max-value]=\\\"100\\\" [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-date-time-picker [(ngModel)]=\\\"userRegistration.dateOfBirth\\\" name=\\\"dateOfBirth\\\" [field-label]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [required]=\\\"true\\\">\\n                    </amexio-date-time-picker>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-email-input [field-label]=\\\"'Email Id'\\\" name=\\\"email\\\" [(ngModel)]=\\\"userRegistration.email\\\" [place-holder]=\\\"'Enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-email-input>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-password-input [enable-popover]=\\\"true\\\" [field-label]=\\\"'Password Input'\\\" name=\\\"password\\\" [(ngModel)]=\\\"userRegistration.password\\\" [place-holder]=\\\"'Enter Password'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter password'\\\" [min-length]=\\\"6\\\" [min-error-msg]=\\\"'Minimum 6 char required'\\\"\\n                        [max-length]=\\\"32\\\" [max-error-msg]=\\\"'Maximum 32 char allowed'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-password-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-checkbox [field-label]=\\\"'Agree'\\\" name=\\\"agree\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"userRegistration.agree\\\">\\n            </amexio-checkbox>\\n        </amexio-form-body>\\n        <amexio-form-action>\\n            <amexio-button [disabled]=\\\"false\\\" [label]=\\\"'OK'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Save'\\\" [form-bind]=\\\"'validateForm'\\\">\\n            </amexio-button>\\n            <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Cancel'\\\">\\n            </amexio-button>\\n        </amexio-form-action>\\n    </amexio-form>\\n    <br>\\n  \\n    <h2>Demo: Form with Toolbar</h2>\\n    <amexio-form form-name=\\\"validateForm\\\" header=\\\"true\\\" show-error=\\\"true\\\">\\n        <amexio-form-header style='width:100%;display:inherit'>\\n            <amexio-toolbar>\\n                <amexio-toolbar-item position-left>\\n                    <amexio-label size=\\\"small\\\">\\n                        Registration\\n                    </amexio-label>\\n                </amexio-toolbar-item>\\n\\n                <amexio-toolbar-item position-right [seperator-position]=\\\"'left'\\\">\\n                    <amexio-image aria-hidden=\\\"true\\\" [icon-class]=\\\"'fa fa-th'\\\"> </amexio-image>\\n                  </amexio-toolbar-item>\\n                  <amexio-toolbar-item position-right [seperator-position]=\\\"'left'\\\">\\n                    <amexio-image aria-hidden=\\\"true\\\" [icon-class]=\\\"'fa fa-info-circle'\\\"> </amexio-image>\\n                  </amexio-toolbar-item>\\n                  <amexio-toolbar-item position-right [seperator-position]=\\\"'left'\\\">\\n                    <amexio-image aria-hidden=\\\"true\\\" [icon-class]=\\\"'fa fa-question-circle'\\\"> </amexio-image>\\n                  </amexio-toolbar-item>\\n                  <amexio-toolbar-item position-right [seperator-position]=\\\"'left'\\\">\\n                    <amexio-image aria-hidden=\\\"true\\\" [icon-class]=\\\"'fa fa-cog'\\\"> </amexio-image>\\n                  </amexio-toolbar-item>\\n            </amexio-toolbar>\\n        </amexio-form-header>\\n        <amexio-form-body>\\n            <amexio-row>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-text-input [min-length]=\\\"3\\\" [(ngModel)]=\\\"firstName\\\" [max-length]=\\\"5\\\" [allow-blank]=\\\"false\\\" field-label=\\\"First Name\\\" name=\\\"firstName\\\" place-holder=\\\"Enter first name\\\" icon-feedback=\\\"true\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-text-input field-label=\\\"Last Name\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"lastName\\\" place-holder=\\\"Enter last name(not mandatory)\\\" allow-blank=\\\"true\\\" error-msg=\\\"Please enter last name\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\" [max-length]=\\\"10\\\"\\n                        max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n\\n            </amexio-row>\\n        </amexio-form-body>\\n        <amexio-form-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Save'\\\" [form-bind]=\\\"'validateForm'\\\">\\n            </amexio-button>\\n            <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Cancel'\\\">\\n            </amexio-button>\\n        </amexio-form-action>\\n    </amexio-form>\\n    <br>\\n    <h2>Demo: Employee Registration with address </h2>\\n    <amexio-form #empForm form-name=\\\"empployeeForm\\\" header=\\\"true\\\" [header-align]=\\\"'left'\\\" show-error=\\\"true\\\">\\n        <amexio-form-header style='width:100%; display:flex;justify-content:inherit;'>\\n            Employee Registration\\n        </amexio-form-header>\\n        <amexio-form-body>\\n            <amexio-row>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-text-input [(ngModel)]=\\\"emplpoyeeRegistration.firstName\\\" [min-length]=\\\"3\\\" [max-length]=\\\"5\\\" [allow-blank]=\\\"false\\\" field-label=\\\"First Name\\\" [name]=\\\"'Firstname'\\\" place-holder=\\\"Enter first name\\\" icon-feedback=\\\"true\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-text-input field-label=\\\"Last Name\\\" [name]=\\\"'lastName'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.lastName\\\" place-holder=\\\"Enter last name\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter last name\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                        [max-length]=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-radio-group [name]=\\\"'genderList'\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"emplpoyeeRegistration.gender\\\" [data-reader]=\\\"'response.data'\\\" [display-field]=\\\"'gender'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                    </amexio-radio-group>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-dropdown [place-holder]=\\\"'Choose Department'\\\" [name]=\\\"'department'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.department\\\" [allow-blank]=\\\"false\\\" [field-label]=\\\"'Department'\\\" [search]=\\\"'true'\\\" [data]=\\\"departmentData\\\" [display-field]=\\\"'deptName'\\\" [value-field]=\\\"'deptId'\\\">\\n                    </amexio-dropdown>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-email-input [field-label]=\\\"'Email Id'\\\" [name]=\\\"'email'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.email\\\" [place-holder]=\\\"'Enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-email-input>\\n                </amexio-column>\\n                <amexio-column [size]=\\\"6\\\">\\n                    <amexio-date-time-picker [(ngModel)]=\\\"emplpoyeeRegistration.dateOfBirth\\\" [name]=\\\"'dateOfBirth'\\\" [field-label]=\\\"'Date Of Birth'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [required]=\\\"true\\\">\\n                    </amexio-date-time-picker>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-fieldset [form-group]=\\\"'address'\\\" title=\\\"Address\\\">\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-text-input field-label=\\\"Street\\\" [name]=\\\"'street'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.street\\\" place-holder=\\\"Enter street\\\" enable-popover=\\\"true\\\" [min-length]=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter street\\\"\\n                            icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-text-input field-label=\\\"city\\\" [name]=\\\"'city'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.city\\\" [min-length]=\\\"3\\\" enable-popover=\\\"true\\\" min-error-msg=\\\"Minimum 3 char required\\\" place-holder=\\\"Enter city\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter city\\\"\\n                            icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row>\\n                <amexio-row>\\n                    <amexio-column [size]=\\\"6\\\">\\n                        <amexio-text-input field-label=\\\"pincode\\\" [name]=\\\"'pincode'\\\" [(ngModel)]=\\\"emplpoyeeRegistration.address.pincode\\\" [min-length]=\\\"3\\\" enable-popover=\\\"true\\\" min-error-msg=\\\"Minimum 3 char required\\\" place-holder=\\\"Enter pincode\\\" [allow-blank]=\\\"false\\\" error-msg=\\\"Please enter pincode\\\"\\n                            icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-fieldset>\\n        </amexio-form-body>\\n        <amexio-form-action>\\n            <amexio-button [disabled]=\\\"false\\\" [label]=\\\"'OK'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Save'\\\" [form-bind]=\\\"'empployeeForm'\\\">\\n            </amexio-button>\\n            <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Cancel'\\\">\\n            </amexio-button>\\n        </amexio-form-action>\\n    </amexio-form>\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{empForm.form.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data : </b> {{emplpoyeeRegistration | json}} <br>\\n\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\\n\\n\\n\"","/**\n * Created by anaghak07 on 16/4/18.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { EmplpoyeeRegistration } from './employee.registration';\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n@Component({\n  selector: 'form-demo',\n  templateUrl: 'form.demo.html',\n})\n\nexport class FormDemoComponent {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  asyncFlag : boolean;\n  refreshDialogue: boolean;\n  radioGroupData : any;\n  checkboxGroupdata : any;\n  currentDate : Date = new Date();\n  payment :any;\n  userRegistration:UserRegistration;\n  emplpoyeeRegistration: EmplpoyeeRegistration;\n  firstName:string;\n  lastName:string;\n  departmentData: any;\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient) {\n    this.customSourceData = new ComponentDataStructure();\n    this.userRegistration = new UserRegistration();\n    this.emplpoyeeRegistration = new EmplpoyeeRegistration();\n    this.departmentData = [{\n      'deptId':'1',\n      'deptName' :'Engineering'\n    },{\n      'deptId':'2',\n      'deptName' :'Tech Suppport'\n    },{\n      'deptId':'3',\n      'deptName' :'HR'\n    }]\n   this.checkboxGroupdata = {\n      response:{\n        data:[{\n          hobbieName:'Learning',\n          checked: false,\n          disabled : false\n        },{\n          hobbieName:'Shopping',\n          checked: false,\n          disabled : false\n        },{\n          hobbieName:'Fishing',\n          checked: false,\n          disabled : false\n        }\n        ]}};\n        this.payment=[\n          {\"label\": \"Open With\", \"icon\": \"fa fa-arrows-alt \"},\n          {\"label\": \"Make a Copy\", \"icon\": \"fa fa-files-o\",\"separator\":\"true\"},\n          {\"label\": \"Refresh\", \"icon\": \"fa fa-refresh\"},\n          {\"label\": \"Add Star\", \"icon\": \"fa fa-star\"},\n          {\"label\": \"download\", \"icon\": \"fa fa-download\"},\n          {\"label\": \"bookmark\", \"icon\": \"fa fa-bookmark\"}\n        ];\n\n    this.radioGroupData = {\n      response:{\n        data:[{\n          gender:'Male',\n          genderId:'male'\n        },{\n          gender:'Female',\n          genderId:'female',\n        },\n        ]\n      }\n    };\n  }\n\n  ngOnInit(): void {\n    this.createCustomSourceData();\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Form ';\n    this.customSourceData.description = 'Amexio Form can be used basically for validation purposes. amexio-form component gives more power over the html form tag. 1. Shows error messages when form is invalid. 2. User need not to add extra validations to inputs .only add min,max,min-length,max-length in amexio input fields';\n    this.customSourceData.sourceMetadata.htmlUrl = 'pane/form/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'pane/form/form.text';\n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/amexio-v42-form?embed=1&file=app/forms/form/form.demo.html&view=editor';\n  }\n\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  refreshData() {\n    this.refreshDialogue = !this.refreshDialogue;\n  }\n}\n\nexport class UserRegistration {\n  firstName: string;\n  lastName: string;\n  agree: boolean;\n  address: string;\n  gender: string;\n  hobbies: any[];\n  city: string;\n  age: number;\n  dateOfBirth = new Date();\n  email: string;\n  password: string;\n  constructor() {\n    this.hobbies = [];\n  }\n }\n","import { NgModule } from \"@angular/core\";\nimport { AmexioWidgetModule } from \"amexio-ng-extensions\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { SharedModule } from \"../shared.module\";\nimport { FORMS_ROUTE } from \"./forms.routes\";\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from \"@angular/forms\";\n\nimport { RouterModule } from \"@angular/router\";\n\nimport { HtmlReactiveFormComponent } from \"./form-html/reactive-forms/reactiveform.demo.component\";\nimport { reactiveFormComponent } from \"./reactiveform/reactiveform.demo.component\";\nimport { FormDemoComponent } from \"./form/form.demo\";\nimport { HtmlFormDemoComponent } from './form-html/template-driven/form.demo';\n\n\n/**\n * Created by kedar on 1/2/19.\n */\n@NgModule({\n    declarations: [HtmlReactiveFormComponent, reactiveFormComponent, FormDemoComponent,\n        HtmlFormDemoComponent],\n    imports: [\n        CommonModule, \n        FormsModule, \n        ReactiveFormsModule,\n        HttpClientModule, \n        SharedModule.forRoot(), \n        AmexioWidgetModule,\n        RouterModule.forChild(FORMS_ROUTE),\n    ],\n    providers: []\n})\nexport class FormsDemoModule {\n\n}\n","import { Routes } from '@angular/router';\n\n\n\nimport { HtmlReactiveFormComponent } from \"./form-html/reactive-forms/reactiveform.demo.component\";\nimport { reactiveFormComponent } from \"./reactiveform/reactiveform.demo.component\";\nimport { FormDemoComponent } from \"./form/form.demo\";\nimport { HtmlFormDemoComponent } from './form-html/template-driven/form.demo';\n\nexport const FORMS_ROUTE: Routes = [\n\n    {\n        path: 'html-reactive-form', component: HtmlReactiveFormComponent,\n    },\n    {\n        path: 'reactive-form', component: reactiveFormComponent,\n    },\n    {\n        path: 'form-demo', component: FormDemoComponent,\n    },\n    {\n        path: 'html-form-demo', component: HtmlFormDemoComponent,\n    }\n\n]","/**\n * Created by kedar kokil on 22/11/18.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\n\nimport {ComponentDataStructure} from \"../../apimetadata/models/component.structure\";\n\n@Component({\n  selector: 'reactive-form',\n  templateUrl: './reactiveform.demo.html',\n})\n\nexport class reactiveFormComponent implements OnInit {\n checkboxGroupdata: any;\n  copyMsgArray: any = [];\n  age: number;\n  radioGroupData: any[] = [];\n  employeeForm: FormGroup;\n  employeeFormInsideForm: FormGroup;\n  addressForm: FormGroup;\n  address: Address;\n  employeeFormGroup: FormGroup;\n  emplpoyeeRegistration: EmplpoyeeRegistration;\n  registration: Registration;\n  registration1: Registration;\n  dynamicFormsReg: DynamicFormsReg;\n  dynamicEmployeeForm: FormGroup;\n  enableFieldSet: boolean;\n\n  customSourceData: ComponentDataStructure;\n  constructor(private http: HttpClient, private fb: FormBuilder) {\n    this.customSourceData = new ComponentDataStructure();\n    this.address = new Address();\n    this.emplpoyeeRegistration = new EmplpoyeeRegistration();\n    this.registration1 = new Registration();\n    this.registration = new Registration();\n    this.dynamicFormsReg = new DynamicFormsReg();\n    this.radioGroupData = [{\n      genderName: 'Male',\n      genderId: 'male'\n    }, {\n      genderName: 'Female',\n      genderId: 'female'\n    }];\n\n  }\n  ngOnInit(): void  {\n    this.createCustomSourceData();\n\n    this.employeeForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]]\n    });\n\n\n    // HERE EMP FORM VALIDATION ADDED\n    this.employeeFormInsideForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]]\n    });\n\n    // HERE INNER ADDRESS FORM VALIDATION ADDED\n    this.addressForm = this.fb.group({\n      TemporaryAddress: ['', [Validators.required]],\n      PermanentAddress: ['', [Validators.required]]\n    });\n\n\n    // froms inside group\n\n\n    this.employeeFormGroup = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]],\n      AddressFormGroup: new FormGroup({\n        temporaryAddress: new FormControl('', Validators.required),\n        permanentAddress: new FormControl('', Validators.required)\n      })\n    });\n\n    this.dynamicEmployeeForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      Email: ['', [Validators.required, Validators.email]],\n      Age: ['', [Validators.required, Validators.min(18), Validators.max(100)]],\n      Gender: ['', [Validators.required]],\n      Agree: ['', [Validators.required, Validators.requiredTrue]],\n      phones : this.fb.array([])\n    });\n\n  }\n\n  createCustomSourceData() {\n    this.customSourceData.title = 'Reactive Forms With Amexio Inputs Components';\n    this.customSourceData.description = 'Reactive forms provide a model-driven approach to handling form inputs whose values change over time. Reactive forms can be used basically for validation purposes and below examples show reactive forms with amexio inputs components. User can add any complex validations.';\n    this.customSourceData.sourceMetadata.htmlUrl = 'pane/reactiveform/form.html';\n    this.customSourceData.sourceMetadata.tsUrl = 'pane/reactiveform/form.text';\n    \n    this.customSourceData.liveMetadata.stackblitzUrl = 'https://stackblitz.com/edit/simple-reactive-forms-tu9tkf?file=src%2Fapp%2Famexio-reactive-forms%2Famexio-reactive-forms%2Famexio-reactive-forms.component.html';\n    this.customSourceData.liveMetadata.stackblitzUrl1 = 'https://stackblitz.com/edit/reactive-forms-within-forms-wxnrvo?embed=1&file=src/app/app.component.ts';\n    this.customSourceData.liveMetadata.stackblitzUrl2 = 'https://stackblitz.com/edit/amexio-reactive-form-group-inside-form-usemf8?embed=1&file=src/app/app.component.ts';\n  \n    \n\n  }\n\n    //THIS METHOD IS USED FOR MAKING PERMANENT ADDRESS AS TEMP ADDRESS BASE UPON CHECKED\n    onCheckClick1(data: any) {\n      if (data) {\n        this.registration.address.perAddress = this.registration.address.tempAddress;\n      }\n    }\n\n    onCheckClick2(data: any) {\n      if (data) {\n        this.registration1.address.perAddress = this.registration1.address.tempAddress;\n      }\n    }\n\n  // GET PHONE FORMS\n  get phoneForms() {\n    return this.dynamicEmployeeForm.get('phones') as FormArray;\n  }\n\n  // ADD PHONE NUMBER\n  addPhone() {\n    const phone = this.fb.group({\n      phoneLabel: ['', [Validators.required]],\n      countryCode: ['', [Validators.required]],\n      phoneNumber: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(10), Validators.pattern('[0-9 ]*')]]\n    });\n    this.phoneForms.push(phone);\n  }\n\n  // THIS EVENT FIRE WHEN USER ADD PHONE NUMBER\n  addPhoneClick() {\n    this.enableFieldSet = true;\n    this.dynamicFormsReg.add(new Phone());\n    this.addPhone();\n  }\n\n  onDeleteClick(index: number) {\n    this.phoneForms.removeAt(index);\n  }\n\n  onAddClick(data:any) {\n    this.dynamicFormsReg.add(data);\n  }\n\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    } else {\n      this.copyMsgArray.push({ 'msg': 'Code Copied', 'type': 'info' });\n    }\n  }\n\n\n}\n\n\n// THIS MODEL CLASS IS USED FOR BINDING TO EMPLOYEE ADDRESS\nexport class Address {\n  tempAddress: string;\n  perAddress: string;\n}\n\nexport class EmplpoyeeRegistration {\n  firstName: string;\n  lastName: string;\n  email: string;\n  age: number;\n  gender: string;\n  agree: any;\n  constructor() {\n  }\n}\n\nexport class Registration extends EmplpoyeeRegistration {\n  address: Address;\n  constructor() {\n    super();\n    this.address = new Address();\n  }\n}\n\n// THIS CLASS IS USED FOR DYNAMIC FORM REGISTRATION\nexport class DynamicFormsReg extends EmplpoyeeRegistration {\n  phones: Phone[];\n  constructor() {\n    super();\n    this.phones = [];\n  }\n  add(phone: Phone) {\n    this.phones.push(phone);\n  }\n}\n\n// THIS CLASS IS USED FOR PHONE NUMBER\nexport class Phone {\n  phoneLabel: string;\n  countryCode: string;\n  phoneNumber: string;\n}\n","module.exports = \"\\n <amexio-api-structure [custom-com-data]=\\\"customSourceData\\\" >\\n    <amexio-api-demo>\\n\\n\\n<!-- Reactive Forms with Amexio Form With <amexio-form> -->\\n\\n    <amexio-form [header]=\\\"true\\\" [formGroup]=\\\"employeeForm\\\">\\n        <amexio-form-header>\\n            Simple Reactive Forms\\n        </amexio-form-header>\\n        <amexio-form-body>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"emplpoyeeRegistration.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\"\\n                        [min-length]=\\\"2\\\" [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"emplpoyeeRegistration.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                        [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                        [icon-feedback]=\\\"true\\\" >\\n                    </amexio-text-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"emplpoyeeRegistration.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-email-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"emplpoyeeRegistration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\"\\n                        [max-value]=\\\"100\\\" [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-number-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"emplpoyeeRegistration.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                    </amexio-radio-group>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"emplpoyeeRegistration.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                    </amexio-checkbox>\\n                </amexio-column>\\n            </amexio-row>\\n        </amexio-form-body>\\n        <amexio-form-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n            </amexio-button>\\n        </amexio-form-action>\\n\\n    </amexio-form>\\n\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeForm.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data </b>: {{emplpoyeeRegistration|json}} <br>\\n\\n    <!-- Reactive Forms Within Form Amexio Form With <amexio-form> -->\\n    <br>\\n\\n    <amexio-form [header]=\\\"true\\\" [footer-align]=\\\"'right'\\\" [formGroup]=\\\"employeeFormInsideForm\\\">\\n        <amexio-form-header>\\n            Reactive Forms Within Forms\\n        </amexio-form-header>\\n        <amexio-form-body>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"registration.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                        [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"registration.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                        [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                        [icon-feedback]=\\\"true\\\" >\\n                    </amexio-text-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"registration.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-email-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"registration.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                        [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-number-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"12\\\">\\n                    <amexio-fieldset [formGroup]=\\\"addressForm\\\" [collapsible]=\\\"true\\\" title=\\\"Address\\\">\\n                        <amexio-row>\\n                            <amexio-column size=\\\"5\\\">\\n                                <amexio-textarea-input formControlName=\\\"TemporaryAddress\\\" [enable-popover]=\\\"true\\\" [(ngModel)]=\\\"registration.address.tempAddress\\\" [field-label]=\\\"'Temporary Address'\\\" [place-holder]=\\\"'Temporary address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter temporary address'\\\"\\n                                    [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                </amexio-textarea-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"2\\\">\\n                                <amexio-checkbox [field-label]=\\\"'Permanent address same as temporary address'\\\" (onSelection)=\\\"onCheckClick1($event)\\\">\\n                                </amexio-checkbox>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"5\\\">\\n                                <amexio-textarea-input formControlName=\\\"PermanentAddress\\\" [(ngModel)]=\\\"registration.address.perAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Permanent Address'\\\" [place-holder]=\\\"'Permanent address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter permanent address'\\\"\\n                                    [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                </amexio-textarea-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"12\\\">\\n                                <amexio-button [label]=\\\"'Add Address'\\\" [disabled]=\\\"!addressForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n                                </amexio-button>\\n                            </amexio-column>\\n                        </amexio-row>\\n                    </amexio-fieldset>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"registration.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                    </amexio-radio-group>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"registration.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                    </amexio-checkbox>\\n                </amexio-column>\\n            </amexio-row>\\n        </amexio-form-body>\\n        <amexio-form-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeFormInsideForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n            </amexio-button>\\n        </amexio-form-action>\\n    </amexio-form>\\n\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeFormInsideForm.value | json}}<br>\\n    <b style=\\\"color:green\\\">Inner Form Model Data : </b> {{addressForm.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data </b>: {{registration|json}} <br>\\n    <br>\\n    <!-- Reactive forms group inside forms With <amexio-form>-->\\n\\n\\n    <amexio-form [header]=\\\"true\\\" [formGroup]=\\\"employeeFormGroup\\\">\\n        <amexio-form-header>\\n            Reactive Forms Group Inside Forms\\n        </amexio-form-header>\\n        <amexio-form-body>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"registration1.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                        [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"registration1.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                        [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                        [icon-feedback]=\\\"true\\\" >\\n                    </amexio-text-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"registration1.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-email-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"registration1.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                        [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-number-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"12\\\">\\n                    <amexio-fieldset formGroupName=\\\"AddressFormGroup\\\" [collapsible]=\\\"true\\\" title=\\\"Address\\\">\\n                        <amexio-row>\\n                            <amexio-column size=\\\"5\\\">\\n                                <amexio-textarea-input formControlName=\\\"temporaryAddress\\\" [(ngModel)]=\\\"registration1.address.tempAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Temporary Address'\\\" [place-holder]=\\\"'Temporary Address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter temporary address'\\\"\\n                                    [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                </amexio-textarea-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"2\\\">\\n                                <amexio-checkbox [field-label]=\\\"'Permanent address same as temporary address'\\\" (onSelection)=\\\"onCheckClick2($event)\\\">\\n                                </amexio-checkbox>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"5\\\">\\n                                <amexio-textarea-input formControlName=\\\"permanentAddress\\\" [(ngModel)]=\\\"registration1.address.perAddress\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Permanent Address'\\\" [place-holder]=\\\"'Permanent Address'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter permanent address'\\\"\\n                                    [icon-feedback]=\\\"true\\\" [rows]=\\\"'2'\\\" [columns]=\\\"'1'\\\">\\n                                </amexio-textarea-input>\\n                            </amexio-column>\\n                        </amexio-row>\\n                    </amexio-fieldset>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"registration1.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                    </amexio-radio-group>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"registration1.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                    </amexio-checkbox>\\n                </amexio-column>\\n            </amexio-row>\\n        </amexio-form-body>\\n        <amexio-form-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!employeeFormGroup.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n            </amexio-button>\\n        </amexio-form-action>\\n    </amexio-form>\\n\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{employeeFormGroup.value | json}}<br>\\n    <b style=\\\"color:blue\\\">UI Model Data </b>: {{registration1|json}} <br>\\n    <br>\\n\\n    <amexio-form [formGroup]=\\\"dynamicEmployeeForm\\\" header=\\\"true\\\" footer=\\\"false\\\">\\n        <amexio-form-header>\\n            Reactive Form with Dynamic Forms\\n        </amexio-form-header>\\n        <amexio-form-body>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input formControlName=\\\"FirstName\\\" [(ngModel)]=\\\"dynamicFormsReg.firstName\\\" [field-label]=\\\"'First Name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'Please enter valid First Name'\\\" [enable-popover]=\\\"true\\\" [place-holder]=\\\"'Please enter first name'\\\" [min-length]=\\\"2\\\"\\n                        [icon-feedback]=\\\"false\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\" [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input formControlName=\\\"LastName\\\" [(ngModel)]=\\\"dynamicFormsReg.lastName\\\" [field-label]=\\\"'Last Name'\\\" [place-holder]=\\\"'Please enter last name'\\\" [allow-blank]=\\\"true\\\" [error-msg]=\\\"'errorMsg'\\\" [enable-popover]=\\\"true\\\" [min-length]=\\\"2\\\" [min-error-msg]=\\\"'Minimum 2 char allowed'\\\"\\n                        [max-error-msg]=\\\"'Maximum 20 char allowed'\\\" [max-length]=\\\"20\\\">\\n                        [icon-feedback]=\\\"true\\\" >\\n                    </amexio-text-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-email-input formControlName=\\\"Email\\\" [(ngModel)]=\\\"dynamicFormsReg.email\\\" [field-label]=\\\"'Email Id'\\\" [place-holder]=\\\"'Please enter Email Id'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please Enter Email Id'\\\" [enable-popover]=\\\"true\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-email-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-number-input formControlName=\\\"Age\\\" [(ngModel)]=\\\"dynamicFormsReg.age\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Age'\\\" [place-holder]=\\\"'Enter age'\\\" [error-msg]=\\\"'Please enter age'\\\" [min-value]=\\\"18\\\" [min-error-msg]=\\\"'age can not be less than 18'\\\" [max-value]=\\\"100\\\"\\n                        [max-error-msg]=\\\"'age can not be greater than 100'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-number-input>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-button [label]=\\\"'Add Phone'\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Add Phone'\\\" (onClick)=\\\"addPhoneClick()\\\">\\n                    </amexio-button>\\n                </amexio-column>\\n            </amexio-row>\\n            <amexio-fieldset *ngIf=\\\"enableFieldSet\\\" formArrayName=\\\"phones\\\" [collapsible]=\\\"false\\\" [title]=\\\"'Add Phone Numbers'\\\">\\n                <amexio-row *ngFor=\\\"let phone of phoneForms.controls;let i=index\\\" [formGroupName]=\\\"i\\\">\\n                    <amexio-column size=\\\"3\\\">\\n                        <amexio-text-input formControlName=\\\"phoneLabel\\\" [(ngModel)]=\\\"phone.phoneLabel\\\" enable-popover=\\\"true\\\" field-label=\\\"Phone Label\\\" name=\\\"phoneLabel\\\" error-msg=\\\"Please add phone label\\\" place-holder=\\\"Enter phone label\\\" allow-blank=\\\"false\\\" min-length=\\\"3\\\" min-error-msg=\\\"Minimum 3 char required\\\"\\n                            max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                        <amexio-text-input formControlName=\\\"countryCode\\\" [(ngModel)]=\\\"phone.countryCode\\\" enable-popover=\\\"true\\\" field-label=\\\"Country Code\\\" name=\\\"countryCode\\\" error-msg=\\\"Please add country code\\\" place-holder=\\\"Enter country code\\\" allow-blank=\\\"false\\\" min-length=\\\"1\\\"\\n                            min-error-msg=\\\"Minimum 1 char required\\\" max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                        <amexio-text-input formControlName=\\\"phoneNumber\\\" [(ngModel)]=\\\"phone.phoneNumber\\\" enable-popover=\\\"true\\\" field-label=\\\"Phone Number\\\" name=\\\"phoneNumber\\\" error-msg=\\\"Please add phone number\\\" place-holder=\\\"Enter phone number\\\" allow-blank=\\\"false\\\" min-length=\\\"8\\\"\\n                            min-error-msg=\\\"Minimum 8 char required\\\" max-length=\\\"10\\\" max-error-msg=\\\"Maximum 10 char allowed\\\" icon-feedback=\\\"true\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                        <!-- <amexio-button  [label]=\\\"'Add'\\\"  [type]=\\\"'green'\\\" [tooltip]=\\\"'add'\\\"  [icon]=\\\"'fa fa-check'\\\" (onClick)=\\\"addClick({'phoneLabel':phone.phoneLabel,'countryCode':phone.countryCode,'phoneNumber':phone.phoneNumber})\\\">\\n                                </amexio-button> -->\\n                        <amexio-button [label]=\\\"'Delete'\\\" [type]=\\\"'red'\\\" [tooltip]=\\\"'delete'\\\" [icon]=\\\"'fa fa-trash'\\\" (onClick)=\\\"onDeleteClick(i)\\\">\\n                        </amexio-button>\\n                    </amexio-column>\\n                </amexio-row>\\n            </amexio-fieldset>\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-radio-group formControlName=\\\"Gender\\\" [(ngModel)]=\\\"dynamicFormsReg.gender\\\" [field-label]=\\\"'Gender'\\\" [horizontal]=\\\"true\\\" [display-field]=\\\"'genderName'\\\" [value-field]=\\\"'genderId'\\\" [data]=\\\"radioGroupData\\\">\\n                    </amexio-radio-group>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-checkbox formControlName=\\\"Agree\\\" [(ngModel)]=\\\"dynamicFormsReg.agree\\\" [field-label]=\\\"'Agree'\\\">\\n                    </amexio-checkbox>\\n                </amexio-column>\\n            </amexio-row>\\n        </amexio-form-body>\\n\\n        <amexio-form-action>\\n            <amexio-button [label]=\\\"'Save'\\\" [disabled]=\\\"!dynamicEmployeeForm.valid\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'Save Form'\\\">\\n            </amexio-button>\\n        </amexio-form-action>\\n    </amexio-form>\\n\\n\\n    <br>\\n    <b style=\\\"color:green\\\">Form Model Data : </b> {{dynamicEmployeeForm.value | json}}<br>\\n    <!-- <b style=\\\"color:blue\\\">UI Model Data </b>: {{dynamicFormsReg|json}} <br> -->\\n\\n\\n    </amexio-api-demo>\\n    </amexio-api-structure>\\n\""],"sourceRoot":""}