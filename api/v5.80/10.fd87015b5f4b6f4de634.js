(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"0hgq":function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/searchbox.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The SearchBox is WAI ARIA-accessible through the Tab key.And the best practices for implementing the keyboard\n        navigation for its component role and is tested against the popular screen readers.</p>\n      <p>Role:Menu-The menu role defines menu as its type.</p>\n      <p>Role:MenuItem-The menuitem role defines item as its type.It has dynamic index for focus navigation.</p>\n      <p>Role:Button-The button role defines button as its type.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column [size]=6>\n        <amexio-card [header]="true"  [footer]="false">\n          <amexio-header>\n            Search Box\n          </amexio-header>\n          <amexio-body>\n            <amexio-searchbox [place-holder]="\'Search\'" [display-field]="\'subject\'" [data]="bindData" [width]="250">\n              <amexio-searchbox-options #search [title]="\'Advance search\'">\n                <amexio-text-input field-label="Subject:" name="subject" place-holder="Enter subject" icon-feedback="true"\n                  [(ngModel)]="subject">\n                </amexio-text-input>\n                <amexio-text-input field-label="From:" name="from" place-holder="Emailid" icon-feedback="true"\n                  [(ngModel)]="from">\n                </amexio-text-input>\n                <amexio-text-input field-label="To:" name="To" place-holder="Emailid" icon-feedback="true" [(ngModel)]="to">\n                </amexio-text-input>\n                <amexio-row>\n                  <amexio-column [size]="\'12\'"></amexio-column>\n                </amexio-row>\n                <amexio-button [label]="\'Filter\'" [type]="\'theme-color\'" [tooltip]="\'toolTip\'" [size]="\'medium\'"\n                  (onClick)="filter(search)">\n                </amexio-button>\n              </amexio-searchbox-options>\n            </amexio-searchbox>\n          </amexio-body>\n        </amexio-card>\n        <br>\n        <amexio-card [header]="true"  [footer]="false">\n          <amexio-header>\n            Search Box With Global Filter\n          </amexio-header>\n          <amexio-body>\n            <amexio-searchbox [place-holder]="\'Search\'" [enable-global-filter]="true" [display-field]="\'subject\'" [data]="bindData" [width]="250">\n              <amexio-searchbox-options #search2 [title]="\'Advance search\'">\n                <amexio-text-input field-label="Subject:" name="subject" place-holder="Enter subject" icon-feedback="true"\n                  [(ngModel)]="subject">\n                </amexio-text-input>\n                <amexio-text-input field-label="From:" name="from" place-holder="Emailid" icon-feedback="true"\n                  [(ngModel)]="from">\n                </amexio-text-input>\n                <amexio-text-input field-label="To:" name="To" place-holder="Emailid" icon-feedback="true" [(ngModel)]="to">\n                </amexio-text-input>\n                <amexio-row>\n                  <amexio-column [size]="\'12\'"></amexio-column>\n                </amexio-row>\n                <amexio-button [label]="\'Filter\'" [type]="\'theme-color\'" [tooltip]="\'toolTip\'" [size]="\'medium\'"\n                  (onClick)="filter(search2)">\n                </amexio-button>\n              </amexio-searchbox-options>\n            </amexio-searchbox>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n\n      <amexio-column size ="6">\n        <amexio-card\n          [header]="true"\n          [header-align]="\'left\'">\n            <amexio-header>\n              Data \n            </amexio-header>\n            <amexio-body>\n                <amexio-datagrid amexioColorPalette [height]="200" [color-palette]="\'amexio-theme-color1\'"  [gradient]="false" \n                [enable-checkbox]="false" \n                [data]="bindData" \n                >\n   <amexio-data-table-column \n       [data-index]="\'from\'" \n       [data-type]="\'string\'" \n       [hidden]="false" \n       [text]="\'From\'">\n   </amexio-data-table-column>\n   <amexio-data-table-column \n       [data-index]="\'to\'" \n       [data-type]="\'string\'" \n       [hidden]="false"\n       [text]="\'To\'">\n   </amexio-data-table-column>\n   <amexio-data-table-column\n       [data-index]="\'subject\'" \n       [data-type]="\'string\'" \n       [hidden]="false" \n       [text]="\'Subject\'">\n   </amexio-data-table-column>\n</amexio-datagrid>\n\n          \x3c!-- <pre><code>{{localData|json}}</code></pre>  --\x3e\n            </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},"0qVq":function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/checkbox.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Checkbox is WAI ARIA-accessible through the Tab key.</p>\n      <p>Role: Checkbox - Indicates that the element serves as checkbox.\n        The aria-checked attribute is goverend by dynamic value of checkbox.It consist of id and for which allows\n        screen reader to loud the checkbox enabled or disabled when focus comes to input.\n      </p>\n    </amexio-box>\n  </amexio-api-accessible>\n\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Single Checkbox\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox [field-label]="\'I Agree terms and conditions\'" [(ngModel)]="check" (onSelection)="onCheckClick($event)"></amexio-checkbox>\n            <p>Selected Value : {{check}}</p>\n          </amexio-body>\n        </amexio-card>\n\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Single Checkbox with disable\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox [field-label]="\'Agree\'" disabled="true"></amexio-checkbox>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},"2cFu":function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/rangeslider.json\'">\n  <amexio-api-reference>\n    <amexio-box border-color="brown" border="right-left" padding="true" background-color="brown">\n      <amexio-label><b> Amexio Range value slider attribute (range = true) and (max-range) is mandatory.</b></amexio-label>\n    </amexio-box>\n  </amexio-api-reference>\n  <amexio-api-demo>\n\n    <amexio-row>\n      <amexio-column size="12">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Range Slider\n          </amexio-header>\n          <amexio-body>\n\n            <amexio-row>\n              <amexio-column [size]="3">\n                <amexio-label>\n                  Square type Range Slider With Max range.\n                </amexio-label><br /><br />\n                <amexio-value-range [max-range]="500" [type]="\'square\'" [range]="true">\n                </amexio-value-range>\n              </amexio-column>\n\n              <amexio-column [size]="1">\n              </amexio-column>\n\n              <amexio-column [size]="3">\n                <amexio-label>\n                    Circle type Step Range Slider with max range.\n                </amexio-label><br /><br />\n                <amexio-value-range [step-value]="0.5" [type]="\'circle\'" [max-range]="5" [range]="true">\n                </amexio-value-range>\n              </amexio-column>\n\n              <amexio-column [size]="1">\n              </amexio-column>\n\n              <amexio-column [size]="3">\n                <amexio-label>\n                  Rectangle type Range Slider with model binding & max range.\n                </amexio-label><br /><br />\n                <amexio-value-range [type]="\'rectangle\'" [(ngModel)]="rangeValues" [max-range]="100" [range]="true">\n                </amexio-value-range>\n              </amexio-column>\n            </amexio-row>\n            <br />\n            \n          </amexio-body>\n        \n        </amexio-card>\n        \n      </amexio-column>\n      \n    </amexio-row>\n  \n\n    <amexio-row>\n      <amexio-column size="12">\n        <amexio-card header="true">\n          <amexio-header>\n            Vertical Range Slider\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n\n              <amexio-column [size]="4">\n                <amexio-label>\n                  Square type Vertical Range Slider with Max Range.\n                </amexio-label><br /><br />\n                <amexio-value-range orientation="vertical" [type]="\'square\'" [max-range]="100" [range]="true">\n                </amexio-value-range>\n              </amexio-column>\n\n              <amexio-column [size]="4">\n                <amexio-label>\n                 Circle type Step & model binding to Vertical Range Slider with max range..\n                </amexio-label><br /><br />\n                <amexio-value-range [step-value]="10" [(ngModel)]="rangeValues" [type]="\'circle\'" orientation="vertical"\n                  [max-range]="100" [range]="true">\n                </amexio-value-range>\n              </amexio-column>\n\n              <amexio-column [size]="4">\n                <amexio-label>\n                 Rectangle type Range Slider with max range & model binding.\n                </amexio-label><br /><br />\n                <amexio-value-range [(ngModel)]="rangeValues1" [type]="\'rectangle\'" orientation="vertical" [max-range]="100"\n                  [range]="true">\n                </amexio-value-range>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n  </amexio-api-demo>\n</amexio-api-structure>'},"310c":function(e,o){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forminputs/dropdown.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Dropdown is WAI ARIA-accessible through the Tab key.</p>\n      <p> Role:Combobox-The Combobox role is defined for Input when first tabs over input.This consist of attribute\n        consist of aria-complete,aria-expanded,and aria-activedescendant.</p>\n      <p> Role:Listbox-The Listbox role for list in a dropdown which has attribute aria-expanded</p>\n      <p> Role:Option- The Option role for individual element in list which has attribute aria-labelleby and dynamic id\n        is set which accordingily moves the focus.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Dropdown with Template\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-dropdown [(ngModel)]="id" [place-holder]="\'Choose\'" name="id" [data-reader]="\'data\'"\n                  [field-label]="\'Choose Country\'" [http-url]="\'assets/data/componentdata/gridtemplate.json\'"\n                  [http-method]="\'get\'" [search]="true" [display-field]="\'name\'" [value-field]="\'id\'"\n                  [enable-sort]="true" [sort]="\'asc\'" (onSingleSelect)="getRowData($event)">\n                  <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-label>\n                      <amexio-image [width]="100" [path]="\'assets/images/flags/flags/\'+row.flag_32"></amexio-image>\n                    </amexio-label>&nbsp;&nbsp;\n                    <amexio-label>{{row.name}}</amexio-label>\n                    <amexio-label>( {{row.name_official}} )</amexio-label>\n                  </ng-template>\n\n                </amexio-dropdown>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Selected Record Data\n          </amexio-header>\n          <amexio-body>\n            {{clickedRowData|json}}\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n\n\n  </amexio-api-demo>\n</amexio-api-structure>'},"3mc+":function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/typeahead.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The typeahead is WAI ARIA-accessible through the Tab key.And the best practices for implementing the keyboard\n        navigation for its component role and is tested against the popular screen readers.</p>\n      <p>Role:Combobox-The combobox role defines its type.It consist of aria-autocomplete and aria-expanded.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Simple Type Ahead Field\n          </amexio-header>\n          <amexio-body>\n            <amexio-typeahead [data-reader]="\'data\'" [key]="\'countryCode1\'" [display-field]="\'countryName\'"\n              [place-holder]="\'Search\'" [(ngModel)]="country" [http-url]="\'assets/data/componentdata/country.json\'"\n              [http-method]="\'get\'" [field-label]="\'Country Name\'">\n            </amexio-typeahead>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Selected Value\n          </amexio-header>\n          <amexio-body>\n            {{country}}\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},"74Hw":function(e,o){e.exports='\n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/google.json\'">\n  <amexio-api-reference><amexio-box border-color="brown" border="left" padding="true" background-color="brown">\n          <amexio-label>\n            Make sure api-key is created before use this component.refer google developer webside to create key <a href="https://developers.google.com/identity/sign-in/web/sign-in" target="_blank">Google Sign-In</a>\n            <br/><br/>\n          </amexio-label>\n        </amexio-box>\n  </amexio-api-reference>\n  <amexio-api-demo>\n\n<amexio-row>\n    <amexio-column size="4">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          Demo\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [label]="\'Signup With Google\'" [api-key]="\'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com\'"\n                [type]="\'google\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'square\'" [api-key]="\'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com\'"\n                [type]="\'google\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'circle\'" [api-key]="\'644642582036-hn15j2lag4h5o4t6lhjpk7pmm2q7bv1i.apps.googleusercontent.com\'"\n                [type]="\'google\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column size="8">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          User Info After Login\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12" [fit]="true">\n              {{googleLoginData|json}}\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n  </amexio-api-demo>\n  </amexio-api-structure>'},"79yA":function(e,o){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forminputs/dropdown.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Dropdown is WAI ARIA-accessible through the Tab key.</p>\n      <p> Role:Combobox-The Combobox role is defined for Input when first tabs over input.This consist of attribute\n        consist of aria-complete,aria-expanded,and aria-activedescendant.</p>\n      <p> Role:Listbox-The Listbox role for list in a dropdown which has attribute aria-expanded</p>\n      <p> Role:Option- The Option role for individual element in list which has attribute aria-labelleby and dynamic id\n        is set which accordingily moves the focus.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Dropdown Component\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-dropdown [(ngModel)]="countryCode1" [place-holder]="\'Choose\'" name="countryCode1" [data-reader]="\'data\'"\n                  [field-label]="\'Choose Country\'" [http-url]="\'assets/data/componentdata/country.json\'" [http-method]="\'get\'"\n                  [display-field]="\'countryName\'" [value-field]="\'countryCode1\'" [enable-sort]="true" [sort]="\'asc\'">\n                  <amexio-button [color]="\'green\'" [label]="\'Add More Country\'" [type]="\'transparent\'" [block]="true"\n                  [tooltip]="\'Add More Country\'">\n                </amexio-button>\n              \n                </amexio-dropdown>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Selected Record Data\n          </amexio-header>\n          <amexio-body>\n            <ng-container *ngIf="countryCode1">\n              {{countryCode1}}\n            </ng-container>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Dropdown Component with Inner Structure\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-dropdown [(ngModel)]="personName" [place-holder]="\'Choose\'" name="countryCode1" [data-reader]="\'data\'"\n                  [field-label]="\'Address\'" [http-url]="\'assets/data/componentdata/personProfile.json\'" [http-method]="\'get\'"\n                  [display-field]="\'address.addressLabel\'" [value-field]="\'personName\'" [enable-sort]="true" [sort]="\'asc\'">\n                </amexio-dropdown>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Owner\n          </amexio-header>\n          <amexio-body>\n            <ng-container *ngIf="personName">\n              {{personName}}\n            </ng-container>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Dropdown Component with ng-content\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-dropdown [(ngModel)]="fruitName" [place-holder]="\'Choose\'" name="fruitName" [data-reader]="\'data\'"\n                  [field-label]="\'Fruit\'" [http-url]="\'assets/data/componentdata/fruits.json\'" [http-method]="\'get\'"\n                  [display-field]="\'fruitName\'" [value-field]="\'fruitName\'" [enable-sort]="true" [sort]="\'asc\'">\n                  <amexio-button [color]="\'green\'" [label]="\'Add More Fruits\'" [type]="\'transparent\'" [block]="true"\n                    [tooltip]="\'Add More\'">\n                  </amexio-button>\n                </amexio-dropdown>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Fruit Selected\n          </amexio-header>\n          <amexio-body>\n            <ng-container *ngIf="fruitName">\n              {{fruitName}}\n            </ng-container>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},"9R6Z":function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/dialpad.json\'">\n    <amexio-api-demo>\n        <amexio-row>\n            <amexio-column [size]="12">\n                <amexio-card [header]="true" [footer]="false" [footer-align]="\'left\'">\n                    <amexio-header>\n                        Amexio Dialpad\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="6">\n                                <amexio-card [height]="\'200\'" [header]="true" [footer]="true" [footer-align]="\'left\'">\n                                    <amexio-header>\n                                        2-rows type with show/hide pin functionality\n                                    </amexio-header>\n                                    <amexio-body>\n                                        <amexio-dial-pad [show-password]="true" [password]="true" [(value)]="dialpadValue1" [field-label]="\'Enter Pin\'" [min-length]="1" [max-length]="2">\n                                        </amexio-dial-pad>\n                                    </amexio-body>\n                                    <amexio-action>\n                                        Bind value = {{dialpadValue1}}\n                                    </amexio-action>\n                                </amexio-card>\n                            </amexio-column>\n                            <amexio-column [size]="6">\n                                <amexio-card [height]="\'200\'" [header]="true" [footer]="true" [footer-align]="\'left\'">\n                                    <amexio-header>\n                                        2-rows type with random number\n                                    </amexio-header>\n                                    <amexio-body>\n                                        <amexio-dial-pad [(value)]="dialpadValue2" [random]="true" [field-label]="\'Enter Pin\'" [min-length]="1" [max-length]="2">\n                                        </amexio-dial-pad>\n                                    </amexio-body>\n                                    <amexio-action>\n                                        Bind value = {{dialpadValue2}}\n                                    </amexio-action>\n                                </amexio-card>\n                            </amexio-column>\n                        </amexio-row>\n                        \x3c!-- second row --\x3e\n                        <amexio-row>\n                            <amexio-column [size]="6">\n                                <amexio-card [height]="\'350\'" [header]="true" [footer]="true" [footer-align]="\'left\'">\n                                    <amexio-header>\n                                        Classic type\n                                    </amexio-header>\n                                    <amexio-body>\n                                        <amexio-dial-pad [type]="\'classic\'" [(value)]="dialpadValue3" [field-label]="\'Enter Pin\'" [min-length]="1" [max-length]="2">\n                                        </amexio-dial-pad>\n                                    </amexio-body>\n                                    <amexio-action>\n                                        Bind value = {{dialpadValue3}}\n                                    </amexio-action>\n                                </amexio-card>\n                            </amexio-column>\n                            <amexio-column [size]="6">\n                                <amexio-card [height]="\'350\'" [header]="true" [footer]="true" [footer-align]="\'left\'">\n                                    <amexio-header>\n                                        Classic type with random number\n                                    </amexio-header>\n                                    <amexio-body>\n                                        <amexio-dial-pad [type]="\'classic\'" [random]="true" [(value)]="dialpadValue4" [random]="true" [field-label]="\'Enter Pin\'"\n                                            [min-length]="1" [max-length]="2">\n                                        </amexio-dial-pad>\n                                    </amexio-body>\n                                    <amexio-action>\n                                        Bind value = {{dialpadValue4}}\n                                    </amexio-action>\n                                </amexio-card>\n                            </amexio-column>\n                        </amexio-row>\n                        \x3c!-- third row --\x3e\n                        <amexio-row>\n                                <amexio-column [size]="6">\n                                    <amexio-card [height]="\'350\'" [header]="true" [footer]="true" [footer-align]="\'left\'">\n                                        <amexio-header>\n                                            Calculator type\n                                        </amexio-header>\n                                        <amexio-body>\n                                            <amexio-dial-pad [type]="\'calculator\'" [button-type]="\'round\'" [(value)]="dialpadValue5" [field-label]="\'Enter Pin\'" [min-length]="1" [max-length]="2">\n                                            </amexio-dial-pad>\n                                        </amexio-body>\n                                        <amexio-action>\n                                            Bind value = {{dialpadValue5}}\n                                        </amexio-action>\n                                    </amexio-card>\n                                </amexio-column>\n                             \n                            </amexio-row>\n                    </amexio-body>\n                </amexio-card>\n\n            </amexio-column>\n\n        </amexio-row>\n\n    </amexio-api-demo>\n</amexio-api-structure>'},FwYP:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/geolocation.json\'">\n    <amexio-api-accessible>\n          \n    </amexio-api-accessible>\n    <amexio-api-demo>\n        <amexio-row>\n            <amexio-column [size]="12" >\n                <amexio-card [height]="\'200\'" [header]="true" [footer]="false" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Amexio GeoLocation\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n                                \x3c!-- ---1--- --\x3e\n                                <amexio-geolocation (onSuccess)="getCurrentPosition($event)">\n\n                                </amexio-geolocation>\n                                <amexio-button\n                                    [label]="\'Current Location\'"\n                                    [type]="\'theme-color\'"\n                                    \n                                    [icon]="\'fa fa-map-marker\'"\n                                   \n                                    [size]="\'small\'"\n                                     (onClick)="onClick()">\n                                </amexio-button>\n                                <ng-container *ngIf="flag && myLocation.coords.latitude && myLocation.coords.longitude">\n                                    <br> <br>\n                               <amexio-label\n                                    [size]="\'small-bold\'">\n                                    Latitude : \n                                </amexio-label>     {{myLocation.coords.latitude}}\n                                 <br>\n                                 <amexio-label\n                                 [size]="\'small-bold\'">\n                                 Longitude : \n                             </amexio-label>     {{myLocation.coords.longitude}}\n                            </ng-container>\n                                \n\n                            </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                    \x3c!-- <amexio-action >\n                        {{myLocation.coords | json}}\n                    </amexio-action> --\x3e\n                </amexio-card>\n\n            </amexio-column>\n \n        </amexio-row>\n      \n    </amexio-api-demo>\n</amexio-api-structure>'},HVHI:function(e,o){e.exports='\n\n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/fileupload.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Fileupload is WAI ARIA-accessible through the Tab key.</p>\n    </amexio-box>\n  </amexio-api-accessible>  \n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Basic File Upload\n          </amexio-header>\n          <amexio-body>\n            <amexio-fileupload [http-url]="\'/upload\'" [http-method]="\'POST\'"\n                               [file-type]="\'image/*\'" [multiple-file]="\'*\'" [field-label]="\'Photo Upload\'">\n            </amexio-fileupload>\n          </amexio-body>\n        </amexio-card>\n\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Drag Drop File Upload\n          </amexio-header>\n          <amexio-body>\n            <amexio-fileupload [http-url]="\'/upload\'" [http-method]="\'POST\'" [file-type]="\'image/*\'" [field-label]="\'Photo Upload\'" droppable="true"></amexio-fileupload>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},I72g:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/password.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Password is WAI ARIA-accessible through the Tab key.</p>\n      <p>Role:Password-The password role defines password as its type.It consist aria-labelledby,aria-required and\n        aria-describedby are set dynamically.</p>\n      <p>Role:Tooltip-The tooltip role defines the tooltip msg in a particular password field.\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic Password Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-password-input [show-password]="false" [enable-popover]="true" [field-label]="\'Password Input\'" name="password"\n              [place-holder]="\'Enter Password\'" [allow-blank]="false" [error-msg]="\'Please enter password\'"\n              [min-length]="6" [min-error-msg]="\'Minimum 6 char required\'" [max-length]="32" [max-error-msg]="\'Maximum 32 char allowed\'"\n              [icon-feedback]="true">\n            </amexio-password-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Password Input without Label\n          </amexio-header>\n          <amexio-body>\n            <amexio-password-input name="password" [place-holder]="\'Enter Password\'" [allow-blank]="false" [error-msg]="\'Please enter password\'"\n              [min-length]="6" [min-error-msg]="\'Minimum 6 char required\'" [max-length]="32" [max-error-msg]="\'Maximum 32 char allowed\'"\n              [icon-feedback]="true" [has-label]="false">\n            </amexio-password-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Password Input with show/hide functionality\n          </amexio-header>\n          <amexio-body>\n            <amexio-password-input [show-password]="true" [enable-popover]="true" [field-label]="\'Password Input\'" name="password"\n              [place-holder]="\'Enter Password\'" [allow-blank]="false" [error-msg]="\'Please enter password\'"\n              [min-length]="6" [min-error-msg]="\'Minimum 6 char required\'" [max-length]="32" [max-error-msg]="\'Maximum 32 char allowed\'"\n              [icon-feedback]="false">\n            </amexio-password-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},JftQ:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/radiogroup.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Radiogroup is WAI ARIA-accessible through the Tab key.And the best practices for implementing the keyboard navigation for its component role and is tested against the popular screen readers.</p>\n      <p>Role:Radiogroup-The radiogroup role defines radio as its type.It consist aria-labelledby, aria-disabled, aria-required and aria-checked is set dynamically.</p>\n      </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Radio Group\n          </amexio-header>\n          <amexio-body>\n            <amexio-radio-group [field-label]="\'Horizontal Radio Group\'" name="gender" [data-reader]="\'response.data\'"\n              [display-field]="\'gender\'" [value-field]="\'genderId\'" [horizontal]="true" [data]="radioGroupData"\n              [(ngModel)]="model1" (onSelection)="setSelectedGender($event)">\n            </amexio-radio-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Vertical Radio Group With Http Url\n          </amexio-header>\n          <amexio-body>\n            <amexio-radio-group [field-label]="\'Vertical Radio Group\'" name="gender1" [data-reader]="\'data\'"\n              [display-field]="\'gender\'" [value-field]="\'genderId\'" [http-method]="\'get\'" [(ngModel)]="model2"\n              [http-url]="\'assets/data/componentdata/radiogroup.json\'" (onSelection)="setSelectedGender($event)">\n            </amexio-radio-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Radio Group Disabled\n          </amexio-header>\n          <amexio-body>\n            <amexio-radio-group [field-label]="\'Horizontal Radio Group\'" name="gendery" [data-reader]="\'radiodata\'"\n              [display-field]="\'gender\'" [value-field]="\'genderId\'" [http-method]="\'get\'" horizontal="true" [(ngModel)]="model3"\n              [http-url]="\'assets/data/componentdata/radiogroup.json\'" disabled="true">\n            </amexio-radio-group>\n\n\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Radio Group single item disabled\n          </amexio-header>\n          <amexio-body>\n\n            <amexio-radio-group [field-label]="\'Horizontal Radio Group \'" name="genderx" [data-reader]="\'data\'"\n              [(ngModel)]="model4" [display-field]="\'gender\'" [value-field]="\'genderId\'" [http-method]="\'get\'"\n              horizontal="true" [http-url]="\'assets/data/componentdata/radiogroup_disable.json\'">\n            </amexio-radio-group>\n            <h2>Radio Group model Binding value </h2>\n            {{model4 | json}}\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},Jrhs:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/number.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Number Input is WAI ARIA-accessible through the Tab key.</p>\n      <p>Role:Number-The number role defines Number as its type.It consist aria-labelledby,aria-required and\n        aria-describedby is set dynamically.</p>\n      <p>Role:Tooltip-The tooltip role defines the tooltip msg in a particular number field.\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic Number Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-number-input [field-label]="\'Number Input\'" [place-holder]="\'Enter Age\'">\n            </amexio-number-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Number Input With Disable\n          </amexio-header>\n          <amexio-body>\n            <amexio-number-input [place-holder]="\'Enter age\'" [icon-feedback]="false" [has-label]="false" [disabled]="true">\n            </amexio-number-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Number Input Font Style\n          </amexio-header>\n          <amexio-body>\n            <amexio-number-input [field-label]="\'Age\'" [place-holder]="\'Enter Age\'" [font-style]="\'italic\'">\n            </amexio-number-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Number Input With Min/Max Validation\n          </amexio-header>\n          <amexio-body>\n            <amexio-number-input [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'"\n              [allow-blank]="false" [error-msg]="\'Please enter age\'" [min-value]="1" [min-error-msg]="\'age can not be less than 1\'"\n              [max-value]="100" [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n            </amexio-number-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},KMof:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/textinput.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Textinput is WAI ARIA-accessible through the Tab key.</p>\n      <p>Role:Input-The input role defines its type.</p>\n      <p>Role:Text-The text role defines its type.It consist of aria-labelledby and aria-describedby.</p>\n      <p>Role:Tooltip-The tooltip role defines as its msg type.It consist of dynamic id.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic Text Field\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input field-label="Name" name="name" place-holder="Enter name" icon-feedback="true"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Input Without Label & Icon feedback\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input name="name" place-holder="Enter name" has-label="false"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Min/Max Validations\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input enable-popover="true" [enable-popover]="true" field-label="Name" name="name"\n              place-holder="Enter name" [allow-blank]="false" error-msg="Please Enter Name" [min-length]="1"\n              min-error-msg="Minimum 1 Char Required" [max-length]="10" max-error-msg="Maximum 10 Char Allowed"\n              [icon-feedback]="true"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Disabled Text Field\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input name="name" field-label="Name" place-holder="Enter name" disabled="true"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Font Styling\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input field-label="Name" name="name" place-holder="Enter name" icon-feedback="true" font-style="italic"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Font Size & Family Styling\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input [field-label]="\'Name\'" name="name" [place-holder]="\'Enter name\'" [icon-feedback]="false"\n              [font-size]="\'large\'"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Input with Pattern\n          </amexio-header>\n          <amexio-body>\n            <amexio-text-input name="name" [field-label]="\'Name\'" [place-holder]="\'Enter name\'" [pattern]="\'[a-z]\'"\n              [icon-feedback]="true"></amexio-text-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},LVwy:function(e,o){e.exports='   \n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/badge.json\'">\n    <amexio-api-demo>\n   <amexio-row>\n        <amexio-column [size]="12">\n            <amexio-card [header]="true">\n                <amexio-header>\n                    Badge Demo\n                </amexio-header>\n                <amexio-body>\n                    <amexio-row>\n                        <amexio-column size="6">\n                            <amexio-card-ce>\n                                <amexio-image width="100%" path="assets/images/cardce/burger.jpg"></amexio-image>\n                                <amexio-badge [absolute]="true" [background]="\'red\'" [color]="\'white\'" [top]="\'0px\'" [right]="\'0px\'">\n                                    <amexio-label size="red">Non-Veg</amexio-label>\n                                </amexio-badge>\n\n                                <amexio-header-ce [border-bottom]="true" [align]="\'space-between\'">\n                                    <amexio-label size="medium-bold">Burger lovers</amexio-label>\n                                    <amexio-image [icon-class]="\'fa fa-phone fa-1x\'" [tooltip]="\'Phone\'"></amexio-image>\n                                </amexio-header-ce>\n                                <amexio-body-ce>\n                                    <amexio-label>Tonight\'s availability</amexio-label> <br />\n                                    <amexio-chips *ngFor="let item of [\'07:00\', \'08:00\', \'09:00\', \'11:00\']">\n                                        <amexio-chip [label]="item" [color]="item.color"> </amexio-chip>\n                                    </amexio-chips>\n                                </amexio-body-ce>\n                            </amexio-card-ce>\n\n                        </amexio-column>\n                        <amexio-column size="6">\n                            <amexio-card-ce>\n                                <amexio-header-ce>\n                                    <amexio-image width="50px" height="50px" [filter]="\'round\'" path="https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/022014/triumph_motorcycles_2013.jpg?itok=rysgr_NR"></amexio-image>\n                                    <amexio-label size="medium-bold">Triumph Bonneville T120 </amexio-label>\n                                </amexio-header-ce>\n                                <amexio-image width="100%" path="http://imagesvc.timeincapp.com/v3/foundry/image/?q=70&w=1440&url=https%3A%2F%2Ftimedotcom.files.wordpress.com%2F2018%2F12%2F3201_spt_2019_20191540_original-2.jpg%3Fquality%3D85"></amexio-image>\n                                <amexio-badge amexioThemeStyle [theme-style]="\'round-edge\'" [absolute]="true" [background]="\'#e74c3c\'" [color]="\'white\'" [top]="\'6%\'" [right]="\'5%\'">\n                                    <amexio-label size="large">2019</amexio-label>\n                                    <amexio-label>Jan</amexio-label>\n                                </amexio-badge>\n\n                                <amexio-body-ce>\n                                    <p>\n                                        It accomplishes that goal with unique finishes and a limited production run. Let\u2019s take a look at what makes the 2019 Triumph Bonneville T120 Diamond Edition a special motorcycle.\n                                    </p>\n                                </amexio-body-ce>\n                                <amexio-action-ce>\n                                    <amexio-button [label]="\'BUY\'" [type]="\'transparent\'" [tooltip]="\'BUY\'">\n                                    </amexio-button>\n                                    <amexio-button [label]="\'SELL\'" [type]="\'transparent\'" [tooltip]="\'SELL\'">\n                                    </amexio-button>\n                                </amexio-action-ce>\n                            </amexio-card-ce>\n                        </amexio-column>\n                    </amexio-row>\n                </amexio-body>\n            </amexio-card>\n        </amexio-column>\n    </amexio-row>\n    </amexio-api-demo>\n    </amexio-api-structure>'},MKDr:function(e,o){e.exports='\n \n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/checkboxgroup.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Checkbox is WAI ARIA-accessible through the Tab key.</p>\n      <p>Role: Checkbox - Indicates that the element serves as checkbox.\n        The aria-checked attribute is goverend by dynamic value of checkbox.It consist of id and for which allows\n        screen reader to loud the checkbox enabled or disabled when focus comes to input.\n      </p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Vertical Checkbox With Http Url\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox-group [field-label]="\'Vertical Checkbox\'" name="language"\n                                   [data-reader]="\'data\'"\n                                   [display-field]="\'language\'"\n                                   [value-field]="\'checked\'"\n                                   [http-method]="\'get\'"\n                                   [http-url]="\'assets/data/componentdata/checkgroup.json\'">\n            </amexio-checkbox-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Checkbox\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox-group [field-label]="\'Horizontal Checkbox\'" name="language"\n                                   [data-reader]="\'response.data\'"\n                                   [display-field]="\'language\'"\n                                   [horizontal]="true"\n                                   [value-field]="\'checked\'"\n                                   (onSelection)="selectedCheckboxgroup($event)"\n                                   [data]="checkboxGroupdata">\n            </amexio-checkbox-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Checkbox with disabled single item.\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox-group [field-label]="\'Horizontal Checkbox\'" name="language"\n                                   [data-reader]="\'response.data\'"\n                                   [display-field]="\'language\'"\n                                   [horizontal]="true"\n                                   [value-field]="\'checked\'"\n                                   [data]="checkboxGroupdatadisabled">\n            </amexio-checkbox-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Horizontal Checkbox with disabled all item.\n          </amexio-header>\n          <amexio-body>\n            <amexio-checkbox-group [field-label]="\'Horizontal Checkbox with disable\'" name="language"\n                                   [data-reader]="\'response.data\'"\n                                   [display-field]="\'language\'"\n                                   [horizontal]="true"\n                                   name="disabledcheckbox"\n                                   [disabled]="true"\n                                   [value-field]="\'checked\'"\n                                   [data]="checkboxGroupdatadisabledallitem">\n            </amexio-checkbox-group>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},OSzs:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/multipledatepicker.json\'">\n    <amexio-api-accessible>\n        <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n            <p>The Date/Time Picker is WAI ARIA-accessible through the tab key and implementation of keyboard navigation for its\n                component and is tested against the popular screen readers</p>\n            <p> Role:button-The button role is defined for button used in Date/Time picker and correspondingly have\n                aria-pressed attribute.</p>\n            <p> The attributes used in this are aria-label static and dynamic,dynamic for navigation of focus.</p>\n        </amexio-box>\n    </amexio-api-accessible>\n    <amexio-api-demo>\n        <amexio-row>\n            <amexio-column [size]="12" >\n                <amexio-card [height]="\'340\'" [header]="true" [footer]="false" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Multiple Date picker\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="4">\n                                \x3c!-- ---1--- --\x3e\n                                <amexio-multiple-date-picker \n                                [fromlabel] = "\'Departure\'"\n                                [tolabel] = "\'Return\'"\n                                [number-of-months] ="2"\n                                [min-date]="\'22-Jan-2019\'"\n                                [max-date]="\'25-Sep-2019\'">\n                                </amexio-multiple-date-picker>\n\n                            </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                    \x3c!-- <amexio-action>\n                        {{currentDate}}\n                    </amexio-action> --\x3e\n                </amexio-card>\n\n            </amexio-column>\n \n        </amexio-row>\n      \n    </amexio-api-demo>\n</amexio-api-structure>'},REX1:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/datetimepicker.json\'">\n    <amexio-api-accessible>\n        <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n            <p>The Date/Time Picker is WAI ARIA-accessible through the tab key and implementation of keyboard navigation for its\n                component and is tested against the popular screen readers</p>\n            <p> Role:button-The button role is defined for button used in Date/Time picker and correspondingly have\n                aria-pressed attribute.</p>\n            <p> The attributes used in this are aria-label static and dynamic,dynamic for navigation of focus.</p>\n        </amexio-box>\n    </amexio-api-accessible>\n    <amexio-api-demo>\n        <amexio-row>\n            <amexio-column [size]="6">\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Inline Date Picker with min,max and disabled date\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n                                \x3c!-- ---1--- --\x3e\n                                <amexio-date-time-picker  [inline-datepicker]="true" [field-label]="\'Date Of Birth\'"\n                                    [time-picker]="false" [date-picker]="true" [min-date]="\'22-Mar-2016\'" [max-date]="\'22-Feb-2019\'"\n                                    [disabled-date]="disabledDate" [(ngModel)]="currentDate1">\n                                </amexio-date-time-picker>\n\n\n\n\n\n                            </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                    <amexio-action>\n                        {{currentDate1}}\n                    </amexio-action>\n                </amexio-card>\n\n            </amexio-column>\n            <amexio-column [size]="6">\n                \x3c!-- -2- --\x3e\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Time Picker\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n                                <amexio-date-time-picker [field-label]="\'Time Of Birth\'" [time-picker]="true"\n                                    [date-picker]="false" [min-date]="\'Thu Jul 25 2017 00:00:00 GMT+0530 (IST)\'"\n                                    [ngModel]="time" (change)="onChangeTime($event)">\n                                </amexio-date-time-picker>\n                            </amexio-column>\n                        </amexio-row>\n                    </amexio-body>\n                    <amexio-action>\n                        {{time}}\n                    </amexio-action>\n                </amexio-card>\n\n            </amexio-column>\n\n        </amexio-row>\n        <amexio-row>\n            <amexio-column [size]="\'6\'">\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Date Picker with min,max date\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n                                \x3c!-- --3-- --\x3e\n\n                                <amexio-date-time-picker [field-label]="\'Date Of Birth\'" [place-holder]="\'Date Of Birth\'"\n                                    [time-picker]="false" [date-picker]="true" [min-date]="\'22-Mar-2016\'" [max-date]="\'22-Feb-2019\'"\n                                    [(ngModel)]="currentDate">\n                                </amexio-date-time-picker>\n\n\n\n\n                            </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                    <amexio-action>\n                        {{currentDate}}\n                    </amexio-action>\n                </amexio-card>\n            </amexio-column>\n            \x3c!-- ------4---------- --\x3e\n            <amexio-column [size]="\'6\'">\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n                    <amexio-header>\n                        Date Picker with Year dropdown and disabled date\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="12">\n\n                                <amexio-date-time-picker [dropdown-datepicker]="true" [field-label]="\'Date Of Birth\'"\n                                    [time-picker]="false" [date-picker]="true" [disabled-date]="disabledDate"\n                                    [(ngModel)]="currentDate2">\n                                </amexio-date-time-picker>\n                            </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                    <amexio-action>\n                        {{currentDate2}}\n                    </amexio-action>\n                </amexio-card>\n            </amexio-column>\n        </amexio-row>\n    </amexio-api-demo>\n</amexio-api-structure>'},RGbX:function(e,o){e.exports='\n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/email.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Email is WAI ARIA-accessible through the Tab key.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic Email Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-email-input [field-label]="\'Email Id\'" name ="email"\n                                [place-holder]="\'Enter Email Id\'"\n                                [allow-blank]="false" [error-msg] ="\'Please Enter Email Id\'"\n                                [enable-popover]="true"\n                                [icon-feedback]="true">\n            </amexio-email-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Email Input With Disable\n          </amexio-header>\n          <amexio-body>\n            <amexio-email-input name ="email" [field-label]="\'Email Id\'"\n                                [place-holder]="\'Enter Email Id\'"\n                                [disabled]="true">\n            </amexio-email-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Email Input Font Style\n          </amexio-header>\n          <amexio-body>\n            <amexio-email-input [field-label]="\'Email Id\'" name ="email"\n                                [place-holder]="\'Enter Email Id\'"\n                                [icon-feedback]="true"\n                                [font-style]="\'italic\'">\n            </amexio-email-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Font Family\n          </amexio-header>\n          <amexio-body>\n            <amexio-email-input name ="email" [field-label]="\'Email Id\'"\n                                [place-holder]="\'Enter Email Id\'"\n                                [font-family]="\'Times New Roman\'"\n                                [font-size]="\'large\'">\n            </amexio-email-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},RUvJ:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/toggle.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Toogle is WAI ARIA-accessible through the Tab key.</p>\n      <p>Role:Switch-The swtich role defines its type.It consist of aria-labelledby and aria-checked</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column [size]="6" [fit]="true">\n        <amexio-card [header]="true" [header-align]="\'left\'">\n          <amexio-header>\n            Toggle Button With Type 1\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="4" fit="false">\n                <amexio-label>\n                  Small Toggle Button with shape\n                </amexio-label>\n                <amexio-toggle [size]="\'small\'" [type]="1" shape="square">\n                </amexio-toggle>\n                <br>\n                <amexio-toggle [size]="\'small\'" [type]="1">\n                </amexio-toggle>\n\n              </amexio-column>\n              <amexio-column size="4" fit="false">\n                <amexio-label>\n                  Medium Toggle Button with shape\n                </amexio-label>\n                <amexio-toggle [size]="\'medium\'" [type]="1" shape="square">\n                </amexio-toggle>\n                <br>\n                <amexio-toggle [size]="\'medium\'" [type]="1">\n                </amexio-toggle>\n\n              </amexio-column>\n              <amexio-column size="4" fit="false">\n                <amexio-label>\n                  Large Toggle Button with shape\n                </amexio-label>\n                <amexio-toggle [size]="\'large\'" shape="square">\n                </amexio-toggle>\n                <br>\n                <amexio-toggle [size]="\'large\'">\n                </amexio-toggle>\n                <br>\n\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6" [fit]="true">\n          <amexio-card [header]="true" [header-align]="\'left\'">\n              <amexio-header>\n                Toggle Button With Type 2\n              </amexio-header>\n              <amexio-body>\n                <amexio-row>\n                  <amexio-column size="4" fit="false">\n                    <amexio-label>\n                      Small Toggle Button with shape\n                    </amexio-label><br><br>\n                    <amexio-toggle [size]="\'small\'" [type]="2" shape="square">\n                    </amexio-toggle>\n                    <br><br>\n                    <amexio-toggle [size]="\'small\'" [type]="2">\n                    </amexio-toggle>\n    \n                  </amexio-column>\n                  <amexio-column size="4" fit="false">\n                    <amexio-label>\n                      Medium Toggle Button with shape\n                    </amexio-label><br><br>\n                    <amexio-toggle [size]="\'medium\'" [type]="2" shape="square">\n                    </amexio-toggle>\n                    <br><br>\n                    <amexio-toggle [size]="\'medium\'" [type]="2">\n                    </amexio-toggle>\n    \n                  </amexio-column>\n                  <amexio-column size="4" fit="false">\n                    <amexio-label>\n                      Large Toggle Button with shape\n                    </amexio-label><br><br>\n                    <amexio-toggle [size]="\'large\'" [type]="2" shape="square">\n                    </amexio-toggle>\n                    <br><br>\n                    <amexio-toggle [size]="\'large\'" [type]="2">\n                    </amexio-toggle>\n                    <br>\n    \n                  </amexio-column>\n                </amexio-row>\n              </amexio-body>\n    \n            </amexio-card>\n        \x3c!-- <amexio-card [header]="true" [header-align]="\'left\'">\n          <amexio-header>\n              Toggle Button With Type 2\n          </amexio-header>\n          <amexio-body>\n              <amexio-row>\n                  <amexio-column size="4" fit="false">\n                      <amexio-label>\n                          Small Toggle Button with shape\n                      </amexio-label>\n                      <br>\n                      <amexio-toggle [size]="\'small\'" [type]="2" shape="square">\n                      </amexio-toggle>\n                      <br>\n                      <amexio-toggle [size]="\'small\'" [type]="2">\n                      </amexio-toggle>\n                      <br>\n                  </amexio-column>\n                  <amexio-column size="4" fit="false">\n                      <amexio-label>\n                          Medium Toggle Button with shape\n                      </amexio-label>\n                      <br>\n                      <amexio-toggle [size]="\'medium\'" [type]="2" shape="square">\n                      </amexio-toggle>\n                      <br>\n                      <amexio-toggle [size]="\'medium\'" [type]="2">\n                      </amexio-toggle>\n                      <br>\n                  </amexio-column>\n                  <amexio-column size="4" fit="false">\n                      <amexio-label>\n                          Large Toggle Button with shape\n                      </amexio-label>\n                      <br>\n                      <amexio-toggle [size]="\'large\'" [type]="2" shape="square">\n                      </amexio-toggle>\n                      <br>\n                      <amexio-toggle [size]="\'large\'" [type]="2">\n                      </amexio-toggle>\n                      <br>\n      \n                  </amexio-column>\n              </amexio-row>\n          </amexio-body>\n      \n      </amexio-card> --\x3e\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n\n\n<amexio-notification [data]="toggleMsgArray" [vertical-position]="\'top\'" [horizontal-position]="\'right\'"></amexio-notification>'},RcL4:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/textarea.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Textarea is WAI ARIA-accessible through the Tab key.</p>\n      <p>Role:Textarea-The textarea role defines its type.It consist of aria-autocomplete and aria-expanded.</p>\n      <p>Role:Text-The text role defines its type.It consist of aria-labelledby and aria-describedby.</p>\n      <p>Role:Tooltip-The tooltip role defines message as its type.It consist of dynamic id.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card header="true">\n          <amexio-header>\n            Basic TextArea Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-textarea-input [enable-popover]="true" [field-label]="\'Textarea Input\'" name="Address"\n              [place-holder]="\'permanent Address\'" [allow-blank]="false" [error-msg]="\'Please enter Address\'"\n              [icon-feedback]="true" [rows]="\'4\'" [columns]="\'2\'">\n            </amexio-textarea-input>\n\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            TextArea Input with rows 7 and columns 4\n          </amexio-header>\n          <amexio-body>\n            \x3c!--TextArea Input with rows 7 and columns 4--\x3e\n\n            <amexio-textarea-input [field-label]="\'Textarea Input\'" name="Address" [place-holder]="\'permanent Address\'"\n              [allow-blank]="true" [error-msg]="\'Please enter Address\'" [icon-feedback]="true" [rows]="\'7\'" [columns]="\'4\'">\n            </amexio-textarea-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},SL4k:function(e,o){e.exports='\n <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forminputs/dropdown.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Dropdown is WAI ARIA-accessible through the Tab key.</p>\n      <p> Role:Combobox-The Combobox role is defined for Input when first tabs over input.This consist of attribute\n        consist of aria-complete,aria-expanded,and aria-activedescendant.</p>\n      <p> Role:Listbox-The Listbox role for list in a dropdown which has attribute aria-expanded</p>\n      <p> Role:Option- The Option role for individual element in list which has attribute aria-labelleby and dynamic id\n        is set which accordingily moves the focus.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n<amexio-row>\n    <amexio-column size="6">\n      <amexio-card header="true">\n        <amexio-header>\n           Dropdown Multi Select Component \n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-dropdown\n                [place-holder]="\'Choose\'"\n                [field-label]="\'Choose Fruit\'"\n                [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/fruits.json\'"\n                [display-field]="\'fruitName\'" [value-field]="\'code\'"\n                [data-reader]="\'data\'"\n                [multi-select]="true"\n                (onMultiSelect)="onMultiSelectValue($event)"\n                [enable-sort]="true"\n                [sort]="\'asc\'"\n              >\n              </amexio-dropdown>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column [size]="6">\n      <amexio-card header="true">\n        <amexio-header>\n          Selected Record Data\n        </amexio-header>\n        <amexio-body>\n          <ng-container *ngIf="listOfFriut">\n            {{listOfFriut|json}}\n          </ng-container>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n\n  </amexio-api-demo>\n  </amexio-api-structure>'},SpD7:function(e,o){e.exports='\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/label.json\'">\n    <amexio-api-accessible>\n        <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n          <p>The Label is WAI ARIA-accessible through the Tab key.</p>\n          <p>Role:text-The text role defines text aria to be read on tab navigation.</p>\n        </amexio-box>\n      </amexio-api-accessible>\n    <amexio-api-demo>\n        <h2>Label Component</h2>\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-label size="large">This is large amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label  size="large-bold">This is large-bold amexio label </amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="medium-bold">This is medium-bold amexio label</amexio-label>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-label>This is small amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="small-bold">This is small-bold amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="medium-bold" font-color="#FF5733">This is amexio label</amexio-label>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <h2>Label Component With Badges </h2>\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-label size="large" [badge]="1">This is large amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="large-bold" [badge]="2">This is large-bold amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="medium-bold" [badge]="3">This is medium-bold amexio label</amexio-label>\n            </amexio-column>\n        </amexio-row>\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-label size="small" [badge]="3">This is small amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="small-bold" [badge]="2">This is small-bold amexio label</amexio-label>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-label size="medium-bold" font-color="#FF5733" [badge]="5">This is medium-bold amexio\n                    label</amexio-label>\n            </amexio-column>\n        </amexio-row>\n        <h2>Box Component</h2>\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-box border-color="red" border="top" padding="true" closable="\'true\'">\n                    <amexio-label>This is small-bold amexio label with red border</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border-color="blue" border="bottom" padding="true">\n                    <amexio-label>This is small-bold amexio label with blue border</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border-color="yellow" border="right" padding="true">\n                    <amexio-label>This is small-bold amexio label with yellow border</amexio-label>\n                </amexio-box>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-box border-color="green" border="left" padding="true">\n                    <amexio-label>This is small-bold amexio label with green border</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box background-color="purple" padding="true">\n                    <amexio-label>This is small-bold amexio label with purple bg color</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box background-color="yellow" padding="true">\n                    <amexio-label>This is small-bold amexio label with background-color yellow</amexio-label>\n                </amexio-box>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <amexio-row>\n            <amexio-column [size]="4">\n                <amexio-box background-color="red" padding="true">\n                    <amexio-label>This is small-bold amexio label with background-color red</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box background-color="blue" padding="true">\n                    <amexio-label>This is small-bold amexio label with background-color blue</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border-color="green" border="bottom" padding="true" background-color="yellow">\n                    <amexio-label>This is small-bold amexio label with background-color green</amexio-label>\n                </amexio-box>\n            </amexio-column>\n        </amexio-row>\n        <br />\n        <amexio-row>\n\n            <amexio-column [size]="4">\n                <amexio-box border-color="brown" border="right-left" padding="true" background-color="brown">\n                    <amexio-label>This is small-bold amexio label with background-color</amexio-label>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border-color="purple" border="all" padding="true" background-color="purple" box-height="100px"\n                    box-width="282px">\n                    <amexio-text-input field-label="Aadhar No" name="name" place-holder="Enter aadhar card no"\n                        icon-feedback="true">\n                    </amexio-text-input>\n                </amexio-box>\n            </amexio-column>\n            <amexio-column [size]="4">\n                <amexio-box border="top-bottom" padding="true">\n                    <amexio-label>This is small-bold amexio label with background-color</amexio-label>\n                </amexio-box>\n            </amexio-column>\n        </amexio-row>\n\n    </amexio-api-demo>\n\n</amexio-api-structure>\n'},SsRe:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/slider.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Slider is WAI ARIA-accessible through the Tab key.And the best practices for implementing the keyboard\n        navigation for its component role and is tested against the popular screen readers.</p>\n      <p>Role:Slider-The slider role defines slider as its type.It consist of aria-valuenow,aria-valuemin,aria-valuemax\n        and aria-labelledby.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Simple Slider\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column [size]="6" [fit]="true">\n                <amexio-slider [(ngModel)]="stepVal1"></amexio-slider>\n                {{stepVal1}}\n              </amexio-column>\n              <amexio-column [size]="6">\n                <amexio-slider disabled="true" min-value="0" max-value="50" [step-value]="2" [(ngModel)]="stepVal2"></amexio-slider>\n                {{stepVal2}}\n              </amexio-column>\n            </amexio-row>\n            <amexio-row>\n              <amexio-column size="12">\n                <b>Vertical Slider</b>\n                <amexio-slider [style]="{\'height\':\'200px\'}" orientation="vertical"></amexio-slider>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6" [fit]="true">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Slider With Type 2\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column [size]="6">\n                <amexio-slider [type]="2" min-value="0" max-value="50" [step-value]="2" [(ngModel)]="stepVal3"></amexio-slider>\n                <br>\n                {{stepVal3}}\n              </amexio-column>\n          <amexio-column [size]="1"></amexio-column>\n              <amexio-column size="5">\n                <br>\n                <amexio-slider [type]="2" [style]="{\'height\':\'150px\'}" orientation="vertical"></amexio-slider>\n                <b>Vertical Slider</b>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n\n\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},"VI+7":function(e,o,a){"use strict";a.r(o);var n=a("CcnG"),i=a("O4vx"),t=a("gIcY"),r=a("Ip0R"),m=a("t/Na"),l=a("d2mR"),c=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},d=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},s=function(){function e(){this.check=!1,this.checkWithDisable=!0}return e.prototype.onCheckClick=function(e){},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=c([Object(n.n)({selector:"singlecheckbox-demo",template:a("0qVq")}),d("design:paramtypes",[])],e)}(),p=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},u=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},x=function(){function e(){this.checkboxGroupdata={response:{data:[{language:"Angular 2",checked:!1,disabled:!1},{language:"JAVA",checked:!0,disabled:!1},{language:"C++",checked:!1,disabled:!1}]}},this.checkboxGroupdatadisabled={response:{data:[{language:"Angular 2",checked:!1,disabled:!1},{language:"JAVA",checked:!0,disabled:!0},{language:"C++",checked:!1,disabled:!1}]}},this.checkboxGroupdatadisabledallitem={response:{data:[{language:"Angular 2",checked:!1},{language:"JAVA",checked:!0},{language:"C++",checked:!1}]}}}return e.prototype.selectedCheckboxgroup=function(e){},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=p([Object(n.n)({selector:"checkboxgroup-demo",template:a("MKDr")}),u("design:paramtypes",[])],e)}(),h=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},f=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},b=function(){function e(){this.sampledatachips=[{icon:"fa fa-home",label:"Home",color:"turquoise",badge:4,closable:!0},{icon:"fa fa-download",label:"Download",color:"lightblue",badge:5,closable:!1},{icon:"fa fa-camera",label:"Camera",color:"lightgreen",badge:6,closable:!0},{icon:"fa fa-fire-extinguisher",label:"Fire Extinguisher",color:"yellow",badge:7,closable:!0},{icon:"fa fa-ambulance",label:"Emergency",color:"pink",badge:8,closable:!0}],this.sampledatachip=[{icon:"fa fa-linkedin-square",label:"Linkedin",color:"pink",badge:4,closable:!0},{icon:"fa fa-internet-explorer",label:"Internet-Explorer",color:"lightblue",badge:5,closable:!1},{icon:"fa fa-github",label:"Github",color:"lightgreen",badge:6,closable:!0},{icon:"fa fa-twitter",label:"Twitter",color:"lightblue",badge:7,closable:!0},{icon:"fa fa-reddit",label:"Reddit",color:"",badge:8,closable:!0}]}return e.prototype.onChipDataLabelClick=function(e){this.emitdatachips=e},e.prototype.onChipDataCloseClick=function(e){this.emitdatachips=e},e.prototype.onChipsLabelClick=function(e){this.multipleemitchips=e},e.prototype.onCloseClick=function(e){this.multipleemitchips=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=h([Object(n.n)({selector:"chips-demo",template:a("w1fk")}),f("design:paramtypes",[])],e)}(),g=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},y=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},w=function(){function e(){this.creditcard=new i.b}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=g([Object(n.n)({selector:"credit-card-demo",template:a("jVkV")}),y("design:paramtypes",[])],e)}(),k=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},R=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},C=function(){function e(){this.date=new Date("March 21, 2018 01:15:00"),this.disabledDate=[{from:"13-Jul-2018",to:"15-Jul-2018"},{from:"20-Jul-2018",to:"23-Jul-2018"},{from:"15-Jun-2018",to:"19-Jun-2018"},{from:"27-Jun-2018",to:"29-Jun-2018"},{from:"23-Aug-2018",to:"28-Aug-2018"},{from:"17-Aug-2018",to:"19-Aug-2018"},{from:"19-Sep-2018",to:"21-Sep-2018"},{from:"25-Sep-2018",to:"28-Sep-2018"}]}return e.prototype.onChangeTime=function(e){this.time=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=k([Object(n.n)({selector:"date-picker-demo",template:a("REX1")}),R("design:paramtypes",[])],e)}(),j=a("f4zW"),v=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},A=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},z=function(){function e(){this.customSourceData=new j.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Dropdown",this.customSourceData.description="Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.",this.customSourceData.sourceMetadata.htmlUrl="forms/dropdown/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/dropdown/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.sourceMetadata.datasourceUrl1="assets/data/componentdata/personProfile.json",this.customSourceData.sourceMetadata.datasourceUrl2="assets/data/componentdata/fruits.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dropdown-basic?embed=1&file=app/forms/dropdown/dropdown.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=v([Object(n.n)({selector:"dropdownbasic",template:a("79yA")}),A("design:paramtypes",[])],e)}(),M=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},T=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},D=function(){function e(e){this.http=e,this.customSourceData=new j.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Dropdown Filter ",this.customSourceData.description="Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.",this.customSourceData.sourceMetadata.htmlUrl="forms/dropdownfilter/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/dropdownfilter/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dropdown-filter?embed=1&file=app/forms/dropdownfilter/dropdownfilter.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=M([Object(n.n)({selector:"dropdownfilter",template:a("du5V")}),T("design:paramtypes",[m.a])],e)}(),O=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},I=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},S=function(){function e(e){this.http=e,this.listOfFriut=[],this.customSourceData=new j.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Dropdown Multi Select ",this.customSourceData.description="Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.",this.customSourceData.sourceMetadata.htmlUrl="forms/dropdownmulti/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/dropdownmulti/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/fruits.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dropdown-multiselect?embed=1&file=app/forms/dropdownmulti/dropdownmulti.demo.html&view=editor"},e.prototype.onMultiSelectValue=function(e){var o=this;this.listOfFriut=[],e.forEach(function(e){o.listOfFriut.push(e)})},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=O([Object(n.n)({selector:"dropdownmulti",template:a("SL4k")}),I("design:paramtypes",[m.a])],e)}(),P=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},L=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},F=function(){function e(e){this.http=e,this.customSourceData=new j.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Dropdown With Template ",this.customSourceData.description="Drop-Down component has been created to render N numbers of drop-down items based on data-set configured with template. Data-set can be configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes for enabling filter, multi-select, maximum selection in case of multi select.",this.customSourceData.sourceMetadata.htmlUrl="forms/dropdowntemplate/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/dropdowntemplate/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/gridtemplate.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dropdown-template?embed=1&file=app/forms/dropdown/dropdown.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getRowData=function(e){this.clickedRowData=e},e=P([Object(n.n)({selector:"dropdowntemplate",template:a("310c")}),L("design:paramtypes",[m.a])],e)}(),V=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},E=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},N=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=V([Object(n.n)({selector:"email-demo",template:a("RGbX")}),E("design:paramtypes",[])],e)}(),W=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},q=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},U=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=W([Object(n.n)({selector:"fileupload-demo",template:a("HVHI")}),q("design:paramtypes",[])],e)}(),B=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},H=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},G=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=B([Object(n.n)({selector:"label-demo",template:a("SpD7")}),H("design:paramtypes",[])],e)}(),J=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},$=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},_=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=J([Object(n.n)({selector:"number-demo",template:a("Jrhs")}),$("design:paramtypes",[])],e)}(),Y=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},X=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Z=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Y([Object(n.n)({selector:"password-demo",template:a("I72g")}),X("design:paramtypes",[])],e)}(),K=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Q=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ee=function(){function e(){this.model1="male",this.model2="female",this.model3="male1",this.model4="female",this.radioGroupData={response:{data:[{gender:"Male",genderId:"male"},{gender:"Female",genderId:"female"}]}}}return e.prototype.setSelectedGender=function(e){},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=K([Object(n.n)({selector:"radiogroup-demo",template:a("JftQ")}),Q("design:paramtypes",[])],e)}(),oe=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},ae=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ne=function(){function e(){this.max=10,this.rate=7,this.profileMaxRate=5,this.customIconRate=10,this.customRate=5,this.profileRate=2,this.disableProfileRate=3,this.disableProfileMaxRate=5,this.isReadonly=!1,this.titles=["Poor","Fair","Average","Good","Excellent"]}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=oe([Object(n.n)({selector:"rating-demo",template:a("n8uM")}),ae("design:paramtypes",[])],e)}(),ie=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},te=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},re=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.onSuccess=function(e){this.response=e},e.prototype.onFailure=function(e){this.response=e},e=ie([Object(n.n)({selector:"recaptcha-demo",template:a("VcZQ")}),te("design:paramtypes",[])],e)}(),me=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},le=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ce=function(){function e(e){this.element=e,this.subject="",this.from="",this.to="",this.bindData=[],this.localData=[{from:"araf.karsh@metamagic.in",subject:"amexio release plans",to:"ketan.gote@metamagic.in"},{from:"araf.karsh@metamagic.in",subject:"visual studio extension",to:"engineering@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"amexio on angular.io",to:"engineering@metamagic.in "},{from:"deepali.arvind@metamagic.in",subject:"amexio npm download spike",to:"ketan.gote@metamagic.in"},{from:"dattaram.gawas@metamagic.in ",subject:"building web components",to:"ketan.gote@metamagic.in"},{from:"sagar.jadhav@metamagic.in",subject:"showcase app url",to:"deepali.arvind@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"spring cloud stream demo",to:"deepali.arvind@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"spring microservice demo",to:"deepali.arvind@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"spring kafka integration",to:"sagar.jadhav@metamagic.in"},{from:"ankita.Jain@metamagic.in",subject:"jsr Implementation",to:"ketan.gote@metamagic.in"},{from:"mahesh.pardeshi@metamagic.in",subject:"axon cqrs demo",to:"ketan.gote@metamagic.in"},{from:"pratik.kelwalkar@metamagic.in",subject:"angular routing",to:"sagar.jadhav@metamagic.in"},{from:"dattaram.gawas@metamagic.in",subject:"angular pipes",to:"ashwini.agre@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"ribbon, hysterix",to:"dattaram.gawas@metamagic.in "},{from:"deepali.arvind@metamagic.in",subject:"eureka server using spring cloud",to:"ketan.gote@metamagic.in"},{from:"kedar.kokil@metamagic.in",subject:"rx java",to:"ashwini.agre@metamgic.in"},{from:"manisha.boddu@metamgic.in",subject:"spring + mongo db",to:"ketan.gote@metamagic.in"},{from:"araf.karsh@metamagic.in",subject:"flux / redux architecture",to:"ketan.gote@metamgic.in"},{from:"ketan.gote@metamagic.in",subject:"desire platform git repos",to:"rashmi.thakkar@metamagic.in"},{from:"ashwini.agre@metamagic.in",subject:"pwa from react to angular/ionic",to:"sagar.jadhav@metamagic.in"},{from:"rashmi.thakkar@metamagic.in",subject:"messages in platform",to:"ankita.jain@metamagic.in"},{from:"araf.karsh@metamagic.in",subject:"typeScript secret weapon...",to:"sagar.jadhav@metamagic.in"},{from:"araf.karsh@metamagic.in",subject:"visual studio code plugin",to:"sagar.jadhav@metamagic.in"},{from:"kedar.kokil@metamagic.in",subject:"hashing algo",to:"dattaram.gawas@metamagic.in "},{from:"sagar.jadhav@metamagic.in ",subject:"vs code for windows, linux and mac os",to:"dattaram.gawas@metamagic.in "},{from:"dattaram.gawas@metamagic.in",subject:"chart library - open source",to:"rashmi.thakkar@metamagic.in"},{from:"ankita.jain@metamagic.in",subject:"tdom uptos in angular",to:"manisha.boddu@metamagic.in"},{from:"dattaram.gawas@metamagic.in ",subject:"hampi release",to:"sagar.jadhav@metamagic.in"},{from:"manisha.boddu@metamagic.in",subject:"building web components",to:"ankita.jain@metamagic.in"},{from:"ketan.gote@metamagic.in",subject:"spring + redis ",to:"deepali.arvind@metamagic.in"},{from:"rashmi.thakkar@metamgic.in",subject:"amexio plans",to:"ketan.gote@metamagic.in"}],this.searchdata=this.localData}return e.prototype.filter=function(e){var o=this;this.bindData=[];var a=this.subject,n=this.to,i=this.from;""==a&&""==i&&""==n?this.bindData=this.searchdata:this.searchdata.forEach(function(e){a.length>0&&n.length>0&&o.contains(e.subject,a)&&o.contains(e.to,n)&&o.bindData.push(e),a.length>0&&i.length>0?o.contains(e.subject,a)&&o.contains(e.from,i)&&o.bindData.push(e):a.length>0&&o.contains(e.subject,a)?o.bindData.push(e):n.length>0&&o.contains(e.to,n)?o.bindData.push(e):i.length>0&&n.length>0?o.contains(e.from,i)&&o.contains(e.to,n)&&o.bindData.push(e):i.length>0?o.contains(e.from,i)&&o.bindData.push(e):a.length>0&&i.length>0&&n.length>0&&o.contains(e.from,i)&&o.contains(e.to,n)&&o.contains(e.subject,a)&&o.bindData.push(e)}),e.closeSearchForm()},e.prototype.contains=function(e,o){return(e+"").startsWith(o)},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.ngOnInit=function(){this.bindData=JSON.parse(JSON.stringify(this.localData))},e=me([Object(n.n)({selector:"searchbox-demo",template:a("0hgq")}),le("design:paramtypes",[n.u])],e)}(),de=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},se=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},pe=function(){function e(){this.stepVal1=10,this.stepVal2=20,this.stepVal3=20}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=de([Object(n.n)({selector:"slider-demo",template:a("SsRe")}),se("design:paramtypes",[])],e)}(),ue=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},xe=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},he=function(){function e(e){this.http=e}return e.prototype.onLoginClick=function(e){this.facebookLoginData=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=ue([Object(n.n)({selector:"facebook-login-demo",template:a("ppUx")}),xe("design:paramtypes",[m.a])],e)}(),fe=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},be=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ge=function(){function e(e){this.http=e}return e.prototype.onLoginClick=function(e){this.githubLoginData=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=fe([Object(n.n)({selector:"github-login-demo",template:a("WLYa")}),be("design:paramtypes",[m.a])],e)}(),ye=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},we=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ke=function(){function e(e){this.http=e}return e.prototype.onLoginClick=function(e){this.googleLoginData=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=ye([Object(n.n)({selector:"google-login-demo",template:a("74Hw")}),we("design:paramtypes",[m.a])],e)}(),Re=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Ce=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},je=function(){function e(e){this.http=e}return e.prototype.onLoginClick=function(e){this.linkedinLoginData=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Re([Object(n.n)({selector:"linkedin-login-demo",template:a("pbue")}),Ce("design:paramtypes",[m.a])],e)}(),ve=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Ae=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},ze=function(){function e(e){this.http=e,this.getHtmlAndTypeScriptCode()}return e.prototype.onRecordSelect=function(e){this.outputData=e},e.prototype.getHtmlAndTypeScriptCode=function(){var e,o,a,n=this;this.http.get("assets/data/code/forms/taginput/form.html",{responseType:"text"}).subscribe(function(o){e=o},function(e){},function(){n.htmlCode=e}),this.http.get("assets/data/code/forms/taginput/form.text",{responseType:"text"}).subscribe(function(e){o=e},function(e){},function(){n.typeScriptCode=o}),this.http.get("assets/data/componentdata/country.json",{responseType:"text"}).subscribe(function(e){a=e},function(e){},function(){n.dataSource=a})},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=ve([Object(n.n)({selector:"taginput-demo",template:a("s2mN")}),Ae("design:paramtypes",[m.a])],e)}(),Me=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Te=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},De=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Me([Object(n.n)({selector:"text-demo",template:a("KMof")}),Te("design:paramtypes",[])],e)}(),Oe=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Ie=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Se=function(){function e(){}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Oe([Object(n.n)({selector:"textarea-demo",template:a("RcL4")}),Ie("design:paramtypes",[])],e)}(),Pe=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Le=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Fe=function(){function e(){this.toggleMsgArray=[]}return e.prototype.onSquareToggleClick=function(e){this.toggleMsgArray.push("Square Toggle Click")},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Pe([Object(n.n)({selector:"toggle-demo",template:a("RUvJ")}),Le("design:paramtypes",[])],e)}(),Ve=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Ee=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Ne=function(){function e(){this.typeAHeadData={data:[{sportName:"Cricket",code:"Ck"},{sportName:"Swimming",code:"Sw"},{sportName:"Golf",code:"Glf"},{sportName:"Hockey",code:"Hky"},{sportName:"Soccer",code:"Scr"},{sportName:"Formula One",code:"F1"}]}}return e.prototype.onTypeheadClick=function(e){this.name=e.name},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Ve([Object(n.n)({selector:"typeahead-demo",template:a("3mc+")}),Ee("design:paramtypes",[])],e)}(),We=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},qe=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Ue=function(){function e(e){this.http=e}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=We([Object(n.n)({selector:"badge-demo",template:a("LVwy")}),qe("design:paramtypes",[m.a])],e)}(),Be=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},He=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Ge=function(){function e(){this.rangeValues=[20,80],this.rangeValues1=[25,75]}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Be([Object(n.n)({selector:"value-range",template:a("2cFu")}),He("design:paramtypes",[])],e)}(),Je=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},$e=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},_e=function(){function e(){this.date=new Date("March 21, 2018 01:15:00")}return e.prototype.onChangeTime=function(e){this.time=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Je([Object(n.n)({selector:"multidatepicker-demo",template:a("OSzs")}),$e("design:paramtypes",[])],e)}(),Ye=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Xe=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},Ze=function(){function e(){this.flag=!1}return e.prototype.getCurrentPosition=function(e){this.myLocation=e,console.log(this.myLocation)},e.prototype.onClick=function(){this.flag=!0},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Ye([Object(n.n)({selector:"geolocation-demo",template:a("FwYP")}),Xe("design:paramtypes",[])],e)}(),Ke=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},Qe=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},eo=function(){function e(){this.dialpadValue=""}return e.prototype.fun=function(e){},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=Ke([Object(n.n)({selector:"multirangedatepicker-demo",template:a("vdlq")}),Qe("design:paramtypes",[])],e)}(),oo=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},ao=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},no=function(){function e(){this.dialpadValue1="",this.dialpadValue2="",this.dialpadValue3="",this.dialpadValue4="",this.dialpadValue5=""}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=oo([Object(n.n)({selector:"dialpad-demo",template:a("9R6Z")}),ao("design:paramtypes",[])],e)}(),io=[{path:"singlecheckbox-demo",component:s},{path:"checkboxgroup-demo",component:x},{path:"chips-demo",component:b},{path:"credit-card-demo",component:w},{path:"date-picker-demo",component:C},{path:"dropdownbasic",component:z},{path:"dropdownfilter",component:D},{path:"dropdownmulti",component:S},{path:"dropdowntemplate",component:F},{path:"email-demo",component:N},{path:"fileupload-demo",component:U},{path:"label-demo",component:G},{path:"number-demo",component:_},{path:"password-demo",component:Z},{path:"radiogroup-demo",component:ee},{path:"rating-demo",component:ne},{path:"recaptcha-demo",component:re},{path:"searchbox-demo",component:ce},{path:"slider-demo",component:pe},{path:"facebook-login-demo",component:he},{path:"github-login-demo",component:ge},{path:"google-login-demo",component:ke},{path:"linkedin-login-demo",component:je},{path:"taginput-demo",component:ze},{path:"textinput",component:De},{path:"textarea-demo",component:Se},{path:"toggle-demo",component:Fe},{path:"typeahead-demo",component:Ne},{path:"badge-demo",component:Ue},{path:"value-range",component:Ge},{path:"multidatepicker-demo",component:_e},{path:"geolocation-demo",component:Ze},{path:"multirangedatepicker-demo",component:eo},{path:"dialpad-demo",component:no}],to=a("ZYCi");a.d(o,"FormsInputModule",function(){return mo});var ro=function(e,o,a,n){var i,t=arguments.length,r=t<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(i=e[m])&&(r=(t<3?i(r):t>3?i(o,a,r):i(o,a))||r);return t>3&&r&&Object.defineProperty(o,a,r),r},mo=function(){function e(){}return e=ro([Object(n.J)({declarations:[s,x,b,w,C,Ze,z,D,S,F,N,U,G,_,Z,ee,ne,re,ce,pe,he,ge,ke,je,ze,De,Se,Fe,Ne,Ue,Ge,_e,no,eo],imports:[r.b,t.d,m.b,l.a.forRoot(),i.j,to.e.forChild(io)],providers:[i.r]})],e)}()},VcZQ:function(e,o){e.exports='\n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/recaptcha.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column [size]="12">\n        <amexio-card [header]="true">\n          <amexio-header>Captcha Response data</amexio-header>\n          <amexio-body>\n            <amexio-google-recaptcha (onSuccess)="onSuccess($event)"\n                                     (onFailure)="onFailure($event)"\n                                     [site-key]="\'6LeZ5W8UAAAAAIHXZf35oYoUhpsICnJzqSxx3fpf\'">\n\n            </amexio-google-recaptcha>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>\n'},WLYa:function(e,o){e.exports='\n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/github.json\'">\n    <amexio-api-reference><amexio-box border-color="brown" border="left" padding="true" background-color="brown">\n            <amexio-label>\n              Make sure api-key is created before use this component refer github developer website to create key <a href="https://developer.github.com/v3/" target="_blank">GitHub Sign-In</a>\n              <br/><br/>\n            </amexio-label>\n          </amexio-box>\n    </amexio-api-reference>\n    <amexio-api-demo>\n  \n  <amexio-row>\n      <amexio-column size="4">\n        <amexio-card header="true" [body-height]="50">\n          <amexio-header>\n            Demo\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-login-social [api-key]="\'TbH8xzvcUUXSn1c7F9r39vkHFLc\'" [label]="\'Sign up with Github\'" [type]="\'github\'" (onLogin)="onLoginClick($event)">\n                </amexio-login-social>\n              </amexio-column>\n            </amexio-row>\n            <amexio-row>\n              <amexio-column size="12">\n                    <amexio-login-social [api-key]="\'TbH8xzvcUUXSn1c7F9r39vkHFLc\'" [style-type]="\'square\'"  [type]="\'github\'" (onLogin)="onLoginClick($event)">\n                        </amexio-login-social>\n              </amexio-column>\n            </amexio-row>\n            <amexio-row>\n              <amexio-column size="12">\n                    <amexio-login-social [api-key]="\'TbH8xzvcUUXSn1c7F9r39vkHFLc\'" [style-type]="\'circle\'"  [type]="\'github\'" (onLogin)="onLoginClick($event)">\n                        </amexio-login-social>\n              </amexio-column>\n            </amexio-row>\n  \n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="8">\n        <amexio-card header="true" [body-height]="50">\n          <amexio-header>\n            User Info After Login\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12" [fit]="true">\n                {{githubLoginData|json}}\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    </amexio-api-demo>\n    </amexio-api-structure>'},du5V:function(e,o){e.exports='\n\n \n<amexio-api-structure  [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forminputs/dropdown.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Dropdown is WAI ARIA-accessible through the Tab key.</p>\n      <p> Role:Combobox-The Combobox role is defined for Input when first tabs over input.This consist of attribute\n        consist of aria-complete,aria-expanded,and aria-activedescendant.</p>\n      <p> Role:Listbox-The Listbox role for list in a dropdown which has attribute aria-expanded</p>\n      <p> Role:Option- The Option role for individual element in list which has attribute aria-labelleby and dynamic id\n        is set which accordingily moves the focus.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n\n  <amexio-row>\n    <amexio-column size="6">\n      <amexio-card header="true">\n        <amexio-header>\n           Dropdown Filter Component \n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-dropdown [(ngModel)]="countryCode1"\n                               [place-holder]="\'Choose\'"\n                               name="countryCode1"\n                               [search]="true"\n                               [data-reader]="\'data\'"\n                               [field-label]="\'Choose Country\'"\n                               [http-url]="\'assets/data/componentdata/country.json\'"\n                               [http-method]="\'get\'"\n                               [display-field]="\'countryName\'"\n                               [value-field]="\'countryCode1\'"\n                               [enable-sort]="true"\n                               [sort]="\'asc\'">\n              </amexio-dropdown>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column [size]="6">\n      <amexio-card header="true">\n        <amexio-header>\n          Selected Record Data\n        </amexio-header>\n        <amexio-body>\n        <ng-container *ngIf="countryCode1">\n          {{countryCode1}}\n        </ng-container>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n\n  </amexio-api-demo>\n  </amexio-api-structure>'},jVkV:function(e,o){e.exports='\n<amexio-api-structure  [url]="\'assets/componentjson/forminputs/creditcard.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The CreditCard is WAI ARIA-accessible through the Tab key.</p>\n          </amexio-box>\n  </amexio-api-accessible>\n\n  <amexio-api-demo>\n    <amexio-card  header="true" show-error="true">\n      <amexio-header style="width:100%">\n        Credit Card\n      </amexio-header>\n      <amexio-body>\n        <amexio-row>\n          <amexio-column size="9">\n            <pre><code>{{creditcard|json}}</code></pre>\n\n            <h2>Credit Card with Model Binding, label and double column template</h2>\n            <amexio-creditcard [year-count]="4" [show-label]="true" [(ngModel)]="creditcard"></amexio-creditcard>\n            <br>\n            <h2>Credit Card with double column template and without Model Binding and label</h2>\n            <amexio-creditcard [show-label]="false" [year-count]="4"></amexio-creditcard>\n            <br>\n            <h2>Credit Card with single column template</h2>\n            <br>\n            <amexio-creditcard [template]="\'single-column\'" [year-count]="4"></amexio-creditcard>\n          </amexio-column>\n        </amexio-row>\n      </amexio-body>\n    </amexio-card>\n\n  </amexio-api-demo>\n</amexio-api-structure>\n'},n8uM:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/rating.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Rating is WAI ARIA-accessible through the Tab key.And the best practices for implementing the keyboard\n        navigation for its component role and is tested against the popular screen readers.</p>\n      <p>Role:Radiogroup-The radiogroup role defines radio as its type.It consist aria-labelledby which changes\n        according to the dynamic id.</p>\n      <p>Role:Radio-The radiogroup role defines radio as its type.It consist aria-checked which toogles by flag.</p>\n      <p>Role:Tooltip-The radiogroup role defines radio as its type.It consist aria-labelledby, and aria-required\n        aria-checked is set dynamically.</p>\n    </amexio-box>\n  </amexio-api-accessible>\n\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n          <amexio-header>\n            Sample Rating With Label\n          </amexio-header>\n          <amexio-body>\n            <amexio-rating-input [(ngModel)]="rate" [field-label]="\'Film Rating\'" [max]="max" name="rate" [float]="true"\n              [read-only]="isReadonly">\n            </amexio-rating-input>\n          </amexio-body>\n          <amexio-action>\n            Rating : {{rate}}\n          </amexio-action>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column [size]="6">\n        <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n          <amexio-header>\n            Rating With Rate Titles\n          </amexio-header>\n          <amexio-body>\n            <amexio-rating-input [(ngModel)]="profileRate" [max]="profileMaxRate" name="profileRate" [titles]="titles"\n              [read-only]="isReadonly">\n            </amexio-rating-input>\n          </amexio-body>\n          <amexio-action>\n            Rating : {{profileRate}}\n          </amexio-action>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true" [footer]="true" [footer-align]="\'center\'">\n          <amexio-header>\n            Custom Rating Icons\n          </amexio-header>\n          <amexio-body>\n            <amexio-rating-input [(ngModel)]="customRate" [full-icon]="\'\u2611\'" [empty-icon]="\'\u2610\'" [max]="customIconRate"\n              name="customRate" [float]="true" [read-only]="isReadonly">\n            </amexio-rating-input>\n          </amexio-body>\n          <amexio-action>\n            Rating : {{customRate}}\n          </amexio-action>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Rating With Read Only\n          </amexio-header>\n          <amexio-body>\n            \x3c!--Read only Rating--\x3e\n            <amexio-rating-input [field-label]="\'Profile Rating\'" [(ngModel)]="disableProfileRate" [max]="disableProfileMaxRate"\n              [read-only]="true">\n            </amexio-rating-input>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},pbue:function(e,o){e.exports=' \n \n\n<amexio-api-structure [url]="\'assets/componentjson/forminputs/linkedln.json\'">\n  <amexio-api-reference><amexio-box border-color="brown" border="left" padding="true" background-color="brown">\n          <amexio-label>\n            Make sure api-key is created before use this component.refer Linkedin developer webside to create key <a href="https://developer.linkedin.com/docs/signin-with-linkedin" target="_blank">Linkedin Sign-In</a>\n            <br/><br/>\n          </amexio-label>\n        </amexio-box>\n  </amexio-api-reference>\n  <amexio-api-demo>\n <amexio-row>\n    <amexio-column size="4">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          Demo\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [label]="\'Signup With Linkedin\'" [api-key]="\'8110cgvg7wbie7\'" [type]="\'linkedin\'"\n                (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'square\'" [api-key]="\'8110cgvg7wbie7\'" [type]="\'linkedin\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n          <amexio-row>\n            <amexio-column size="12">\n              <amexio-login-social [style-type]="\'circle\'" [api-key]="\'8110cgvg7wbie7\'" [type]="\'linkedin\'" (onLogin)="onLoginClick($event)"></amexio-login-social>\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n    <amexio-column size="8">\n      <amexio-card header="true" [body-height]="50">\n        <amexio-header>\n          User Info After Login\n        </amexio-header>\n        <amexio-body>\n          <amexio-row>\n            <amexio-column size="12" [fit]="true">\n              {{linkedinLoginData|json}}\n            </amexio-column>\n          </amexio-row>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n\n  </amexio-api-demo>\n  </amexio-api-structure>'},ppUx:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/facebook.json\'">\n  <amexio-api-reference>\n    <amexio-box border-color="brown" border="left" padding="true" background-color="brown">\n      <amexio-label>\n        Make sure api-key is created before use this component.refer Facebook developer webside to create key <a href="https://developers.facebook.com/apps"\n          target="_blank">Facebook Sign-In</a>\n        <br /><br />\n      </amexio-label>\n    </amexio-box>\n  </amexio-api-reference>\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="4">\n        <amexio-card header="true" [body-height]="50">\n          <amexio-header>\n            Demo\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-login-social [label]="\'Signup With Facebook\'" [api-key]="\'2203895509849807\'" [type]="\'facebook\'"\n                  (onLogin)="onLoginClick($event)"></amexio-login-social>\n              </amexio-column>\n            </amexio-row>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-login-social [style-type]="\'square\'" [api-key]="\'2203895509849807\'" [type]="\'facebook\'"\n                  (onLogin)="onLoginClick($event)"></amexio-login-social>\n              </amexio-column>\n            </amexio-row>\n            <amexio-row>\n              <amexio-column size="12">\n                <amexio-login-social [style-type]="\'circle\'" [api-key]="\'2203895509849807\'" [type]="\'facebook\'"\n                  (onLogin)="onLoginClick($event)"></amexio-login-social>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="8">\n        <amexio-card header="true" [body-height]="50">\n          <amexio-header>\n            User Info After Login\n          </amexio-header>\n          <amexio-body>\n            <amexio-row>\n              <amexio-column size="12" [fit]="true">\n                {{facebookLoginData|json}}\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'},s2mN:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/taginput.json\'">\n    <amexio-api-accessible>\n        <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n            <p>The Taginput is WAI ARIA-accessible through the Tab key.And the best practices for implementing the\n                keyboard navigation for its component role and is tested against the popular screen readers.</p>\n            <p>Role:Combobox-The combobox role defines its type.It consist of aria-expanded.</p>\n            <p>Role:List-The list role defines list as its type.</p>\n            <p>Role:Listitem-The listitem role defines each item as its type.It consist of dynamical id for each item.</p>\n        </amexio-box>\n    </amexio-api-accessible>\n    <amexio-api-demo>\n\n        <amexio-row>\n            <amexio-column size="12">\n                <amexio-card header="true">\n                    <amexio-header>\n                        Simple Tags Input\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                            <amexio-column [size]="6">\n                                <amexio-tag-input [data-reader]="\'data\'" [http-url]="\'assets/data/componentdata/country.json\'"\n                                    [http-method]="\'get\'" [key]="\'countryName\'" [display-field]="\'countryName\'"\n                                    [value-field]="\'countryName\'" [field-label]="\'Country Name\'" (onChange)="onRecordSelect($event)">\n                                </amexio-tag-input>\n                            </amexio-column>\n\n                            <amexio-column [size]="6">\n\n                                <amexio-card [header]="true" [body-height]="50">\n                                    <amexio-header>\n                                        Output Code\n                                    </amexio-header>\n                                    <amexio-body>\n                                        <ng-container *ngIf="outputData">\n                                            <pre><code>  {{outputData|json}} </code></pre>\n                                        </ng-container>\n                                    </amexio-body>\n                                </amexio-card>\n\n                            </amexio-column>\n                        </amexio-row>\n                    </amexio-body>\n                </amexio-card>\n            </amexio-column>\n        </amexio-row>\n\n    </amexio-api-demo>\n</amexio-api-structure>'},vdlq:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/multiplerangedatepicker.json\'">\n    <amexio-api-accessible>\n        <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n            <p>The Date/Time Picker is WAI ARIA-accessible through the tab key and implementation of keyboard navigation for its\n                component and is tested against the popular screen readers</p>\n            <p> Role:button-The button role is defined for button used in Date/Time picker and correspondingly have\n                aria-pressed attribute.</p>\n            <p> The attributes used in this are aria-label static and dynamic,dynamic for navigation of focus.</p>\n        </amexio-box>\n    </amexio-api-accessible>\n    <amexio-api-demo>\n        <amexio-row>\n            <amexio-column [size]="12" >\n                <amexio-card [height]="\'800\'" [header]="true" [footer]="false" [footer-align]="\'center\'">\n                    <amexio-header>\n                            Multiple Date Range Picker\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-row>\n                                <amexio-column [size]="3">\n                                </amexio-column>\n                            <amexio-column [size]="8">\n                               \n                                 <amexio-date-range-picker></amexio-date-range-picker>\n                                 \n                                </amexio-column>\n                                <amexio-column [size]="1">\n                                    </amexio-column>\n                        </amexio-row>\n\n                    </amexio-body>\n                     \n                </amexio-card>\n\n            </amexio-column>\n \n        </amexio-row>\n      \n    </amexio-api-demo>\n</amexio-api-structure>'},w1fk:function(e,o){e.exports='<amexio-api-structure [url]="\'assets/componentjson/forminputs/chip.json\'">\n  <amexio-api-accessible>\n    <amexio-box border-color="blue" border="left" [padding]="true" align="left">\n      <p>The Chips is WAI ARIA-accessible through the Tab key.</p>\n      <p>Role:Listbox-The role listbox for list of chips and option for individual chip component.\n        And in the role as listbox have focus navigation.</p>\n      <p>Role:Option-And in role as option id of paticular chip is set and passes\n        to the chip component</p>\n      <p>\n      </p>\n\n    </amexio-box>\n  </amexio-api-accessible>\n  <amexio-api-demo>\n    <amexio-row>\n\n      <amexio-column size="12">\n        <amexio-card header="true">\n          <amexio-header>\n            Chips with Data Input\n          </amexio-header>\n          <amexio-body>\n            <amexio-chips [data]="sampledatachips" (selectedchipsData)="onChipDataLabelClick($event)" (closeClick)="onChipDataCloseClick($event)" [display-field]="\'label\'"></amexio-chips>\n            <pre><code>{{emitdatachips | json}}</code></pre>\n\n          </amexio-body>\n        </amexio-card>\n        <amexio-card header="true">\n          <amexio-header>\n            Chip with multiple Inputs\n          </amexio-header>\n          <amexio-body>\n            <amexio-chips (selectedchipsData)="onChipsLabelClick($event)" (closeClick)="onCloseClick($event)" [display-field]="\'label\'">\n              <amexio-chip [icon]="\'fa fa-linkedin-square\'" [label]="\'Linkedin\'" [color]="\'red\'" [badge]="4" [closable]="true"\n                [font-color]="\'white\'">\n              </amexio-chip>\n\n              <amexio-chip [icon]="\'fa fa-internet-explorer\'" [label]="\'Internet-Explorer\'" [color]="\'blue\'" [badge]="2"\n                [closable]="false" [font-color]="\'white\'">\n              </amexio-chip>\n\n              <amexio-chip [icon]="\'fa fa-github\'" [label]="\'Github\'" [color]="\'green\'" [badge]="3" [closable]="true"\n                [font-color]="\'white\'">\n              </amexio-chip>\n\n            </amexio-chips>\n            <pre><code>{{multipleemitchips | json}}</code></pre>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n</amexio-api-structure>'}}]);