(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"03Hp":function(e,o,a){"use strict";a.r(o),o.default='\n <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forms/reactiveForm.json\'" >\n    <amexio-api-demo>\n\n\n\x3c!-- Reactive Forms with Amexio Form With <amexio-form> --\x3e\n\n    <amexio-form [header]="true" [formGroup]="employeeForm">\n        <amexio-form-header>\n            Simple Reactive Forms\n        </amexio-form-header>\n        <amexio-form-body>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-text-input formControlName="FirstName" [(ngModel)]="emplpoyeeRegistration.firstName" [field-label]="\'First Name\'" [allow-blank]="true" [error-msg]="\'Please enter valid First Name\'" [enable-popover]="true" [place-holder]="\'Please enter first name\'"\n                        [min-length]="2" [icon-feedback]="false" [min-error-msg]="\'Minimum 2 char allowed\'" [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                    </amexio-text-input>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-text-input formControlName="LastName" [(ngModel)]="emplpoyeeRegistration.lastName" [field-label]="\'Last Name\'" [place-holder]="\'Please enter last name\'" [allow-blank]="true" [error-msg]="\'errorMsg\'" [enable-popover]="true" [min-length]="2" [min-error-msg]="\'Minimum 2 char allowed\'"\n                        [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                        [icon-feedback]="true" >\n                    </amexio-text-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-email-input formControlName="Email" [(ngModel)]="emplpoyeeRegistration.email" [field-label]="\'Email Id\'" [place-holder]="\'Please enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                    </amexio-email-input>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-number-input formControlName="Age" [(ngModel)]="emplpoyeeRegistration.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'"\n                        [max-value]="100" [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                    </amexio-number-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-radio-group formControlName="Gender" [(ngModel)]="emplpoyeeRegistration.gender" [field-label]="\'Gender\'" [horizontal]="true" [display-field]="\'genderName\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                    </amexio-radio-group>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-checkbox formControlName="Agree" [(ngModel)]="emplpoyeeRegistration.agree" [field-label]="\'Agree\'">\n                    </amexio-checkbox>\n                </amexio-column>\n            </amexio-row>\n        </amexio-form-body>\n        <amexio-form-action>\n            <amexio-button [label]="\'Save\'" [disabled]="!employeeForm.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n            </amexio-button>\n        </amexio-form-action>\n\n    </amexio-form>\n\n    <br>\n    <b style="color:green">Form Model Data : </b> {{employeeForm.value | json}}<br>\n    <b style="color:blue">UI Model Data </b>: {{emplpoyeeRegistration|json}} <br>\n\n    \x3c!-- Reactive Forms Within Form Amexio Form With <amexio-form> --\x3e\n    <br>\n\n    <amexio-form [header]="true" [footer-align]="\'right\'" [formGroup]="employeeFormInsideForm">\n        <amexio-form-header>\n            Reactive Forms Within Forms\n        </amexio-form-header>\n        <amexio-form-body>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-text-input formControlName="FirstName" [(ngModel)]="registration.firstName" [field-label]="\'First Name\'" [allow-blank]="true" [error-msg]="\'Please enter valid First Name\'" [enable-popover]="true" [place-holder]="\'Please enter first name\'" [min-length]="2"\n                        [icon-feedback]="false" [min-error-msg]="\'Minimum 2 char allowed\'" [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                    </amexio-text-input>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-text-input formControlName="LastName" [(ngModel)]="registration.lastName" [field-label]="\'Last Name\'" [place-holder]="\'Please enter last name\'" [allow-blank]="true" [error-msg]="\'errorMsg\'" [enable-popover]="true" [min-length]="2" [min-error-msg]="\'Minimum 2 char allowed\'"\n                        [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                        [icon-feedback]="true" >\n                    </amexio-text-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-email-input formControlName="Email" [(ngModel)]="registration.email" [field-label]="\'Email Id\'" [place-holder]="\'Please enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                    </amexio-email-input>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-number-input formControlName="Age" [(ngModel)]="registration.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'" [max-value]="100"\n                        [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                    </amexio-number-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="12">\n                    <amexio-fieldset [formGroup]="addressForm" [collapsible]="true" title="Address">\n                        <amexio-row>\n                            <amexio-column size="5">\n                                <amexio-textarea-input formControlName="TemporaryAddress" [enable-popover]="true" [(ngModel)]="registration.address.tempAddress" [field-label]="\'Temporary Address\'" [place-holder]="\'Temporary address\'" [allow-blank]="false" [error-msg]="\'Please enter temporary address\'"\n                                    [icon-feedback]="true" [rows]="\'2\'" [columns]="\'1\'">\n                                </amexio-textarea-input>\n                            </amexio-column>\n                            <amexio-column size="2">\n                                <amexio-checkbox [field-label]="\'Permanent address same as temporary address\'" (onSelection)="onCheckClick1($event)">\n                                </amexio-checkbox>\n                            </amexio-column>\n                            <amexio-column size="5">\n                                <amexio-textarea-input formControlName="PermanentAddress" [(ngModel)]="registration.address.perAddress" [enable-popover]="true" [field-label]="\'Permanent Address\'" [place-holder]="\'Permanent address\'" [allow-blank]="false" [error-msg]="\'Please enter permanent address\'"\n                                    [icon-feedback]="true" [rows]="\'2\'" [columns]="\'1\'">\n                                </amexio-textarea-input>\n                            </amexio-column>\n                        </amexio-row>\n                        <amexio-row>\n                            <amexio-column size="12">\n                                <amexio-button [label]="\'Add Address\'" [disabled]="!addressForm.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n                                </amexio-button>\n                            </amexio-column>\n                        </amexio-row>\n                    </amexio-fieldset>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-radio-group formControlName="Gender" [(ngModel)]="registration.gender" [field-label]="\'Gender\'" [horizontal]="true" [display-field]="\'genderName\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                    </amexio-radio-group>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-checkbox formControlName="Agree" [(ngModel)]="registration.agree" [field-label]="\'Agree\'">\n                    </amexio-checkbox>\n                </amexio-column>\n            </amexio-row>\n        </amexio-form-body>\n        <amexio-form-action>\n            <amexio-button [label]="\'Save\'" [disabled]="!employeeFormInsideForm.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n            </amexio-button>\n        </amexio-form-action>\n    </amexio-form>\n\n    <br>\n    <b style="color:green">Form Model Data : </b> {{employeeFormInsideForm.value | json}}<br>\n    <b style="color:green">Inner Form Model Data : </b> {{addressForm.value | json}}<br>\n    <b style="color:blue">UI Model Data </b>: {{registration|json}} <br>\n    <br>\n    \x3c!-- Reactive forms group inside forms With <amexio-form>--\x3e\n\n\n    <amexio-form [header]="true" [formGroup]="employeeFormGroup">\n        <amexio-form-header>\n            Reactive Forms Group Inside Forms\n        </amexio-form-header>\n        <amexio-form-body>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-text-input formControlName="FirstName" [(ngModel)]="registration1.firstName" [field-label]="\'First Name\'" [allow-blank]="true" [error-msg]="\'Please enter valid First Name\'" [enable-popover]="true" [place-holder]="\'Please enter first name\'" [min-length]="2"\n                        [icon-feedback]="false" [min-error-msg]="\'Minimum 2 char allowed\'" [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                    </amexio-text-input>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-text-input formControlName="LastName" [(ngModel)]="registration1.lastName" [field-label]="\'Last Name\'" [place-holder]="\'Please enter last name\'" [allow-blank]="true" [error-msg]="\'errorMsg\'" [enable-popover]="true" [min-length]="2" [min-error-msg]="\'Minimum 2 char allowed\'"\n                        [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                        [icon-feedback]="true" >\n                    </amexio-text-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-email-input formControlName="Email" [(ngModel)]="registration1.email" [field-label]="\'Email Id\'" [place-holder]="\'Please enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                    </amexio-email-input>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-number-input formControlName="Age" [(ngModel)]="registration1.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'" [max-value]="100"\n                        [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                    </amexio-number-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="12">\n                    <amexio-fieldset formGroupName="AddressFormGroup" [collapsible]="true" title="Address">\n                        <amexio-row>\n                            <amexio-column size="5">\n                                <amexio-textarea-input formControlName="temporaryAddress" [(ngModel)]="registration1.address.tempAddress" [enable-popover]="true" [field-label]="\'Temporary Address\'" [place-holder]="\'Temporary Address\'" [allow-blank]="false" [error-msg]="\'Please enter temporary address\'"\n                                    [icon-feedback]="true" [rows]="\'2\'" [columns]="\'1\'">\n                                </amexio-textarea-input>\n                            </amexio-column>\n                            <amexio-column size="2">\n                                <amexio-checkbox [field-label]="\'Permanent address same as temporary address\'" (onSelection)="onCheckClick2($event)">\n                                </amexio-checkbox>\n                            </amexio-column>\n                            <amexio-column size="5">\n                                <amexio-textarea-input formControlName="permanentAddress" [(ngModel)]="registration1.address.perAddress" [enable-popover]="true" [field-label]="\'Permanent Address\'" [place-holder]="\'Permanent Address\'" [allow-blank]="false" [error-msg]="\'Please enter permanent address\'"\n                                    [icon-feedback]="true" [rows]="\'2\'" [columns]="\'1\'">\n                                </amexio-textarea-input>\n                            </amexio-column>\n                        </amexio-row>\n                    </amexio-fieldset>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-radio-group formControlName="Gender" [(ngModel)]="registration1.gender" [field-label]="\'Gender\'" [horizontal]="true" [display-field]="\'genderName\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                    </amexio-radio-group>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-checkbox formControlName="Agree" [(ngModel)]="registration1.agree" [field-label]="\'Agree\'">\n                    </amexio-checkbox>\n                </amexio-column>\n            </amexio-row>\n        </amexio-form-body>\n        <amexio-form-action>\n            <amexio-button [label]="\'Save\'" [disabled]="!employeeFormGroup.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n            </amexio-button>\n        </amexio-form-action>\n    </amexio-form>\n\n    <br>\n    <b style="color:green">Form Model Data : </b> {{employeeFormGroup.value | json}}<br>\n    <b style="color:blue">UI Model Data </b>: {{registration1|json}} <br>\n    <br>\n\n    <amexio-form [formGroup]="dynamicEmployeeForm" header="true" footer="false">\n        <amexio-form-header>\n            Reactive Form with Dynamic Forms\n        </amexio-form-header>\n        <amexio-form-body>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-text-input formControlName="FirstName" [(ngModel)]="dynamicFormsReg.firstName" [field-label]="\'First Name\'" [allow-blank]="true" [error-msg]="\'Please enter valid First Name\'" [enable-popover]="true" [place-holder]="\'Please enter first name\'" [min-length]="2"\n                        [icon-feedback]="false" [min-error-msg]="\'Minimum 2 char allowed\'" [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                    </amexio-text-input>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-text-input formControlName="LastName" [(ngModel)]="dynamicFormsReg.lastName" [field-label]="\'Last Name\'" [place-holder]="\'Please enter last name\'" [allow-blank]="true" [error-msg]="\'errorMsg\'" [enable-popover]="true" [min-length]="2" [min-error-msg]="\'Minimum 2 char allowed\'"\n                        [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                        [icon-feedback]="true" >\n                    </amexio-text-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-email-input formControlName="Email" [(ngModel)]="dynamicFormsReg.email" [field-label]="\'Email Id\'" [place-holder]="\'Please enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                    </amexio-email-input>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-number-input formControlName="Age" [(ngModel)]="dynamicFormsReg.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'" [max-value]="100"\n                        [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                    </amexio-number-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-button [label]="\'Add Phone\'" [type]="\'green\'" [tooltip]="\'Add Phone\'" (onClick)="addPhoneClick()">\n                    </amexio-button>\n                </amexio-column>\n            </amexio-row>\n            <amexio-fieldset *ngIf="enableFieldSet" formArrayName="phones" [collapsible]="false" [title]="\'Add Phone Numbers\'">\n                <amexio-row *ngFor="let phone of phoneForms.controls;let i=index" [formGroupName]="i">\n                    <amexio-column size="3">\n                        <amexio-text-input formControlName="phoneLabel" [(ngModel)]="phone.phoneLabel" enable-popover="true" field-label="Phone Label" name="phoneLabel" error-msg="Please add phone label" place-holder="Enter phone label" allow-blank="false" min-length="3" min-error-msg="Minimum 3 char required"\n                            max-length="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column size="3">\n                        <amexio-text-input formControlName="countryCode" [(ngModel)]="phone.countryCode" enable-popover="true" field-label="Country Code" name="countryCode" error-msg="Please add country code" place-holder="Enter country code" allow-blank="false" min-length="1"\n                            min-error-msg="Minimum 1 char required" max-length="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column size="3">\n                        <amexio-text-input formControlName="phoneNumber" [(ngModel)]="phone.phoneNumber" enable-popover="true" field-label="Phone Number" name="phoneNumber" error-msg="Please add phone number" place-holder="Enter phone number" allow-blank="false" min-length="8"\n                            min-error-msg="Minimum 8 char required" max-length="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column size="3">\n                        \x3c!-- <amexio-button  [label]="\'Add\'"  [type]="\'green\'" [tooltip]="\'add\'"  [icon]="\'fa fa-check\'" (onClick)="addClick({\'phoneLabel\':phone.phoneLabel,\'countryCode\':phone.countryCode,\'phoneNumber\':phone.phoneNumber})">\n                                </amexio-button> --\x3e\n                        <amexio-button [label]="\'Delete\'" [type]="\'red\'" [tooltip]="\'delete\'" [icon]="\'fa fa-trash\'" (onClick)="onDeleteClick(i)">\n                        </amexio-button>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-fieldset>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-radio-group formControlName="Gender" [(ngModel)]="dynamicFormsReg.gender" [field-label]="\'Gender\'" [horizontal]="true" [display-field]="\'genderName\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                    </amexio-radio-group>\n                </amexio-column>\n                <amexio-column size="6">\n                    <amexio-checkbox formControlName="Agree" [(ngModel)]="dynamicFormsReg.agree" [field-label]="\'Agree\'">\n                    </amexio-checkbox>\n                </amexio-column>\n            </amexio-row>\n        </amexio-form-body>\n\n        <amexio-form-action>\n            <amexio-button [label]="\'Save\'" [disabled]="!dynamicEmployeeForm.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n            </amexio-button>\n        </amexio-form-action>\n    </amexio-form>\n\n\n    <br>\n    <b style="color:green">Form Model Data : </b> {{dynamicEmployeeForm.value | json}}<br>\n    \x3c!-- <b style="color:blue">UI Model Data </b>: {{dynamicFormsReg|json}} <br> --\x3e\n\n\n    </amexio-api-demo>\n    </amexio-api-structure>\n'},IeVn:function(e,o,a){"use strict";a.r(o);var n,r=a("CcnG"),i=a("O4vx"),t=a("Ip0R"),m=a("t/Na"),l=a("d2mR"),s=a("gIcY"),d=a("f4zW"),u=(n=function(e,o){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var a in o)o.hasOwnProperty(a)&&(e[a]=o[a])})(e,o)},function(e,o){function a(){this.constructor=e}n(e,o),e.prototype=null===o?Object.create(o):(a.prototype=o.prototype,new a)}),c=function(e,o,a,n){var r,i=arguments.length,t=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)t=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(r=e[m])&&(t=(i<3?r(t):i>3?r(o,a,t):r(o,a))||t);return i>3&&t&&Object.defineProperty(o,a,t),t},p=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},x=function(e){return e&&e.__esModule?e:{default:e}},g=function(){function e(e,o){this.http=e,this.fb=o,this.copyMsgArray=[],this.radioGroupData=[],this.radioGroupData1=[],this.radioGroupData2=[],this.radioGroupData3=[],this.customSourceData=new d.a,this.address=new f,this.emplpoyeeRegistration=new b,this.registration1=new h,this.registration=new h,this.dynamicFormsReg=new y,this.radioGroupData=[{genderName:"Male",genderId:"male"},{genderName:"Female",genderId:"female"}],this.radioGroupData1=[{genderName1:"Male",genderId1:"male"},{genderName1:"Female",genderId1:"female"}],this.radioGroupData2=[{genderName2:"Male",genderId2:"male"},{genderName2:"Female",genderId2:"female"}],this.radioGroupData3=[{genderName3:"Male",genderId3:"male"},{genderName3:"Female",genderId3:"female"}]}return e.prototype.ngOnInit=function(){this.createCustomSourceData(),this.employeeForm=this.fb.group({FirstName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],LastName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],Email:["",[s.k.required,s.k.email]],Age:["",[s.k.required,s.k.min(18),s.k.max(100)]],Gender:["",[s.k.required]],Agree:["",[s.k.required,s.k.requiredTrue]]}),this.employeeFormInsideForm=this.fb.group({FirstName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],LastName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],Email:["",[s.k.required,s.k.email]],Age:["",[s.k.required,s.k.min(18),s.k.max(100)]],Gender:["",[s.k.required]],Agree:["",[s.k.required,s.k.requiredTrue]]}),this.addressForm=this.fb.group({TemporaryAddress:["",[s.k.required]],PermanentAddress:["",[s.k.required]]}),this.employeeFormGroup=this.fb.group({FirstName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],LastName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],Email:["",[s.k.required,s.k.email]],Age:["",[s.k.required,s.k.min(18),s.k.max(100)]],Gender:["",[s.k.required]],Agree:["",[s.k.required,s.k.requiredTrue]],AddressFormGroup:new s.c({temporaryAddress:new s.b("",s.k.required),permanentAddress:new s.b("",s.k.required)})}),this.dynamicEmployeeForm=this.fb.group({FirstName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],LastName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],Email:["",[s.k.required,s.k.email]],Age:["",[s.k.required,s.k.min(18),s.k.max(100)]],Gender:["",[s.k.required]],Agree:["",[s.k.required,s.k.requiredTrue]],phones:this.fb.array([])})},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Reactive  Forms With HTML Form Tag And Amexio Inputs Components ",this.customSourceData.description="Reactive Forms can be used basically for validation purposes and below examples show reactive forms with amexio inputs components",this.customSourceData.sourceMetadata.htmlUrl="pane/html-form/reactiveform/form.html",this.customSourceData.sourceMetadata.tsUrl="pane/html-form/reactiveform/form.text",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/simple-reactive-forms-tu9tkf?file=src%2Fapp%2Famexio-reactive-forms%2Famexio-reactive-forms%2Famexio-reactive-forms.component.html",this.customSourceData.liveMetadata.stackblitzUrl1="https://stackblitz.com/edit/reactive-forms-within-forms-wxnrvo?embed=1&file=src/app/app.component.ts",this.customSourceData.liveMetadata.stackblitzUrl2="https://stackblitz.com/edit/amexio-reactive-form-group-inside-form-usemf8?embed=1&file=src/app/app.component.ts"},Object.defineProperty(e.prototype,"phoneForms",{get:function(){return this.dynamicEmployeeForm.get("phones")},enumerable:!0,configurable:!0}),e.prototype.addPhone=function(){var e=this.fb.group({phoneLabel:["",[s.k.required]],countryCode:["",[s.k.required]],phoneNumber:["",[s.k.required,s.k.minLength(8),s.k.maxLength(10),s.k.pattern("[0-9 ]*")]]});this.phoneForms.push(e)},e.prototype.addPhoneClick=function(){this.enableFieldSet=!0,this.dynamicFormsReg.add(new k),this.addPhone()},e.prototype.onCheckClick1=function(e){e&&(this.registration.address.perAddress=this.registration.address.tempAddress)},e.prototype.onCheckClick2=function(e){e&&(this.registration1.address.perAddress=this.registration1.address.tempAddress)},e.prototype.onDeleteClick=function(e){this.phoneForms.removeAt(e)},e.prototype.onAddClick=function(e){this.dynamicFormsReg.add(e)},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.ctorParameters=function(){return[{type:m.a},{type:s.a}]},e=c([Object(r.n)({selector:"reactive-form",template:x(a("UpIh")).default}),p("design:paramtypes",[m.a,s.a])],e)}(),f=function(){},b=function(){},h=function(e){function o(){var o=e.call(this)||this;return o.address=new f,o}return u(o,e),o}(b),y=function(e){function o(){var o=e.call(this)||this;return o.phones=[],o}return u(o,e),o.prototype.add=function(e){this.phones.push(e)},o}(b),k=function(){},w=function(){var e=function(o,a){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var a in o)o.hasOwnProperty(a)&&(e[a]=o[a])})(o,a)};return function(o,a){function n(){this.constructor=o}e(o,a),o.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}}(),v=function(e,o,a,n){var r,i=arguments.length,t=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)t=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(r=e[m])&&(t=(i<3?r(t):i>3?r(o,a,t):r(o,a))||t);return i>3&&t&&Object.defineProperty(o,a,t),t},M=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},N=function(e){return e&&e.__esModule?e:{default:e}},F=function(){function e(e,o){this.http=e,this.fb=o,this.copyMsgArray=[],this.radioGroupData=[],this.customSourceData=new d.a,this.address=new C,this.emplpoyeeRegistration=new A,this.registration1=new z,this.registration=new z,this.dynamicFormsReg=new P,this.radioGroupData=[{genderName:"Male",genderId:"male"},{genderName:"Female",genderId:"female"}]}return e.prototype.ngOnInit=function(){this.createCustomSourceData(),this.employeeForm=this.fb.group({FirstName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],LastName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],Email:["",[s.k.required,s.k.email]],Age:["",[s.k.required,s.k.min(18),s.k.max(100)]],Gender:["",[s.k.required]],Agree:["",[s.k.required,s.k.requiredTrue]]}),this.employeeFormInsideForm=this.fb.group({FirstName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],LastName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],Email:["",[s.k.required,s.k.email]],Age:["",[s.k.required,s.k.min(18),s.k.max(100)]],Gender:["",[s.k.required]],Agree:["",[s.k.required,s.k.requiredTrue]]}),this.addressForm=this.fb.group({TemporaryAddress:["",[s.k.required]],PermanentAddress:["",[s.k.required]]}),this.employeeFormGroup=this.fb.group({FirstName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],LastName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],Email:["",[s.k.required,s.k.email]],Age:["",[s.k.required,s.k.min(18),s.k.max(100)]],Gender:["",[s.k.required]],Agree:["",[s.k.required,s.k.requiredTrue]],AddressFormGroup:new s.c({temporaryAddress:new s.b("",s.k.required),permanentAddress:new s.b("",s.k.required)})}),this.dynamicEmployeeForm=this.fb.group({FirstName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],LastName:["",[s.k.required,s.k.minLength(2),s.k.maxLength(20)]],Email:["",[s.k.required,s.k.email]],Age:["",[s.k.required,s.k.min(18),s.k.max(100)]],Gender:["",[s.k.required]],Agree:["",[s.k.required,s.k.requiredTrue]],phones:this.fb.array([])})},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Reactive Forms With Amexio Inputs Components",this.customSourceData.description="Reactive forms provide a model-driven approach to handling form inputs whose values change over time. Reactive forms can be used basically for validation purposes and below examples show reactive forms with amexio inputs components. User can add any complex validations.",this.customSourceData.sourceMetadata.htmlUrl="pane/reactiveform/form.html",this.customSourceData.sourceMetadata.tsUrl="pane/reactiveform/form.text",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/simple-reactive-forms-tu9tkf?file=src%2Fapp%2Famexio-reactive-forms%2Famexio-reactive-forms%2Famexio-reactive-forms.component.html",this.customSourceData.liveMetadata.stackblitzUrl1="https://stackblitz.com/edit/reactive-forms-within-forms-wxnrvo?embed=1&file=src/app/app.component.ts",this.customSourceData.liveMetadata.stackblitzUrl2="https://stackblitz.com/edit/amexio-reactive-form-group-inside-form-usemf8?embed=1&file=src/app/app.component.ts"},e.prototype.onCheckClick1=function(e){e&&(this.registration.address.perAddress=this.registration.address.tempAddress)},e.prototype.onCheckClick2=function(e){e&&(this.registration1.address.perAddress=this.registration1.address.tempAddress)},Object.defineProperty(e.prototype,"phoneForms",{get:function(){return this.dynamicEmployeeForm.get("phones")},enumerable:!0,configurable:!0}),e.prototype.addPhone=function(){var e=this.fb.group({phoneLabel:["",[s.k.required]],countryCode:["",[s.k.required]],phoneNumber:["",[s.k.required,s.k.minLength(8),s.k.maxLength(10),s.k.pattern("[0-9 ]*")]]});this.phoneForms.push(e)},e.prototype.addPhoneClick=function(){this.enableFieldSet=!0,this.dynamicFormsReg.add(new R),this.addPhone()},e.prototype.onDeleteClick=function(e){this.phoneForms.removeAt(e)},e.prototype.onAddClick=function(e){this.dynamicFormsReg.add(e)},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.ctorParameters=function(){return[{type:m.a},{type:s.a}]},e=v([Object(r.n)({selector:"reactive-form",template:N(a("03Hp")).default}),M("design:paramtypes",[m.a,s.a])],e)}(),C=function(){},A=function(){},z=function(e){function o(){var o=e.call(this)||this;return o.address=new C,o}return w(o,e),o}(A),P=function(e){function o(){var o=e.call(this)||this;return o.phones=[],o}return w(o,e),o.prototype.add=function(e){this.phones.push(e)},o}(A),R=function(){},D=function(){this.address=new E},E=function(){},I=function(e,o,a,n){var r,i=arguments.length,t=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)t=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(r=e[m])&&(t=(i<3?r(t):i>3?r(o,a,t):r(o,a))||t);return i>3&&t&&Object.defineProperty(o,a,t),t},q=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},L=function(e){return e&&e.__esModule?e:{default:e}},G=function(){function e(e){this.http=e,this.currentDate=new Date,this.customSourceData=new d.a,this.userRegistration=new S,this.emplpoyeeRegistration=new D,this.departmentData=[{deptId:"1",deptName:"Engineering"},{deptId:"2",deptName:"Tech Suppport"},{deptId:"3",deptName:"HR"}],this.checkboxGroupdata={response:{data:[{hobbieName:"Learning",checked:!1,disabled:!1},{hobbieName:"Shopping",checked:!1,disabled:!1},{hobbieName:"Fishing",checked:!1,disabled:!1}]}},this.payment=[{label:"Open With",icon:"fa fa-arrows-alt "},{label:"Make a Copy",icon:"fa fa-files-o",separator:"true"},{label:"Refresh",icon:"fa fa-refresh"},{label:"Add Star",icon:"fa fa-star"},{label:"download",icon:"fa fa-download"},{label:"bookmark",icon:"fa fa-bookmark"}],this.radioGroupData={response:{data:[{gender:"Male",genderId:"male"},{gender:"Female",genderId:"female"}]}}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Form ",this.customSourceData.description="Amexio Form can be used basically for validation purposes. amexio-form component gives more power over the html form tag. 1. Shows error messages when form is invalid. 2. User need not to add extra validations to inputs .only add min,max,min-length,max-length in amexio input fields",this.customSourceData.sourceMetadata.htmlUrl="pane/form/form.html",this.customSourceData.sourceMetadata.tsUrl="pane/form/form.text",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v42-form?embed=1&file=app/forms/form/form.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.refreshData=function(){this.refreshDialogue=!this.refreshDialogue},e.ctorParameters=function(){return[{type:m.a}]},e=I([Object(r.n)({selector:"form-demo",template:L(a("tioD")).default}),q("design:paramtypes",[m.a])],e)}(),S=function(){this.dateOfBirth=new Date,this.hobbies=[]},j=function(){this.address=new O},O=function(){},U=function(e,o,a,n){var r,i=arguments.length,t=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)t=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(r=e[m])&&(t=(i<3?r(t):i>3?r(o,a,t):r(o,a))||t);return i>3&&t&&Object.defineProperty(o,a,t),t},T=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},_=function(e){return e&&e.__esModule?e:{default:e}},W=function(){function e(e){this.http=e,this.currentDate=new Date,this.customSourceData=new d.a,this.userRegistration=new B,this.emplpoyeeRegistration=new j,this.departmentData=[{deptId:"1",deptName:"Engineering"},{deptId:"2",deptName:"Tech Suppport"},{deptId:"3",deptName:"HR"}],this.checkboxGroupdata={response:{data:[{hobbieName:"Learning",checked:!1,disabled:!1},{hobbieName:"Shopping",checked:!1,disabled:!1},{hobbieName:"Fishing",checked:!1,disabled:!1}]}},this.payment=[{label:"Open With",icon:"fa fa-arrows-alt "},{label:"Make a Copy",icon:"fa fa-files-o",separator:"true"},{label:"Refresh",icon:"fa fa-refresh"},{label:"Add Star",icon:"fa fa-star"},{label:"download",icon:"fa fa-download"},{label:"bookmark",icon:"fa fa-bookmark"}],this.radioGroupData={response:{data:[{gender:"Male",genderId:"male"},{gender:"Female",genderId:"female"}]}}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Form With HTML Form Tag And Amexio Inputs Components",this.customSourceData.description="Html Form can be used basically for validation purposes",this.customSourceData.sourceMetadata.htmlUrl="pane/html-form/form/form.html",this.customSourceData.sourceMetadata.tsUrl="pane/html-form/form/form.text",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v42-form?embed=1&file=app/forms/form/form.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.refreshData=function(){this.refreshDialogue=!this.refreshDialogue},e.ctorParameters=function(){return[{type:m.a}]},e=U([Object(r.n)({selector:"form-demo",template:_(a("UCJg")).default}),T("design:paramtypes",[m.a])],e)}(),B=function(){this.dateOfBirth=new Date,this.hobbies=[]},H=[{path:"html-reactive-form",component:g},{path:"reactive-form",component:F},{path:"form-demo",component:G},{path:"html-form-demo",component:W}],J=a("ZYCi");a.d(o,"FormsDemoModule",(function(){return K}));var $=function(e,o,a,n){var r,i=arguments.length,t=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)t=Reflect.decorate(e,o,a,n);else for(var m=e.length-1;m>=0;m--)(r=e[m])&&(t=(i<3?r(t):i>3?r(o,a,t):r(o,a))||t);return i>3&&t&&Object.defineProperty(o,a,t),t},K=function(){function e(){}return e=$([Object(r.J)({declarations:[g,F,G,W],imports:[t.b,s.d,s.j,m.b,l.a.forRoot(),i.j,J.e.forChild(H)],providers:[]})],e)}()},UCJg:function(e,o,a){"use strict";a.r(o),o.default='   \n   \n <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forms/amexioforms.json\'">\n    <amexio-api-demo>\n   \n   <h2>Demo: Form </h2>\n    <amexio-card header="true" footer="true">\n        <amexio-header>\n            Simple Form\n        </amexio-header>\n        <amexio-body>\n            <form #empForm="ngForm">\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-text-input [min-length]="3" [(ngModel)]="userRegistration.firstName" [max-length]="5" [allow-blank]="false" field-label="First Name" name="firstName" place-holder="Enter first name" icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-text-input field-label="Last Name" name="lastName" [(ngModel)]="userRegistration.lastName" place-holder="Enter last name(not mandatory)" allow-blank="true" error-msg="Please enter last name" [min-length]="3" min-error-msg="Minimum 3 char required"\n                            [max-length]="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-textarea-input [field-label]="\'Address\'" name="Address" [(ngModel)]="userRegistration.address" [place-holder]="\'Enter address\'" [error-msg]="\'Please enter address\'" [icon-feedback]="true" [rows]="\'1\'" [columns]="\'2\'" [allow-blank]="false"\n                    [enable-popover]="true"></amexio-textarea-input>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-radio-group [name]="\'genderList\'" [field-label]="\'Gender\'" [horizontal]="true" [allow-blank]="false" [(ngModel)]="userRegistration.gender" [data-reader]="\'response.data\'" [display-field]="\'gender\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                        </amexio-radio-group>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-checkbox-group [field-label]="\'Hobbies\'" name="hobbies" [(ngModel)]="userRegistration.hobbies" [horizontal]="true" [required]="true"  [data-reader]="\'response.data\'" [display-field]="\'hobbieName\'" [value-field]="\'checked\'" [data]="checkboxGroupdata">\n                        </amexio-checkbox-group>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-tag-input [data-reader]="\'response.data\'" [http-url]="\'assets/data/componentdata/countryy.json\'" [has-label]="true" [http-method]="\'get\'" [key]="\'countryName\'" [allow-blank]="false" [display-field]="\'countryName\'" [field-label]="\'Having visa\'">\n                        </amexio-tag-input>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-dropdown [place-holder]="\'Choose City\'" name="city" [(ngModel)]="userRegistration.city" [allow-blank]="false" [data-reader]="\'response.data\'" [field-label]="\'City\'" [http-url]="\'assets/data/componentdata/cities.json\'" [http-method]="\'get\'" [search]="\'true\'"\n                            [display-field]="\'cityName\'" [value-field]="\'cityName\'">\n                        </amexio-dropdown>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-number-input [name]="\'age\'" [(ngModel)]="userRegistration.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [allow-blank]="false" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'"\n                            [max-value]="100" [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                        </amexio-number-input>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-date-time-picker [(ngModel)]="userRegistration.dateOfBirth" name="dateOfBirth" [field-label]="\'Date Of Birth\'" [time-picker]="false" [date-picker]="true" [required]="true">\n                        </amexio-date-time-picker>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-email-input [field-label]="\'Email Id\'" name="email" [(ngModel)]="userRegistration.email" [place-holder]="\'Enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                        </amexio-email-input>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-password-input [enable-popover]="true" [field-label]="\'Password Input\'" name="password" [(ngModel)]="userRegistration.password" [place-holder]="\'Enter Password\'" [allow-blank]="false" [error-msg]="\'Please enter password\'" [min-length]="6" [min-error-msg]="\'Minimum 6 char required\'"\n                            [max-length]="32" [max-error-msg]="\'Maximum 32 char allowed\'" [icon-feedback]="true">\n                        </amexio-password-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-checkbox [field-label]="\'Agree\'" name="agree" [required]="true" [(ngModel)]="userRegistration.agree">\n                </amexio-checkbox>\n            </form>\n        </amexio-body>\n        <amexio-action>\n            <amexio-button [disabled]="!empForm.valid" [label]="\'Save\'" [type]="\'primary\'" [tooltip]="\'Save\'" [size]="\'large\'">\n            </amexio-button>\n        </amexio-action>\n    </amexio-card>\n\n    <br>\n    <b style="color:green">Form Model Data : </b> {{empForm.form.value | json}}<br>\n    <b style="color:blue">UI Model Data </b>: {{userRegistration|json}} <br><br>\n    <amexio-card header="true" footer="true">\n        <amexio-header>\n            Employee Registration With Address\n        </amexio-header>\n        <amexio-body>\n            <form #empFormWithAddress="ngForm">\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-text-input [(ngModel)]="emplpoyeeRegistration.firstName" [min-length]="3" [max-length]="5" [allow-blank]="false" field-label="First Name" [name]="\'Firstname\'" place-holder="Enter first name" icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-text-input field-label="Last Name" [name]="\'lastName\'" [(ngModel)]="emplpoyeeRegistration.lastName" place-holder="Enter last name" [allow-blank]="false" error-msg="Please enter last name" [min-length]="3" min-error-msg="Minimum 3 char required"\n                            [max-length]="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-radio-group [name]="\'genderList\'" [field-label]="\'Gender\'" [horizontal]="true" [allow-blank]="false" [(ngModel)]="emplpoyeeRegistration.gender" [data-reader]="\'response.data\'" [display-field]="\'gender\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                        </amexio-radio-group>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-dropdown [place-holder]="\'Choose Department\'" [name]="\'department\'" [(ngModel)]="emplpoyeeRegistration.department" [allow-blank]="false" [field-label]="\'Department\'" [search]="\'true\'" [data]="departmentData" [display-field]="\'deptName\'" [value-field]="\'deptId\'">\n                        </amexio-dropdown>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-email-input [field-label]="\'Email Id\'" [name]="\'email\'" [(ngModel)]="emplpoyeeRegistration.email" [place-holder]="\'Enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                        </amexio-email-input>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-date-time-picker [(ngModel)]="emplpoyeeRegistration.dateOfBirth" [name]="\'dateOfBirth\'" [field-label]="\'Date Of Birth\'" [time-picker]="false" [date-picker]="true" [required]="true">\n                        </amexio-date-time-picker>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-fieldset ngModelGroup="address" title="Address">\n                    <amexio-row>\n                        <amexio-column [size]="6">\n                            <amexio-text-input field-label="Street" [name]="\'street\'" [(ngModel)]="emplpoyeeRegistration.address.street" place-holder="Enter street" enable-popover="true" [min-length]="3" min-error-msg="Minimum 3 char required" [allow-blank]="false" error-msg="Please enter street"\n                                icon-feedback="true">\n                            </amexio-text-input>\n                        </amexio-column>\n                        <amexio-column [size]="6">\n                            <amexio-text-input field-label="city" [name]="\'city\'" [(ngModel)]="emplpoyeeRegistration.address.city" [min-length]="3" enable-popover="true" min-error-msg="Minimum 3 char required" place-holder="Enter city" [allow-blank]="false" error-msg="Please enter city"\n                                icon-feedback="true">\n                            </amexio-text-input>\n                        </amexio-column>\n                    </amexio-row>\n                    <amexio-row>\n                        <amexio-column [size]="6">\n                            <amexio-text-input field-label="pincode" [name]="\'pincode\'" [(ngModel)]="emplpoyeeRegistration.address.pincode" [min-length]="3" enable-popover="true" min-error-msg="Minimum 3 char required" place-holder="Enter pincode" [allow-blank]="false" error-msg="Please enter pincode"\n                                icon-feedback="true">\n                            </amexio-text-input>\n                        </amexio-column>\n                    </amexio-row>\n                </amexio-fieldset>\n            </form>\n        </amexio-body>\n        <amexio-action>\n            <amexio-button [disabled]="!empFormWithAddress.valid" [label]="\'Save\'" [type]="\'primary\'" [tooltip]="\'Save\'" [size]="\'large\'">\n            </amexio-button>\n        </amexio-action>\n    </amexio-card>\n\n    <br>\n    <b style="color:green">Form Model Data : </b> {{empFormWithAddress.form.value | json}}<br>\n    <b style="color:blue">UI Model Data : </b> {{emplpoyeeRegistration | json}} <br>\n\n</amexio-api-demo>\n</amexio-api-structure>'},UpIh:function(e,o,a){"use strict";a.r(o),o.default='  \n  \n <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forms/reactiveForm.json\'">\n    <amexio-api-demo>\n    \n  <amexio-card [header]="true" [footer]="true" [footer-align]="\'right\'">\n        <amexio-header>\n            Simple Reactive Forms\n        </amexio-header>\n        <amexio-body>\n            <form [formGroup]="employeeForm">\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-text-input formControlName="FirstName" [(ngModel)]="emplpoyeeRegistration.firstName" [field-label]="\'First Name\'" [allow-blank]="true" [error-msg]="\'Please enter valid First Name\'" [enable-popover]="true" [place-holder]="\'Please enter first name\'"\n                            [min-length]="2"  [icon-feedback]="false" [min-error-msg]="\'Minimum 2 char allowed\'" [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-text-input formControlName="LastName" [(ngModel)]="emplpoyeeRegistration.lastName" [field-label]="\'Last Name\'" [place-holder]="\'Please enter last name\'" [allow-blank]="true" [error-msg]="\'errorMsg\'" [enable-popover]="true" [min-length]="2" [min-error-msg]="\'Minimum 2 char allowed\'"\n                            [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                            [icon-feedback]="true" >\n                        </amexio-text-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-email-input formControlName="Email" [(ngModel)]="emplpoyeeRegistration.email" [field-label]="\'Email Id\'" [place-holder]="\'Please enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                        </amexio-email-input>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-number-input formControlName="Age" [(ngModel)]="emplpoyeeRegistration.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'"\n                            [max-value]="100" [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                        </amexio-number-input>\n                    </amexio-column>\n                </amexio-row>\n\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-radio-group formControlName="Gender" [(ngModel)]="emplpoyeeRegistration.gender" [field-label]="\'Gender\'" [horizontal]="true" [display-field]="\'genderName\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                        </amexio-radio-group>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-checkbox formControlName="Agree" [(ngModel)]="emplpoyeeRegistration.agree" [field-label]="\'Agree\'">\n                        </amexio-checkbox>\n                    </amexio-column>\n                </amexio-row>\n            </form>\n        </amexio-body>\n        <amexio-action>\n            <amexio-button [label]="\'Save\'" [disabled]="!employeeForm.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n            </amexio-button>\n        </amexio-action>\n    </amexio-card>\n    <br>\n    <b style="color:green">Form Model Data : </b> {{employeeForm.value | json}}<br>\n    <b style="color:blue">UI Model Data </b>: {{emplpoyeeRegistration|json}} <br>\n\n    \x3c!-- forms within forms --\x3e\n    <br>\n    <amexio-card [header]="true" [footer]="true" [footer-align]="\'right\'">\n        <amexio-header>\n            Reactive Forms Within Forms\n        </amexio-header>\n        <amexio-body>\n            <form [formGroup]="employeeFormInsideForm">\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-text-input formControlName="FirstName" [(ngModel)]="registration.firstName" [field-label]="\'First Name\'" [allow-blank]="true" [error-msg]="\'Please enter valid First Name\'" [enable-popover]="true" [place-holder]="\'Please enter first name\'" [min-length]="2"\n                            [icon-feedback]="false" [min-error-msg]="\'Minimum 2 char allowed\'" [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-text-input formControlName="LastName" [(ngModel)]="registration.lastName" [field-label]="\'Last Name\'" [place-holder]="\'Please enter last name\'" [allow-blank]="true" [error-msg]="\'errorMsg\'" [enable-popover]="true" [min-length]="2" [min-error-msg]="\'Minimum 2 char allowed\'"\n                            [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                            [icon-feedback]="true" >\n                        </amexio-text-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-email-input formControlName="Email" [(ngModel)]="registration.email" [field-label]="\'Email Id\'" [place-holder]="\'Please enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                        </amexio-email-input>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-number-input formControlName="Age" [(ngModel)]="registration.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'" [max-value]="100"\n                            [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                        </amexio-number-input>\n                    </amexio-column>\n                </amexio-row>\n\n                <amexio-row>\n                    <amexio-column size="12">\n                        <amexio-fieldset [collapsible]="true" title="Address">\n                            <form [formGroup]="addressForm">\n                                <amexio-row>\n                                    <amexio-column size="5">\n                                        <amexio-textarea-input formControlName="TemporaryAddress" [enable-popover]="true" [field-label]="\'Temporary Address\'" [place-holder]="\'Temporary address\'" [allow-blank]="false" [error-msg]="\'Please enter temporary address\'" [(ngModel)]="registration.address.tempAddress"\n                                            [icon-feedback]="true" [rows]="\'2\'" [columns]="\'1\'">\n                                        </amexio-textarea-input>\n                                    </amexio-column>\n                                    <amexio-column size="2">\n                                        <amexio-checkbox [field-label]="\'Permanent address same as temporary address\'" (onSelection)="onCheckClick1($event)">\n                                        </amexio-checkbox>\n\n                                    </amexio-column>\n                                    <amexio-column size="5">\n                                        <amexio-textarea-input formControlName="PermanentAddress" [enable-popover]="true" [field-label]="\'Permanent Address\'" [place-holder]="\'Permanent address\'" [allow-blank]="false" [error-msg]="\'Please enter permanent address\'" [(ngModel)]="registration.address.perAddress"\n                                            [icon-feedback]="true" [rows]="\'2\'" [columns]="\'1\'">\n                                        </amexio-textarea-input>\n                                    </amexio-column>\n                                </amexio-row>\n\n                            </form>\n                            <amexio-row>\n                                <amexio-column size="12">\n                                    <amexio-button [label]="\'Add Address\'" [disabled]="!addressForm.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n                                    </amexio-button>\n                                </amexio-column>\n                            </amexio-row>\n                        </amexio-fieldset>\n\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-radio-group formControlName="Gender" [(ngModel)]="registration.gender" [field-label]="\'Gender\'" [horizontal]="true" [display-field]="\'genderName1\'" [value-field]="\'genderId1\'" [data]="radioGroupData1">\n                        </amexio-radio-group>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-checkbox formControlName="Agree" [(ngModel)]="registration.agree" [field-label]="\'Agree\'">\n                        </amexio-checkbox>\n                    </amexio-column>\n                </amexio-row>\n            </form>\n        </amexio-body>\n        <amexio-action>\n            <amexio-button [label]="\'Save\'" [disabled]="!employeeFormInsideForm.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n            </amexio-button>\n        </amexio-action>\n    </amexio-card>\n    <br>\n    <b style="color:green">Form Model Data : </b> {{employeeFormInsideForm.value | json}}<br>\n    <b style="color:green">Inner Form Model Data : </b> {{addressForm.value | json}}<br>\n    <b style="color:blue">UI Model Data </b>: {{registration|json}} <br>\n    <br>\n\n    \x3c!--  forms group inside forms --\x3e\n\n    <amexio-card [header]="true" [footer]="true" [footer-align]="\'right\'">\n        <amexio-header>\n            Reactive Forms Group Inside Forms\n        </amexio-header>\n        <amexio-body>\n            <form [formGroup]="employeeFormGroup">\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-text-input formControlName="FirstName" [(ngModel)]="registration1.firstName" [field-label]="\'First Name\'" [allow-blank]="true" [error-msg]="\'Please enter valid First Name\'" [enable-popover]="true" [place-holder]="\'Please enter first name\'" [min-length]="2"\n                             [icon-feedback]="false" [min-error-msg]="\'Minimum 2 char allowed\'" [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-text-input formControlName="LastName" [(ngModel)]="registration1.lastName" [field-label]="\'Last Name\'" [place-holder]="\'Please enter last name\'" [allow-blank]="true" [error-msg]="\'errorMsg\'" [enable-popover]="true" [min-length]="2" [min-error-msg]="\'Minimum 2 char allowed\'"\n                            [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                            [icon-feedback]="true" >\n                        </amexio-text-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-email-input formControlName="Email" [(ngModel)]="registration1.email" [field-label]="\'Email Id\'" [place-holder]="\'Please enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                        </amexio-email-input>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-number-input formControlName="Age" [(ngModel)]="registration1.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'" [max-value]="100"\n                            [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                        </amexio-number-input>\n                    </amexio-column>\n                </amexio-row>\n\n                <amexio-row>\n                    <amexio-column size="12">\n                        <amexio-fieldset [collapsible]="true" title="Address">\n                            <form formGroupName="AddressFormGroup">\n                                <amexio-row>\n                                    <amexio-column size="5">\n                                        <amexio-textarea-input formControlName="temporaryAddress" [enable-popover]="true" [(ngModel)]="registration1.address.tempAddress" [field-label]="\'Temporary Address\'" [place-holder]="\'Temporary Address\'" [allow-blank]="false" [error-msg]="\'Please enter temporary address\'"\n                                            [icon-feedback]="true" [rows]="\'2\'" [columns]="\'1\'">\n                                        </amexio-textarea-input>\n                                    </amexio-column>\n                                    <amexio-column size="2">\n                                        <amexio-checkbox [field-label]="\'Permanent address same as temporary address\'" (onSelection)="onCheckClick2($event)">\n                                        </amexio-checkbox>\n\n                                    </amexio-column>\n                                    <amexio-column size="5">\n                                        <amexio-textarea-input formControlName="permanentAddress" [(ngModel)]="registration1.address.perAddress" [enable-popover]="true" [field-label]="\'Permanent Address\'" [place-holder]="\'Permanent Address\'" [allow-blank]="false" [error-msg]="\'Please enter permanent address\'"\n                                            [icon-feedback]="true" [rows]="\'2\'" [columns]="\'1\'">\n                                        </amexio-textarea-input>\n                                    </amexio-column>\n                                </amexio-row>\n                            </form>\n                        </amexio-fieldset>\n\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-radio-group formControlName="Gender" [(ngModel)]="registration1.gender" [field-label]="\'Gender\'" [horizontal]="true" [display-field]="\'genderName2\'" [value-field]="\'genderId2\'" [data]="radioGroupData2">\n                        </amexio-radio-group>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-checkbox formControlName="Agree" [(ngModel)]="registration1.agree" [field-label]="\'Agree\'">\n                        </amexio-checkbox>\n                    </amexio-column>\n                </amexio-row>\n            </form>\n        </amexio-body>\n        <amexio-action>\n            <amexio-button [label]="\'Save\'" [disabled]="!employeeFormGroup.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n            </amexio-button>\n        </amexio-action>\n    </amexio-card>\n    <br>\n    <b style="color:green">Form Model Data : </b> {{employeeFormGroup.value | json}}<br>\n    <b style="color:blue">UI Model Data </b>: {{registration1|json}} <br>\n    <br>\n    \x3c!-- Reactive Form with Dynamic Forms --\x3e\n\n    <amexio-card [header]="true" [footer]="true" [footer-align]="\'right\'">\n        <amexio-header>\n            Reactive Form with Dynamic Forms\n        </amexio-header>\n        <amexio-body>\n            <form [formGroup]="dynamicEmployeeForm">\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-text-input formControlName="FirstName" [(ngModel)]="dynamicFormsReg.firstName" [field-label]="\'First Name\'" [allow-blank]="true" [error-msg]="\'Please enter valid First Name\'" [enable-popover]="true" [place-holder]="\'Please enter first name\'" [min-length]="2"\n                             [icon-feedback]="false" [min-error-msg]="\'Minimum 2 char allowed\'" [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-text-input formControlName="LastName" [(ngModel)]="dynamicFormsReg.lastName" [field-label]="\'Last Name\'" [place-holder]="\'Please enter last name\'" [allow-blank]="true" [error-msg]="\'errorMsg\'" [enable-popover]="true" [min-length]="2" [min-error-msg]="\'Minimum 2 char allowed\'"\n                            [max-error-msg]="\'Maximum 20 char allowed\'" [max-length]="20">\n                            [icon-feedback]="true" >\n                        </amexio-text-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-email-input formControlName="Email" [(ngModel)]="dynamicFormsReg.email" [field-label]="\'Email Id\'" [place-holder]="\'Please enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                        </amexio-email-input>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-number-input formControlName="Age" [(ngModel)]="dynamicFormsReg.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'" [max-value]="100"\n                            [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                        </amexio-number-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-button [label]="\'Add Phone\'" [type]="\'green\'" [tooltip]="\'Add Phone\'" (onClick)="addPhoneClick()">\n                        </amexio-button>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-fieldset *ngIf="enableFieldSet" formArrayName="phones" [collapsible]="false" [title]="\'Add Phone Numbers\'">\n                    <amexio-row *ngFor="let phone of phoneForms.controls;let i=index" [formGroupName]="i">\n                        <amexio-column size="3">\n                            <amexio-text-input formControlName="phoneLabel" [(ngModel)]="phone.phoneLabel" enable-popover="true" field-label="Phone Label" name="phoneLabel" error-msg="Please add phone label" place-holder="Enter phone label" allow-blank="false" min-length="3" min-error-msg="Minimum 3 char required"\n                                max-length="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                            </amexio-text-input>\n                        </amexio-column>\n                        <amexio-column size="3">\n                            <amexio-text-input formControlName="countryCode" [(ngModel)]="phone.countryCode" enable-popover="true" field-label="Country Code" name="countryCode" error-msg="Please add country code" place-holder="Enter country code" allow-blank="false" min-length="1"\n                                min-error-msg="Minimum 1 char required" max-length="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                            </amexio-text-input>\n                        </amexio-column>\n                        <amexio-column size="3">\n                            <amexio-text-input formControlName="phoneNumber" [(ngModel)]="phone.phoneNumber" enable-popover="true" field-label="Phone Number" name="phoneNumber" error-msg="Please add phone number" place-holder="Enter phone number" allow-blank="false" min-length="8"\n                                min-error-msg="Minimum 8 char required" max-length="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                            </amexio-text-input>\n                        </amexio-column>\n                        <amexio-column size="3">\n                            \x3c!-- <amexio-button  [label]="\'Add\'"  [type]="\'green\'" [tooltip]="\'add\'"  [icon]="\'fa fa-check\'" (onClick)="addClick({\'phoneLabel\':phone.phoneLabel,\'countryCode\':phone.countryCode,\'phoneNumber\':phone.phoneNumber})">\n                                </amexio-button> --\x3e\n                            <amexio-button [label]="\'Delete\'" [type]="\'red\'" [tooltip]="\'delete\'" [icon]="\'fa fa-trash\'" (onClick)="onDeleteClick(i)">\n                            </amexio-button>\n                        </amexio-column>\n                    </amexio-row>\n                </amexio-fieldset>\n                <amexio-row>\n                    <amexio-column size="6">\n                        <amexio-radio-group formControlName="Gender" [(ngModel)]="dynamicFormsReg.gender" [field-label]="\'Gender\'" [horizontal]="true" [display-field]="\'genderName3\'" [value-field]="\'genderId3\'" [data]="radioGroupData3">\n                        </amexio-radio-group>\n                    </amexio-column>\n                    <amexio-column size="6">\n                        <amexio-checkbox formControlName="Agree" [(ngModel)]="dynamicFormsReg.agree" [field-label]="\'Agree\'">\n                        </amexio-checkbox>\n                    </amexio-column>\n                </amexio-row>\n\n            </form>\n        </amexio-body>\n        <amexio-action>\n            <amexio-button [label]="\'Save\'" [disabled]="!dynamicEmployeeForm.valid" [type]="\'green\'" [tooltip]="\'Save Form\'">\n            </amexio-button>\n        </amexio-action>\n    </amexio-card>\n    <br>\n    <b style="color:green">Form Model Data : </b> {{dynamicEmployeeForm.value | json}}<br>\n    \x3c!-- <b style="color:blue">UI Model Data </b>: {{dynamicFormsReg|json}} <br> --\x3e\n\n    <br>\n\n</amexio-api-demo>\n</amexio-api-structure>\n'},tioD:function(e,o,a){"use strict";a.r(o),o.default=' \n\n <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/forms/amexioforms.json\'">\n    <amexio-api-demo>\n    \n <h2>Demo: Form </h2>\n    <amexio-form #simpleForm form-name="validateForm" header="true" show-error="true">\n        <amexio-form-header style=\'width:100%;\'>\n            Form\n        </amexio-form-header>\n        <amexio-form-body>\n            <amexio-row>\n                <amexio-column [size]="6">\n                    <amexio-text-input [min-length]="3" [(ngModel)]="userRegistration.firstName" [max-length]="5" [allow-blank]="false" field-label="First Name" name="firstName" place-holder="Enter first name" icon-feedback="true">\n                    </amexio-text-input>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-text-input field-label="Last Name" name="lastName" [(ngModel)]="userRegistration.lastName" place-holder="Enter last name(not mandatory)" allow-blank="true" error-msg="Please enter last name" [min-length]="3" min-error-msg="Minimum 3 char required"\n                        [max-length]="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                    </amexio-text-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-textarea-input  [field-label]="\'Address\'" name="Address" [(ngModel)]="userRegistration.address" [place-holder]="\'Enter address\'" [error-msg]="\'Please enter address\'" [icon-feedback]="true" [rows]="\'1\'" [columns]="\'2\'" [allow-blank]="false"\n                [enable-popover]="true"></amexio-textarea-input>\n            <amexio-row>\n                <amexio-column [size]="6">\n                    <amexio-radio-group [name]="\'genderList\'" [field-label]="\'Gender\'" [horizontal]="true" [allow-blank]="false" [(ngModel)]="userRegistration.gender" [data-reader]="\'response.data\'" [display-field]="\'gender\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                    </amexio-radio-group>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-checkbox-group [field-label]="\'Hobbies\'" name="hobbies" [(ngModel)]="userRegistration.hobbies" [horizontal]="true" [required]="true"  [data-reader]="\'response.data\'" [display-field]="\'hobbieName\'" [value-field]="\'checked\'" [data]="checkboxGroupdata">\n                    </amexio-checkbox-group>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column [size]="6">\n                    <amexio-tag-input [data-reader]="\'response.data\'" [http-url]="\'assets/data/componentdata/countryy.json\'" [has-label]="true" [http-method]="\'get\'" [key]="\'countryName\'" [allow-blank]="false" [display-field]="\'countryName\'" [field-label]="\'Having visa\'">\n                    </amexio-tag-input>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-dropdown [place-holder]="\'Choose City\'" name="city" [(ngModel)]="userRegistration.city" [allow-blank]="false" [data-reader]="\'response.data\'" [field-label]="\'City\'" [http-url]="\'assets/data/componentdata/cities.json\'" [http-method]="\'get\'" [search]="\'true\'"\n                        [display-field]="\'cityName\'" [value-field]="\'cityName\'">\n                    </amexio-dropdown>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column size="6">\n                    <amexio-number-input [name]="\'age\'" [(ngModel)]="userRegistration.age" [enable-popover]="true" [field-label]="\'Age\'" [place-holder]="\'Enter age\'" [allow-blank]="false" [error-msg]="\'Please enter age\'" [min-value]="18" [min-error-msg]="\'age can not be less than 18\'"\n                        [max-value]="100" [max-error-msg]="\'age can not be greater than 100\'" [icon-feedback]="true">\n                    </amexio-number-input>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-date-time-picker [(ngModel)]="userRegistration.dateOfBirth" name="dateOfBirth" [field-label]="\'Date Of Birth\'" [time-picker]="false" [date-picker]="true" [required]="true">\n                    </amexio-date-time-picker>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column [size]="6">\n                    <amexio-email-input [field-label]="\'Email Id\'" name="email" [(ngModel)]="userRegistration.email" [place-holder]="\'Enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                    </amexio-email-input>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-password-input [enable-popover]="true" [field-label]="\'Password Input\'" name="password" [(ngModel)]="userRegistration.password" [place-holder]="\'Enter Password\'" [allow-blank]="false" [error-msg]="\'Please enter password\'" [min-length]="6" [min-error-msg]="\'Minimum 6 char required\'"\n                        [max-length]="32" [max-error-msg]="\'Maximum 32 char allowed\'" [icon-feedback]="true">\n                    </amexio-password-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-checkbox [field-label]="\'Agree\'" name="agree" [required]="true" [(ngModel)]="userRegistration.agree">\n            </amexio-checkbox>\n        </amexio-form-body>\n        <amexio-form-action>\n            <amexio-button [disabled]="false" [label]="\'OK\'" [type]="\'primary\'" [tooltip]="\'Save\'" [form-bind]="\'validateForm\'">\n            </amexio-button>\n            <amexio-button [label]="\'Cancel\'" [type]="\'theme-backgroundcolor\'" [tooltip]="\'Cancel\'">\n            </amexio-button>\n        </amexio-form-action>\n    </amexio-form>\n    <br>\n  \n    <h2>Demo: Form with Toolbar</h2>\n    <amexio-form form-name="validateForm" header="true" show-error="true">\n        <amexio-form-header style=\'width:100%;display:inherit\'>\n            <amexio-toolbar>\n                <amexio-toolbar-item position-left>\n                    <amexio-label size="small">\n                        Registration\n                    </amexio-label>\n                </amexio-toolbar-item>\n\n                <amexio-toolbar-item position-right [seperator-position]="\'left\'">\n                    <amexio-image aria-hidden="true" [icon-class]="\'fa fa-th\'"> </amexio-image>\n                  </amexio-toolbar-item>\n                  <amexio-toolbar-item position-right [seperator-position]="\'left\'">\n                    <amexio-image aria-hidden="true" [icon-class]="\'fa fa-info-circle\'"> </amexio-image>\n                  </amexio-toolbar-item>\n                  <amexio-toolbar-item position-right [seperator-position]="\'left\'">\n                    <amexio-image aria-hidden="true" [icon-class]="\'fa fa-question-circle\'"> </amexio-image>\n                  </amexio-toolbar-item>\n                  <amexio-toolbar-item position-right [seperator-position]="\'left\'">\n                    <amexio-image aria-hidden="true" [icon-class]="\'fa fa-cog\'"> </amexio-image>\n                  </amexio-toolbar-item>\n            </amexio-toolbar>\n        </amexio-form-header>\n        <amexio-form-body>\n            <amexio-row>\n                <amexio-column [size]="6">\n                    <amexio-text-input [min-length]="3" [(ngModel)]="firstName" [max-length]="5" [allow-blank]="false" field-label="First Name" name="firstName" place-holder="Enter first name" icon-feedback="true">\n                    </amexio-text-input>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-text-input field-label="Last Name" name="lastName" [(ngModel)]="lastName" place-holder="Enter last name(not mandatory)" allow-blank="true" error-msg="Please enter last name" [min-length]="3" min-error-msg="Minimum 3 char required" [max-length]="10"\n                        max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                    </amexio-text-input>\n                </amexio-column>\n\n            </amexio-row>\n        </amexio-form-body>\n        <amexio-form-action>\n            <amexio-button [label]="\'Save\'" [type]="\'primary\'" [tooltip]="\'Save\'" [form-bind]="\'validateForm\'">\n            </amexio-button>\n            <amexio-button [label]="\'Cancel\'" [type]="\'theme-backgroundcolor\'" [tooltip]="\'Cancel\'">\n            </amexio-button>\n        </amexio-form-action>\n    </amexio-form>\n    <br>\n    <h2>Demo: Employee Registration with address </h2>\n    <amexio-form #empForm form-name="empployeeForm" header="true" [header-align]="\'left\'" show-error="true">\n        <amexio-form-header style=\'width:100%; display:flex;justify-content:inherit;\'>\n            Employee Registration\n        </amexio-form-header>\n        <amexio-form-body>\n            <amexio-row>\n                <amexio-column [size]="6">\n                    <amexio-text-input [(ngModel)]="emplpoyeeRegistration.firstName" [min-length]="3" [max-length]="5" [allow-blank]="false" field-label="First Name" [name]="\'Firstname\'" place-holder="Enter first name" icon-feedback="true">\n                    </amexio-text-input>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-text-input field-label="Last Name" [name]="\'lastName\'" [(ngModel)]="emplpoyeeRegistration.lastName" place-holder="Enter last name" [allow-blank]="false" error-msg="Please enter last name" [min-length]="3" min-error-msg="Minimum 3 char required"\n                        [max-length]="10" max-error-msg="Maximum 10 char allowed" icon-feedback="true">\n                    </amexio-text-input>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column [size]="6">\n                    <amexio-radio-group [name]="\'genderList\'" [field-label]="\'Gender\'" [horizontal]="true" [allow-blank]="false" [(ngModel)]="emplpoyeeRegistration.gender" [data-reader]="\'response.data\'" [display-field]="\'gender\'" [value-field]="\'genderId\'" [data]="radioGroupData">\n                    </amexio-radio-group>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-dropdown [place-holder]="\'Choose Department\'" [name]="\'department\'" [(ngModel)]="emplpoyeeRegistration.department" [allow-blank]="false" [field-label]="\'Department\'" [search]="\'true\'" [data]="departmentData" [display-field]="\'deptName\'" [value-field]="\'deptId\'">\n                    </amexio-dropdown>\n                </amexio-column>\n            </amexio-row>\n            <amexio-row>\n                <amexio-column [size]="6">\n                    <amexio-email-input [field-label]="\'Email Id\'" [name]="\'email\'" [(ngModel)]="emplpoyeeRegistration.email" [place-holder]="\'Enter Email Id\'" [allow-blank]="false" [error-msg]="\'Please Enter Email Id\'" [enable-popover]="true" [icon-feedback]="true">\n                    </amexio-email-input>\n                </amexio-column>\n                <amexio-column [size]="6">\n                    <amexio-date-time-picker [(ngModel)]="emplpoyeeRegistration.dateOfBirth" [name]="\'dateOfBirth\'" [field-label]="\'Date Of Birth\'" [time-picker]="false" [date-picker]="true" [required]="true">\n                    </amexio-date-time-picker>\n                </amexio-column>\n            </amexio-row>\n            <amexio-fieldset [form-group]="\'address\'" title="Address">\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-text-input field-label="Street" [name]="\'street\'" [(ngModel)]="emplpoyeeRegistration.address.street" place-holder="Enter street" enable-popover="true" [min-length]="3" min-error-msg="Minimum 3 char required" [allow-blank]="false" error-msg="Please enter street"\n                            icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                    <amexio-column [size]="6">\n                        <amexio-text-input field-label="city" [name]="\'city\'" [(ngModel)]="emplpoyeeRegistration.address.city" [min-length]="3" enable-popover="true" min-error-msg="Minimum 3 char required" place-holder="Enter city" [allow-blank]="false" error-msg="Please enter city"\n                            icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                </amexio-row>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-text-input field-label="pincode" [name]="\'pincode\'" [(ngModel)]="emplpoyeeRegistration.address.pincode" [min-length]="3" enable-popover="true" min-error-msg="Minimum 3 char required" place-holder="Enter pincode" [allow-blank]="false" error-msg="Please enter pincode"\n                            icon-feedback="true">\n                        </amexio-text-input>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-fieldset>\n        </amexio-form-body>\n        <amexio-form-action>\n            <amexio-button [disabled]="false" [label]="\'OK\'" [type]="\'primary\'" [tooltip]="\'Save\'" [form-bind]="\'empployeeForm\'">\n            </amexio-button>\n            <amexio-button [label]="\'Cancel\'" [type]="\'theme-backgroundcolor\'" [tooltip]="\'Cancel\'">\n            </amexio-button>\n        </amexio-form-action>\n    </amexio-form>\n    <br>\n    <b style="color:green">Form Model Data : </b> {{empForm.form.value | json}}<br>\n    <b style="color:blue">UI Model Data : </b> {{emplpoyeeRegistration | json}} <br>\n\n\n    </amexio-api-demo>\n    </amexio-api-structure>\n\n\n'}}]);