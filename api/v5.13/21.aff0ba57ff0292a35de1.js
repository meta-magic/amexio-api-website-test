(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{BLWB:function(e,o,t){"use strict";t.r(o);var a=t("CcnG"),n=t("ZYCi"),i=t("JQBr"),l=t("Ip0R"),r=t("gIcY"),m=t("O4vx"),s=t("t/Na"),c=t("9NvV"),b=t("QVLW"),d=function(e,o,t,a){var n,i=arguments.length,l=i<3?o:null===a?a=Object.getOwnPropertyDescriptor(o,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,o,t,a);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(l=(i<3?n(l):i>3?n(o,t,l):n(o,t))||l);return i>3&&l&&Object.defineProperty(o,t,l),l},x=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},h=function(){function e(e,o,t,a){this.http=e,this.httpService=o,this.cookieService=t,this.themeServiceService=a,this.hasThemeInit=!1}return e.prototype.ngOnInit=function(){var e,o=this;this.http.get("assets/data/theme/themes-api-showcase.json",{responseType:"json"}).subscribe(function(o){e=o},function(e){},function(){o.mdThemeData=e}),this.http.get("assets/data/theme/theme-api-showcase-amexio.json",{responseType:"json"}).subscribe(function(o){e=o},function(e){},function(){o.amexioThemeData=e})},e.prototype.addNewTheme=function(e,o){var t=this,a=document.createElement("link");a.onload=function(){t.removeExistingTheme(o)},a.setAttribute("rel","stylesheet"),a.id="themeid",a.href=e,document.head.appendChild(a)},e.prototype.removeExistingTheme=function(e){if(null!=e&&e&&0!=e.length)for(var o=0;o<e.length;o++){var t=e[o];"themeid"==t.id&&document.head.removeChild(t)}},e.prototype.themeChange=function(e){this.themeServiceService.getTheme(e)},e=d([Object(a.n)({selector:"theme-page",template:t("l5iu")}),x("design:paramtypes",[s.a,c.a,i.a,b.a])],e)}(),p=function(e,o,t,a){var n,i=arguments.length,l=i<3?o:null===a?a=Object.getOwnPropertyDescriptor(o,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,o,t,a);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(l=(i<3?n(l):i>3?n(o,t,l):n(o,t))||l);return i>3&&l&&Object.defineProperty(o,t,l),l},u=function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},f=function(){function e(e){this.themeServiceService=e}return e.prototype.ngOnInit=function(){},e.prototype.themeChange=function(e){this.themeServiceService.getTheme(e)},e.prototype.onChange=function(e){this.isMoreDetails=e},p([Object(a.E)("data"),u("design:type",Array)],e.prototype,"data",void 0),p([Object(a.E)("more-details"),u("design:type",Boolean)],e.prototype,"isMoreDetails",void 0),e=p([Object(a.n)({selector:"amexio-theme",template:t("TyRJ")}),u("design:paramtypes",[b.a])],e)}();t.d(o,"ThemeModule",function(){return v}),t.d(o,"routedComponents",function(){return w});var g=function(e,o,t,a){var n,i=arguments.length,l=i<3?o:null===a?a=Object.getOwnPropertyDescriptor(o,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,o,t,a);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(l=(i<3?n(l):i>3?n(o,t,l):n(o,t))||l);return i>3&&l&&Object.defineProperty(o,t,l),l},y=[{path:"",component:h}],v=function(){function e(){}return e=g([Object(a.J)({imports:[l.b,s.b,r.d,m.j,n.d.forChild(y)],exports:[n.d],declarations:[h,f],providers:[i.a]})],e)}(),w=[h]},TyRJ:function(e,o){e.exports='<amexio-row>\n    <amexio-column [size]=12>\n        <div style="display: flex;" class="flex-start">\n            \n            <amexio-label [size]="\'medium-bold\'">\n                More Details: &nbsp;\n            </amexio-label>\n            <amexio-toggle (onChange)="onChange($event)" [size]="\'small\'" [type]="1" shape="square"> </amexio-toggle>\n        </div>\n    </amexio-column>\n</amexio-row>\n\n<amexio-row *ngFor="let row of data">\n    <amexio-column [fit]="true" [size]="(12/row.length)" *ngFor="let col of row">\n        <div class="card-container">\n            <header class="card-header flex-start" style="justify-content: space-between;"\n                [ngStyle]="{\'background-color\':col.navBarBGColor, \'color\':col.navBarFontColor}">\n                <amexio-label>{{col.themeName}}</amexio-label>\n                <amexio-button [label]="\'Test\'" [type]="\'default\'" (onClick)="themeChange(col)"></amexio-button>\n            </header>\n            <div *ngIf="isMoreDetails" class="card-body cardbody">\n                <amexio-image [path]="\'assets/images/theme-icons/\'+col.themeImageFile"></amexio-image> <br />\n                <amexio-label [size]="\'small\'">Version: {{col.version}}</amexio-label> <br />\n                <amexio-label>Style: {{col.style}}</amexio-label> <br />\n            </div>\n            <footer class="card-footer flex-center">\n                <div *ngFor="let color of col.themes"\n                    style="display: block; height: 20px; width:20px; padding: 5px; margin: 0px 5px;"\n                    [ngStyle]="{\'background-color\': color}"></div>\n            </footer>\n        </div>\n    </amexio-column>\n</amexio-row>'},l5iu:function(e,o){e.exports='<amexio-image [path]="\'assets/images/logos/amexio_colors.jpeg\'" [tooltip]="\'Image\'"></amexio-image>\n\n<amexio-tab-view [closable]="false">\n    <amexio-tab title="Material Design" [active]="true">\n        <amexio-theme [data]="mdThemeData"></amexio-theme>  \n    </amexio-tab>\n    <amexio-tab title="Amexio">\n        \x3c!-- <amexio-theme [data]="amexioThemeData"></amexio-theme>   --\x3e\n    </amexio-tab>\n    <amexio-tab title="Colors">\n        Eventually we can apply this attribute [amexio-color] to all components, currently we can apply to progress bar\n        and datapoints.\n        To know more refer the API reference section\n        <amexio-datagrid title="Amexio Colors" [enable-column-fiter]="false" [http-method]="\'get\'"\n            [http-url]="\'assets/data/theme/amexio-colours.json\'" [data-reader]="\'colors\'" [enable-data-filter]="false">\n            <amexio-data-table-column [width]="15" [data-index]="\'name\'" [data-type]="\'string\'" [hidden]="false"\n                [text]="\'Name\'"></amexio-data-table-column>\n            <amexio-data-table-column [width]="15" [data-index]="\'css\'" [data-type]="\'string\'" [hidden]="false"\n                [text]="\'CSS Class Name\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <span>\n                        [amexio-color] = \'{{row.css}}\' </span>\n                </ng-template>\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="15" [data-index]="\'BG\'" [data-type]="\'string\'" [hidden]="false"\n                [text]="\'Color\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <span>\n                        <div [ngStyle]="{\'background-color\':row.BG, \'color\' : row.font}">\n                            This is amexio color {{ row.name }} background <b> {{ row.BG }} </b> with opposite font\n                            color <b> {{ row.font }} </b>\n                        </div>\n                    </span>\n                </ng-template>\n            </amexio-data-table-column>\n        </amexio-datagrid>\n    </amexio-tab>\n    <amexio-tab title="Getting Started">\n        <amexio-label size="large">To install the Amexio Colors:</amexio-label>\n        <amexio-box background-color="blue" border="left" border-color="blue" padding="true">\n            <amexio-label size="medium-bold">$ sudo npm install -g amexio-colors</amexio-label>\n        </amexio-box>\n        <amexio-label size="large">Check the Amexio Colors version:</amexio-label>\n        <amexio-box background-color="blue" border="left" border-color="blue" padding="true">\n            <amexio-label size="medium-bold"> $ ac </amexio-label><br />\n            <amexio-label> Amexio Colors v1.0 </amexio-label><br />\n            <amexio-label> Copyright (c) 2018, MetaMagic Global Inc, NJ, USA </amexio-label><br />\n            <amexio-label> ..... </amexio-label><br />\n        </amexio-box>\n        <amexio-label size="large">To Generate Amexio Material Design Themes</amexio-label>\n\n        <amexio-box background-color="blue" border="left" border-color="blue" padding="true">\n            <amexio-label size="medium-bold">$ pwd</amexio-label><br />\n            <amexio-label size="medium">/home/user/</amexio-label><br /><br />\n            <amexio-label size="medium-bold">$ mkdir mythemes</amexio-label><br />\n            <amexio-label size="medium-bold">$ echo "// Amexio Themes v0.0 " >> Themes-Data.txt</amexio-label><br />\n            <amexio-label size="medium-bold">$ echo "// Design-Type : Material Design " >> Themes-Data.txt\n            </amexio-label><br />\n            <amexio-label size="medium-bold">$ echo "// Theme-Version : 4.0 " >> Themes-Data.txt</amexio-label><br />\n            <amexio-label size="medium-bold">$ echo "army-olive,#4B5320,#708238" >> Themes-Data.txt</amexio-label><br />\n            <amexio-label size="medium-bold">$ echo "ash-stone-black,#544C4A,#877F7D" >> Themes-Data.txt</amexio-label>\n            <br />\n            <br />\n            <amexio-label size="medium-bold">$ ac Themes-Data.txt /home/user/mythemes/</amexio-label><br />\n        </amexio-box>\n        <amexio-label size="large"> Amexio Colors API Documentation</amexio-label>\n        <p>\n            <amexio-label>\n                Checkout the Amexio Colors API Documentation published in </amexio-label>\n            <a href="https://meta-magic.github.io/AmexioColors/" target="_blank"> GitHub Pages</a>\n            <br />\n            <amexio-label>For Testing the Themes Autogenerated by the Amexio Colors Checkout the Amexio</amexio-label>\n            <a href="https://api.amexio.org" target="_blank"> API Site</a>\n        </p>\n\n    </amexio-tab>\n</amexio-tab-view>'}}]);