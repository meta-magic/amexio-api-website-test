(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"+NDx":function(e,t){e.exports='<amexio-api-structure  [url]="\'assets/componentjson/data/timeline.json\'">\n    <amexio-api-demo>\n      \n      <amexio-card header="true">\n            <amexio-header> Timeline Component (Example-1)</amexio-header>\n            <amexio-body>\n                <amexio-row>\n                    <amexio-column [size]="12">\n                        <amexio-timeline [content-alignment]="\'\'">\n                            <amexio-timeline-event [label]="\'08:30\'" [icon]="\'fa fa-file\'" [content-border]="true">\n                                <amexio-label size="large-bold">REGISTRATION</amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'09:00\'" [icon]="\'fa fa-microphone\'">\n                                <amexio-label>Keynote Talk:Disrupting the Disruptors- Where does Blockchain go from here\n                                </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'09:15\'" [icon]="\'fa fa-microphone\'">\n                                <amexio-label>Blockchain in Enterprise- How Companies are using Blockchain Today\n                                </amexio-label>\n                                <amexio-chips>\n                                    <amexio-chip [label]="\'Araf Karsh Hamid\'" [color]="\'grey\'">\n                                    </amexio-chip>\n                                </amexio-chips>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'09:50\'" [icon]="\'fa fa-coffee\'">\n                                <amexio-label>Networking Break\n                                </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'10:05\'" [icon]="\'fa fa-microphone\'">\n                                <amexio-label>Understand Blockchain HyperLedger Fabric For Enterprises\n                                </amexio-label>\n                                <amexio-chips>\n                                    <amexio-chip [label]="\'Ketan Gote\'" [color]="\'grey\'">\n                                    </amexio-chip>\n                                </amexio-chips>\n                            </amexio-timeline-event>\n                        </amexio-timeline> \n                    </amexio-column>\n                </amexio-row>\n            </amexio-body>\n        </amexio-card>\n        <amexio-card header="true">\n            <amexio-header> Timeline Component (Example-2)</amexio-header>\n            <amexio-body>\n                <amexio-row>\n                    <amexio-column [size]="12">\n                        <amexio-timeline [content-alignment]="\'\'">\n                            <amexio-timeline-event [label]="\'\'" [icon]="\'fa fa-asterisk\'">\n                                <amexio-image [path]="\'assets/images/timeline/ataturk_1.jpg\'" [filter]="\'sepia\'" [image-title]="\'1981\'" [title-position]="\'bottom-left\'">\n                                </amexio-image>\n                                <amexio-label>\n                                    He was born in 1881 (probably in the spring) in Salonica, then an Ottoman city, now inGreece. His father Ali Riza, a customs\n                                    official turned lumber merchant, died when Mustafawas still a boy. His mother\n                                    Zubeyde, adevout and strong-willed woman, raised him and his sister.\n                                </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'\'" [icon]="\'fa fa-asterisk\'">\n                                <amexio-image [path]="\'assets/images/timeline/mustafa-kemal.jpg\'" [filter]="\'sepia\'" [image-title]="\'1983\'" [title-position]="\'bottom-left\'">\n                                </amexio-image>\n                                <amexio-label>First enrolled in a traditionalreligious school, he soon switched to a modern school.\n                                    In 1893, he entered a military highschool where his mathematics teacher gave\n                                    him the second name Kemal (meaning perfection)in recognition of young Mustafa\'s\n                                    superior achievement.\n                                </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'\'" [icon]="\'fa fa-asterisk\'">\n                                <amexio-image [path]="\'assets/images/timeline/mustafa-kemal1.jpg\'" [filter]="\'sepia\'" [image-title]="\'1905\'" [title-position]="\'bottom-left\'">\n                                </amexio-image>\n                                <amexio-label>In 1905, Mustafa Kemal graduated from the War Academy in Istanbul with the rank of\n                                    Staff Captain. Posted in Damascus, he started with several colleagues, a clandestinesociety\n                                    called "Homeland and Freedom" to fight against the Sultan\'sdespotism.\n                                </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'\'" [icon]="\'fa fa-asterisk\'">\n                                <amexio-image [path]="\'assets/images/timeline/ataturk-10-kasim.jpg\'" [filter]="\'sepia\'" [image-title]="\'1908\'" [title-position]="\'bottom-left\'">\n                                </amexio-image>\n                                <amexio-label>In 1908 he helped the group of officers who toppled the Sultan. Mustafa Kemal\'scareer\n                                    flourished as he won his heroism in the far corners of the Ottoman Empire,including\n                                    Albania and Tripoli. He also briefly served as a staff officer in Salonica andIstanbul\n                                    and as a military attache in Sofia.\n                                </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'\'" [icon]="\'fa fa-asterisk\'">\n                                <amexio-image [path]="\'assets/images/timeline/mustafa-kemal2.jpg\'" [filter]="\'sepia\'" [image-title]="\'1915\'" [title-position]="\'bottom-left\'">\n                                </amexio-image>\n                                <amexio-label>In 1915, when Dardanelles campaign was launched, Colonel Mustafa Kemal became anational\n                                    hero by winning successive victories and finally repelling the invaders.\n                                </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'\'" [icon]="\'fa fa-asterisk\'">\n                                <amexio-image [path]="\'assets/images/timeline/atat\xfcrk-\xfcn-inan\u0131lmaz-karizmatik.jpg\'" [filter]="\'sepia\'" [image-title]="\'1916\'"\n                                    [title-position]="\'bottom-left\'">\n                                </amexio-image>\n                                <amexio-label>\n                                    Promotedto general in 1916, at age 35, he liberated two major provinces in eastern Turkey thatyear. In the next two years,\n                                    he served as commander of several Ottoman armies inPalestine, Aleppo, and elsewhere,\n                                    achieving another major victory by stopping the enemyadvance at Aleppo.\n                                </amexio-label>\n                            </amexio-timeline-event>\n                        </amexio-timeline>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-body>\n        </amexio-card>\n        <amexio-card header="true">\n            <amexio-header> Timeline Component(Right-Align)</amexio-header>\n            <amexio-body>\n                <amexio-row>\n                    <amexio-column [size]="12">\n                        <amexio-timeline [content-alignment]="\'right\'">\n                            <amexio-timeline-event [label]="\'Week One\'" [icon]="\'fa fa-book\'" [content-border]="true">\n                                <amexio-label size="medium-bold">UNDERSTAND</amexio-label>\n                                <amexio-label size="small">Gather existing knowledge,expose assumptions and unknowns</amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'Week Two\'" [icon]="\'fa fa-certificate\'" [content-border]="true">\n\n                                <amexio-label size="medium-bold"> DIVERGE</amexio-label>\n                                <amexio-label size="small">Elluminate all paths.Our goal is to explore as many possibilities as possible,regardless\n                                    of how realistic,feasible or viable they may or may not be. </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'Week Three\'" [icon]="\'fa fa-asterisk\'" [content-border]="true">\n                                <amexio-label size="medium-bold">CONVERGE</amexio-label>\n                                <amexio-label size="small">Our Goal is to take all of the possibilities that we have exposed over the past two\n                                    weeks and hone in on a single version of the prototype that we will build tomorrow\n                                </amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'Week Four\'" [icon]="\'fa fa-cogs\'" [content-border]="true">\n                                <amexio-label size="medium-bold">PROTOTYPING</amexio-label>\n                                <amexio-label size="small">During this phase you will build a quick and dirty prototype.Since you only have\n                                    at most a week to build the prototype it should be low-fi as you can get away\n                                    with during Testing.</amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'Week Five\'" [icon]="\'fa fa-edit\'" [content-border]="true">\n                                <amexio-label size="medium-bold">TESTING</amexio-label>\n                                <amexio-label size="small">Going into each test you should have a plan of what you area testing and how you\n                                    know if that is successful or not.</amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'Week Six\'" [icon]="\'fa fa-spinner\'" [content-border]="true">\n                                <amexio-label size="medium-bold">REITERATION</amexio-label>\n                                <amexio-label size="small">To reiterate something is to say or do something again, or many times.Let me reiterate:if\n                                    you reapeat yourself,you\'re reiterating the thing you originally said.</amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'Week Seven\'" [icon]="\'fa fa-calendar\'" [content-border]="true">\n                                <amexio-label size="medium-bold">REVIEW</amexio-label>\n                                <amexio-label size="small">To look back over something for evaluation or memory.*The year in review* is a popular\n                                    form of news feature near the end of December.</amexio-label>\n                            </amexio-timeline-event>\n                            <amexio-timeline-event [label]="\'Week Eight\'" [icon]="\'fa fa-thumbs-up\'" [content-border]="true">\n                                <amexio-label size="medium-bold">FINALIZE </amexio-label>\n                                <amexio-label size="small">When you put the finishing touches on something,such as agreeeing on a specific time\n                                    and place to meet your friend on Saturday,you finalie your plans.</amexio-label>\n                            </amexio-timeline-event>\n                        </amexio-timeline>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-body>\n        </amexio-card>\n\n        </amexio-api-demo>\n        </amexio-api-structure>\n'},"0Hs6":function(e,t){e.exports='    \n     <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/filtertree.json\'">\n      <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Filter Tree\n          </amexio-header>\n          <amexio-body>\n            <amexio-tree-filter-view [data-reader]="\'data\'"\n                                     [http-method]="\'get\'" (nodeClick)="getNodeData($event)"\n                                     [http-url]="\'assets/data/componentdata/sidenav.json\'">\n            </amexio-tree-filter-view>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Selected Data\n          </amexio-header>\n          <amexio-body>\n            <pre><code>{{selectedData | json}}</code></pre>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>'},"1pYJ":function(e,t){e.exports='\x3c!-- ARIA. --\x3e\n<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n  <amexio-api-demo>\n  \n    <amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Data Grid With Filter \n          </amexio-header>\n          <amexio-body>\n            <amexio-datagrid\n              [title]="\'Employee Data\'"\n              [page-size] = "10"\n              [data-reader]="\'data\'"\n              [http-url]="\'assets/data/componentdata/datagridgroupby.json\'"\n              [http-method]="\'get\'"\n              [enable-data-filter]="true"\n              (rowSelect)="onRowSelect($event)">\n              <amexio-data-table-column [data-index]="\'preferredFullName\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Full Name\'"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]="\'jobTitle\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Job Title\'">\n              </amexio-data-table-column>\n              <amexio-data-table-column [data-index]="\'salary\'" [data-type]="\'number\'" [hidden]="false" [text]="\'Salary\'"></amexio-data-table-column>\n            </amexio-datagrid>\n            <p><b>Selected row data : </b>{{selectedData | json}}</p>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    </amexio-api-demo>\n    </amexio-api-structure>'},"7LXE":function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/tree.json\'">\n    <amexio-api-demo>\n<amexio-row>\n    <amexio-column size="12">\n        <amexio-card [header]="true">\n            <amexio-header>\n                Drag Drop Functionality within Tree\n            </amexio-header>\n            <amexio-body>\n                <amexio-treeview [data-reader]="\'data\'" [enable-drag]="true" [enable-drop]="true" [data]="treeData">\n                </amexio-treeview>\n            </amexio-body>\n        </amexio-card>\n    </amexio-column>\n\n    <amexio-column size="12">\n        <amexio-card [header]="true" [footer]="false" [footer-align]="\'right\'">\n            <amexio-header>\n                Drag Drop Functionality across Tree\n            </amexio-header>\n            <amexio-body>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-card [header]="true" [footer]="false" [footer-align]="\'right\'">\n                            <amexio-header>\n                                Tree 1\n                            </amexio-header>\n                            <amexio-body>\n                                <amexio-treeview #tree (onDrop)="getDropData1($event)" [data-reader]="\'data\'"\n                                    [enable-drag]="true" [enable-drop]="true" [data]="treeLocalData" [across-tree]="true">\n                                </amexio-treeview>\n                            </amexio-body>\n                        </amexio-card>\n                    </amexio-column>\n\n                    <amexio-column [size]="6">\n                        <amexio-card [header]="true" [footer]="false" [footer-align]="\'right\'">\n                            <amexio-header>\n                                Tree 2\n                            </amexio-header>\n                            <amexio-body>\n                                <amexio-treeview #tree1 (onDrop)="getDropData($event)" [data-reader]="\'data\'"\n                                    [enable-drag]="true" [enable-drop]="true" [data]="treeLocalData1" [across-tree]="true">\n                                </amexio-treeview>\n                            </amexio-body>\n                        </amexio-card>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-body>\n        </amexio-card>\n    </amexio-column>\n\n    <amexio-column size="12">\n        <amexio-card [header]="true" [footer]="false" [footer-align]="\'right\'">\n            <amexio-header>\n                Drag and Drop: Tree to Panel\n            </amexio-header>\n            <amexio-body>\n                <amexio-row>\n                    <amexio-column [size]="6">\n                        <amexio-card [header]="true" [footer]="false" [footer-align]="\'right\'">\n                            <amexio-header>\n                                Tree 1\n                            </amexio-header>\n                            <amexio-body>\n                                <amexio-treeview [data-reader]="\'data\'" (onDrag)="drag($event)" [enable-drag]="true"\n                                    [enable-drop]="false" [data]="treeLocalData">\n                                </amexio-treeview>\n                            </amexio-body>\n                        </amexio-card>\n                    </amexio-column>\n\n                    <amexio-column [size]="6">\n                        <amexio-panel (dragover)="dragOver($event)" (drop)="drop($event)" [header]="true" [title]="\'Panel\'"\n                            [expanded]="true">\n                            <pre><code>{{selectedData | json}}</code></pre>\n                        </amexio-panel>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-body>\n        </amexio-card>\n    </amexio-column>\n</amexio-row>\n</amexio-api-demo>\n</amexio-api-structure>'},"9g6H":function(e,t){e.exports='   \n   <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n    <amexio-api-demo>\n    \n   \n   <amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Data Grid with scroll \n          </amexio-header>\n          <amexio-body>\n            <amexio-datagrid\n              [enable-column-fiter]="true" [height]="200" title="Country Grid" [enable-checkbox]="false"  [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/country.json\'" [data-reader]="\'data\'"  [page-size] = "10">\n              <amexio-data-table-column [data-index]="\'countryName\'" \n                                        [data-type]="\'string\'" \n                                        [hidden]="false" [text]="\'Name\'" (selectedRowData)="getSelectedData($event)">\n              </amexio-data-table-column>\n              <amexio-data-table-column [data-index]="\'countryCode1\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Code\'"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]="\'currencyName\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Currency\'"></amexio-data-table-column>\n            </amexio-datagrid>\n         \x3c!--   <p><b>Selected row data : </b>{{selectedData | json}}</p>--\x3e\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    </amexio-api-demo>\n    </amexio-api-structure>'},LmjX:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/horizontaltree.json\'">\n  <amexio-api-demo>\n  \n  <amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Horizontal Tree \n          </amexio-header>\n          <amexio-body>\n            <amexio-horizontal-treeview [data-reader]="\'data\'"\n                                     [http-method]="\'get\'" \n                                     [label]="\'Menu\'"\n                                     (nodeClick)="getNodeData($event)"\n                                     [http-url]="\'assets/data/componentdata/sidenav.json\'">\n            </amexio-horizontal-treeview>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Selected Data \n          </amexio-header>\n          <amexio-body>\n            <pre><code>{{selectedData | json}}</code></pre>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    </amexio-api-demo>\n    </amexio-api-structure>\n    '},MSlN:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/tree.json\'">\n    <amexio-api-demo>\n        <amexio-row>\n            <amexio-column size="6" [fit]="true">\n                <amexio-card [header]="true">\n                    <amexio-header>\n                        Simple Tree\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-treeview [data-reader]="\'data\'" [data]="treeLocalData" (nodeClick)="getNodeData($event)">\n                        </amexio-treeview>\n                    </amexio-body>\n                </amexio-card>\n            </amexio-column>\n            <amexio-column size="6" [fit]="true">\n                <amexio-card [header]="true">\n                    <amexio-header>\n                        Selected Data\n                    </amexio-header>\n                    <amexio-body>\n                        <pre><code>{{selectedData | json}}</code></pre>\n                    </amexio-body>\n                </amexio-card>\n            </amexio-column>\n        </amexio-row>\n\n\n        <amexio-card header="true">\n            <amexio-header>\n                Dynamically Changes Tree Data\n            </amexio-header>\n            <amexio-body>\n\n                <p> By Default Tree consumes standard JSON structure i.e to display node/leaf \u201cText\u201d Key\n                    should be present in JSON && array with \u201cChildren\u201d Key present in JSON.\n                    Now with 5.2.x release Amexio-tree component can consume user defined data structure and\n                    pass what is key for node/leaf and what is key for children array.\n                </p>\n                <amexio-row>\n                    <amexio-column size="6" [fit]="true">\n                        <amexio-card [header]="true">\n                            <amexio-header>\n                                Tree with user define keys\n                            </amexio-header>\n                            <amexio-body>\n\n                                <amexio-treeview [data-reader]="\'customArray\'" [display-key]="\'demo\'" [child-array-key]="\'object\'"\n                                    [data]="customArrayLocalData" (nodeClick)="getCustomNodeData($event)">\n                                </amexio-treeview>\n                            </amexio-body>\n                        </amexio-card>\n                    </amexio-column>\n                    <amexio-column size="6" [fit]="true">\n                        <amexio-card [header]="true">\n                            <amexio-header>\n                                Selected Data\n                            </amexio-header>\n                            <amexio-body>\n                                <pre><code>{{selectedCustomData | json}}</code></pre>\n                            </amexio-body>\n                        </amexio-card>\n                    </amexio-column>\n                </amexio-row>\n            </amexio-body>\n        </amexio-card>\n\n    </amexio-api-demo>\n</amexio-api-structure>'},N5qv:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n    <amexio-api-demo>\n\n        <amexio-row>\n            <amexio-column size="12">\n                <amexio-card [header]="true">\n                    <amexio-header>\n                        Grid with Toolbar\n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-datagrid [enable-column-fiter]="true" title=" Grid with Toolbar " [enable-checkbox]="false"\n                            [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/country.json\'" [data-reader]="\'data\'"\n                            [page-size]="10">\n                            <amexio-datagrid-header>\n                                <amexio-drop-down-menu [icon-align]="\'left\'" [title]="\'Country Currency \'" [padding]="\'5px 10px\'"\n                                    [icon]="\'fa fa-empire\'">\n                                    <amexio-drop-down-menu-item [label]="\'India\'" [icon]="\'fa fa-inr\'">\n                                    </amexio-drop-down-menu-item>\n                                    <amexio-drop-down-menu-item [label]="\'Russia\'" [icon]="\'fa fa-rouble\'" [separator]="true">\n                                    </amexio-drop-down-menu-item>\n                                    <amexio-drop-down-menu-item [label]="\'Japan\'" [icon]="\'fa fa-cny\'">\n                                    </amexio-drop-down-menu-item>\n                                    <amexio-drop-down-menu-item [label]="\'United States\'" [icon]="\'fa fa-dollar\'">\n                                    </amexio-drop-down-menu-item>\n                                </amexio-drop-down-menu>\n                                <amexio-label size="small">\n                                    My Drive\n                                </amexio-label>\n                                <amexio-image aria-hidden="true" [icon-class]="\'fa fa-info-circle\'"> </amexio-image>\n\n                            </amexio-datagrid-header>\n                            <amexio-data-table-column [data-index]="\'countryName\'" [data-type]="\'string\'" [hidden]="false"\n                                [text]="\'Name\'" (selectedRowData)="getSelectedData($event)">\n                            </amexio-data-table-column>\n                            <amexio-data-table-column [sort]="false" [data-index]="\'countryCode1\'" [data-type]="\'string\'"\n                                [hidden]="false" [text]="\'Code\'"></amexio-data-table-column>\n                            <amexio-data-table-column [data-index]="\'currencyName\'" [data-type]="\'string\'" [hidden]="false"\n                                [text]="\'Currency\'"></amexio-data-table-column>\n                        </amexio-datagrid>\n                    </amexio-body>\n                </amexio-card>\n            </amexio-column>\n        </amexio-row>\n\n    </amexio-api-demo>\n</amexio-api-structure>'},NL5N:function(e,t){e.exports='\n<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/treedatagrid.json\'">\n    <amexio-api-demo>\n<amexio-row>\n            <amexio-column size="12">\n                <amexio-card [footer]="false" [header]="true">\n                    <amexio-header> Tree Data Grid </amexio-header>\n                    <amexio-body>\n                        <amexio-tree-data-table [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/treedatatable.json\'"\n                            [data-reader]="\'data\'" (selectedRecord)="getSelectedData($event)">\n                            <amexio-data-table-column [data-index]="\'task\'" [data-type]="\'string\'" [hidden]="false"\n                                [text]="\'Task\'"></amexio-data-table-column>\n                            <amexio-data-table-column [data-index]="\'user\'" [data-type]="\'string\'" [hidden]="false"\n                                [text]="\'User\'"></amexio-data-table-column>\n                            <amexio-data-table-column [data-index]="\'duration\'" [data-type]="\'number\'" [hidden]="false"\n                                [text]="\'Duration\'"></amexio-data-table-column>\n                        </amexio-tree-data-table>\n                        <p><b>Clicked Row Data : </b>{{selectedData | json}}</p>\n                    </amexio-body>\n                </amexio-card>\n            </amexio-column>\n        </amexio-row>\n\n\n        </amexio-api-demo>\n        </amexio-api-structure>\n        '},Qp4y:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData"  [url]="\'assets/componentjson/data/item-selector.json\'">\n  <amexio-api-demo>\n   \n   <amexio-row>\n      <amexio-column [size]="12">\n        <amexio-card >\n          <amexio-body>\n            <amexio-row>\n              <amexio-column [size]="12">\n                <amexio-item-selector  [height]="250" [display-field]="\'countryName\'"\n                                      [value-field]="\'countryId\'"  (selectedRecords)="getSelectedData($event)"\n                                      [http-url]="\'assets/data/componentdata/selectordata.json\'"\n                                      [http-method]="\'get\'" [data-reader]="\'data\'" \n                                        >\n                </amexio-item-selector>\n              </amexio-column>\n            </amexio-row>\n            \n            <amexio-row>\n              <amexio-column [size]="12">\n                <amexio-card [header]="true">\n                  <amexio-header>Selected data</amexio-header>\n                  <amexio-body>\n                    {{selectedData|json}}\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n            </amexio-row>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    </amexio-api-demo>\n    </amexio-api-structure>'},VjMS:function(e,t){e.exports='   \n   <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n    <amexio-api-demo>\n    \n   <amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Data Grid with Context Menu \n          </amexio-header>\n          <amexio-body>\n            <amexio-datagrid\n              [enable-column-fiter]="true" [context-menu]="contextMenuRowData" [height]="200" title="Country Grid" [enable-checkbox]="false"  [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/country.json\'" [data-reader]="\'data\'"  [page-size] = "10">\n              <amexio-data-table-column [data-index]="\'countryName\'" \n                                        [data-type]="\'string\'" \n                                        [context-menu]="contextMenuColData"\n                                        [hidden]="false" [text]="\'Name\'">\n              </amexio-data-table-column>\n              <amexio-data-table-column [data-index]="\'countryCode1\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Code\'"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]="\'currencyName\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Currency\'"></amexio-data-table-column>\n            </amexio-datagrid>\n         \x3c!--   <p><b>Selected row data : </b>{{selectedData | json}}</p>--\x3e\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    </amexio-api-demo>\n    </amexio-api-structure>'},WjLg:function(e,t){e.exports='<amexio-api-structure  [url]="\'assets/componentjson/data/listbox.json\'">\n  <amexio-api-demo>\n    \n    <amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Simple List Box\n          </amexio-header>\n          <amexio-body>\n            <amexio-listbox [enable-checkbox]="true" [height]="400"\n                            [header]="\'Contacts\'" [search-placeholder]="\'Search Contacts\'"\n                            [data]="localData" [filter]="true"\n                            [data-reader]="\'response.data\'"\n                            [display-field]="\'name_official\'" (selectedRows)="getSelectedData($event)">\n            </amexio-listbox>\n            <p>\n              <b>selected data</b> : {{selectedData | json}}\n            </p>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    <amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n             List Box with Template\n          </amexio-header>\n          <amexio-body>\n            <amexio-listbox [height]="400" [header]="\'Contacts\'" [search-placeholder]="\'Search Contacts\'"\n                            [data]="localData" [filter]="false"\n                            [data-reader]="\'response.data\'"\n                            [display-field]="\'name\'" (onRowClick)="onRowClick($event)">\n              <ng-template #amexioBodyTmpl let-row="row">\n                <amexio-row>\n                  <amexio-column [size]="1">\n                      <amexio-image [c-class]="\'around-image\'" height="50px" width="50px" path="assets/images/profile/{{row.profile}}"></amexio-image>\n                  </amexio-column>\n                  <amexio-column [size]="11">\n                    {{row.name}}\n                  </amexio-column>\n                </amexio-row>\n              </ng-template>\n            </amexio-listbox>\n           \x3c!-- <p>\n              <b>clicked record data</b> : {{onRowClickData | json}}\n            </p>--\x3e\n\n            <amexio-row>\n            <amexio-column [size]="5">\n              <amexio-listbox [height]="360" [data]="projectData" [filter]="false" [header]="\'Project\'" [enable-checkbox]="false" [data-reader]="\'response.data\'"\n                [display-field]="\'name\'">\n                <ng-template #amexioBodyTmpl let-row="row">\n                  <amexio-row>\n                    <amexio-column [size]="5">\n                      <amexio-label size="small">\n                        {{row.name}}\n                      </amexio-label>\n                    </amexio-column>\n                    <amexio-column [size]="3">\n  \n                    </amexio-column>\n                    <amexio-column [size]="4">\n  \n                      <a [ngClass]="{\'listbox-StatusYellow\': row.status == \'Pending\', \'listbox-StatusGreen\' : row.status == \'Finished\',\'listbox-StatusRed\'  : row.status == \'Rejected\'}">\n                        {{row.status}}\n                      </a>\n                    </amexio-column>\n                  </amexio-row>\n                </ng-template>\n              </amexio-listbox>\n            </amexio-column>\n            <amexio-column [size]="7">\n              <amexio-listbox [height]="400" [data]="browserData" [filter]="false" [header]="\'Browser Stats\'" [enable-checkbox]="false"\n                [data-reader]="\'response.data\'" [display-field]="\'name\'">\n                <ng-template #amexioBodyTmpl let-row="row">\n                  <amexio-row>\n                    <amexio-column [size]="4">\n                      <span>\n  \n                        <amexio-image [path]="\'assets/images/\'+row.icon" [c-class]="\'image-round\'">\n                        </amexio-image>\n  \n                      </span>\n  \n                    </amexio-column>\n                    <amexio-column [size]="6">\n                      <amexio-label size="small">\n                        {{row.name}}\n                      </amexio-label>\n                    </amexio-column>\n                    <amexio-column [size]="2">\n                      <amexio-label size="small" font-color="grey">\n                        {{row.usage}}\n                      </amexio-label>\n  \n                    </amexio-column>\n                  </amexio-row>\n                </ng-template>\n              </amexio-listbox>\n            </amexio-column>\n          </amexio-row>\n\n\n          </amexio-body>\n        </amexio-card>\n\n      </amexio-column>\n    </amexio-row>\n\n    <amexio-row>\n    <amexio-column size="12">\n      <amexio-card [header]="true">\n        <amexio-header>\n           List Box With Context Menu\n        </amexio-header>\n        <amexio-body>\n          <amexio-listbox [enable-checkbox]="true" [height]="400"\n                          [header]="\'Contacts\'" [search-placeholder]="\'Search Contacts\'"\n                          [data]="localData" [filter]="true"\n                          [data-reader]="\'response.data\'" [context-menu]="contextMenuData"\n                          [display-field]="\'name_official\'" (selectedRows)="getSelectedData($event)">\n          </amexio-listbox>\n        </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>\n\n     \n  </amexio-api-demo>\n  </amexio-api-structure>'},YPfV:function(e,t){e.exports='   \n    <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/tree.json\'">\n      <amexio-api-demo>\n      \n   <amexio-row>\n      <amexio-column size="8">\n        <amexio-card [header]="true">\n          <amexio-header>\n              Tree With Context Menu \n          </amexio-header>\n          <amexio-body>\n            <amexio-treeview \n                [data-reader]="\'data\'" \n                [data]="treeLocalData" \n                [context-menu]="rightclickdata">\n            </amexio-treeview>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n    </amexio-api-demo>\n    </amexio-api-structure>'},Yuhb:function(e,t){e.exports='\n<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n  <amexio-api-demo>\n  \n<amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Data Grid with Global Filter \n          </amexio-header>\n          <amexio-body>\n          <amexio-datagrid\n          [global-filter]="true" title="Country Grid"   [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/datagrid.json\'" [data-reader]="\'data\'"  [page-size] = "10" (rowSelect)="getRowData($event)">\n          <amexio-data-table-column [data-index]="\'name_official\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Name\'">\n          </amexio-data-table-column>\n          <amexio-data-table-column [data-index]="\'code3l\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Country Code\'">\n          </amexio-data-table-column>\n          <amexio-data-table-column [data-index]="\'latitude\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Latitude\'">\n          </amexio-data-table-column>\n          <amexio-data-table-column [data-index]="\'longitude\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Longitude\'"></amexio-data-table-column>\n        </amexio-datagrid>\n            <p><b>Selected row data : </b>{{clickedRowData | json}}</p>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    </amexio-api-demo>\n    </amexio-api-structure>'},Zimt:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n  <amexio-api-demo>\n           \n    \x3c!--1--\x3e\n    <amexio-datagrid [enable-checkbox]="false" title="Registration Details" [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/headertemplateemail.json\'"\n        [data-reader]="\'data\'" [page-size]="10" [enable-data-filter]="false">\n        <amexio-data-table-column [width]="5" [data-index]="\'No\'" [data-type]="\'string\'" [hidden]="false" [text]="\'No.\'">\n            <ng-template #amexioHeaderTmpl let-column="column" let-index="index">\n                <amexio-label size="small" font-color="white">\n                    {{column.text}}\n                </amexio-label>\n            </ng-template>\n        </amexio-data-table-column>\n        <amexio-data-table-column   [width]="10" [data-index]="\'name\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Name\'">\n        <ng-template #amexioHeaderTmpl let-column="column" let-index="index">\n                <amexio-label size="small-bold" font-color="white">\n                    {{column.text}}\n                </amexio-label>\n            </ng-template>\n        </amexio-data-table-column>\n        <amexio-data-table-column [width]="8" [data-index]="\'loginid\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Login-Id\'">\n        <ng-template #amexioHeaderTmpl let-column="column" let-index="index">\n        <amexio-label size="small" font-color="red">\n            {{column.text}}\n        </amexio-label>\n    </ng-template>\n        </amexio-data-table-column>\n        <amexio-data-table-column [width]="14" [data-index]="\'emailid\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Email-Id\'">\n        <ng-template #amexioHeaderTmpl let-column="column" let-index="index">\n        <amexio-label size="small" font-color="white">\n        <i class="fa fa-envelope"  style="color:white"></i>\n            {{column.text}}\n        </amexio-label>\n    </ng-template>\n        </amexio-data-table-column>\n        <amexio-data-table-column [width]="8" [data-index]="\'phone\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Phone\'">\n        <ng-template #amexioHeaderTmpl let-column="column" let-index="index">\n        <amexio-label size="small" font-color="white">\n        <i class="fa fa-phone"  style="color:white"></i>\n            {{column.text}}\n        </amexio-label>\n    </ng-template>\n        </amexio-data-table-column>\n        <amexio-data-table-column [sort]="false" [width]="10" [data-index]="\'Status\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Status\'">\n        <ng-template #amexioHeaderTmpl let-column="column" let-index="index">\n        <amexio-btn-dropdown [label]="\'Status\'" [type]="\'red\'" [size]="\'small\'">\n        \n        <amexio-btn-dropdown-item  [label]="\'Accept All\'">\n        </amexio-btn-dropdown-item>\n        <amexio-btn-dropdown-item [label]="\'Reject All\'">\n        </amexio-btn-dropdown-item>\n        \n    </amexio-btn-dropdown>\n    </ng-template>\n        <ng-template #amexioBodyTmpl let-column let-row="row">\n                <amexio-label class="fa fa-circle fa-lg" [ngClass]="{\'green\': row.Status== \'Paid\' , \'yellow\': row.Status ==\'Pending\' , \'red\' : row.Status==\'Approved\'}"></amexio-label>\n                &nbsp;{{row.Status}}\n            </ng-template>\n        </amexio-data-table-column>\n         \n    </amexio-datagrid>\n\n    </amexio-api-demo>\n    </amexio-api-structure>\n\n'},a6q8:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/tree.json\'">\n  <amexio-api-demo>\n    \n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Tree With template \n          </amexio-header>\n          <amexio-body>\n            <amexio-treeview [data-reader]="\'data\'"\n                             [http-url]="\'assets/data/componentdata/sidenav.json\'"\n                             [http-method]="\'get\'" (nodeClick)="getNodeData($event)">\n              <ng-template #amexioTreeTemplate let-tree let-icon="icon" let-node="node">\n                <i [attr.class]="node.icon"></i> &nbsp;{{tree.text}}\n              </ng-template>\n            </amexio-treeview>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Selected Data \n          </amexio-header>\n          <amexio-body>\n            <pre><code>{{selectedData | json}}</code></pre>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    </amexio-api-demo>\n    </amexio-api-structure>'},b8ol:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData"  [url]="\'assets/componentjson/data/grid.json\'">\n    <amexio-api-demo>\n      <amexio-row>\n        <amexio-column size="12">\n          <amexio-card [header]="true">\n            <amexio-header>\n              Simple Data Grid\n            </amexio-header>\n            <amexio-body>\n              <amexio-datagrid [enable-column-fiter]="true" title="Simple Data Grid " [enable-checkbox]="false" [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/country.json\'"\n                               [data-reader]="\'data\'" [page-size]="10">\n\n                <amexio-data-table-column [data-index]="\'countryName\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Name\'" (selectedRowData)="getSelectedData($event)">\n                </amexio-data-table-column>\n                <amexio-data-table-column [sort]="false" [data-index]="\'countryCode1\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Code\'"></amexio-data-table-column>\n                <amexio-data-table-column [data-index]="\'currencyName\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Currency\'"></amexio-data-table-column>\n              </amexio-datagrid>\n            </amexio-body>\n          </amexio-card>\n        </amexio-column>\n        <br>\n        <amexio-column size="12">\n          <amexio-card [header]="true">\n            <amexio-header>\n              Simple Data Grid with inner structure\n            </amexio-header>\n            <amexio-body>\n              <amexio-datagrid [enable-column-fiter]="true" title="Simple Data Grid with inner structure" [enable-checkbox]="false" [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/personProfile.json\'"\n                               [data-reader]="\'data\'" [page-size]="10">\n\n                <amexio-data-table-column [data-index]="\'personName\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Name\'" (selectedRowData)="getSelectedRecord($event)">\n                </amexio-data-table-column>\n                <amexio-data-table-column [sort]="false" [data-index]="\'designation\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Designation\'"></amexio-data-table-column>\n                <amexio-data-table-column [data-index]="\'address.addressLabel\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Address\'"></amexio-data-table-column>\n              </amexio-datagrid>\n            </amexio-body>\n          </amexio-card>\n        </amexio-column>\n      </amexio-row>\n    </amexio-api-demo>\n\n  </amexio-api-structure>\n\n'},d7eH:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/tree.json\'">\n  <amexio-api-demo>\n   \n   <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Simple Tree \n          </amexio-header>\n          <amexio-body>\n            <amexio-treeview [badge]="true" [data-reader]="\'data\'" [data]="treeLocalData" (nodeClick)="getNodeData($event)">\n            </amexio-treeview>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Selected Data \n          </amexio-header>\n          <amexio-body>\n            <pre><code>{{selectedData | json}}</code></pre>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    </amexio-api-demo>\n    </amexio-api-structure>'},gQuC:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/tree.json\'">\n    <amexio-api-demo>\n    \n       \n       <amexio-row>\n            <amexio-column size="6">\n                <amexio-card [header]="true" [footer]="true" [footer-align]="\'right\'">\n                    <amexio-header style="width:100%">\n                    <amexio-toolbar>\n                    <amexio-toolbar-item position-left >\n                    <amexio-image [ngClass]="text" (click)="expandAlldata(id)">\n                         </amexio-image>\n                    </amexio-toolbar-item>\n                    <amexio-toolbar-item position-left >\n                     <label style="margin-top: 0px; font-size: 18px">\n                     &nbsp;  &nbsp; Expand all and collapse all function\n                     </label>\n                    </amexio-toolbar-item>\n                    </amexio-toolbar>\n                        \n                    </amexio-header>\n                    <amexio-body>\n                        <amexio-treeview #id [data-reader]="\'item\'" [data]="treeLocalExpandData" (nodeClick)="getNodeDataClick($event)">\n                        </amexio-treeview>\n                    </amexio-body>\n                    <amexio-action>\n                        </amexio-action>\n                </amexio-card>\n            </amexio-column>\n            <amexio-column size="6" [fit]=\'true\'>\n                <amexio-card [header]="true">\n                    <amexio-header>\n                        Selected Data\n                    </amexio-header>\n                    <amexio-body>\n                        <pre><code>{{expandSelectedData | json}}</code></pre>\n                    </amexio-body>\n                </amexio-card>\n            </amexio-column>\n        </amexio-row>\n\n        </amexio-api-demo>\n        </amexio-api-structure>'},hlqb:function(e,t){e.exports='    \n    <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/tree.json\'">\n      <amexio-api-demo>\n      \n    <amexio-row>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Tree with Checkbox\n          </amexio-header>\n          <amexio-body>\n            <amexio-treeview [enable-checkbox]="true" [data-reader]="\'data\'"\n                             [data]="treeLocalData" (onTreeNodeChecked)="getNodeData($event)">\n            </amexio-treeview>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n      <amexio-column size="6">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Selected Data \n          </amexio-header>\n          <amexio-body>\n            <pre><code>{{selectedData | json}}</code></pre>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>'},hwov:function(e,t){e.exports='        \n   <amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n    <amexio-api-demo>\n       \n       \x3c!--1--\x3e\n        <amexio-datagrid [enable-checkbox]="false" title="Invoice Details" [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/templategrid.json\'"\n            [data-reader]="\'response.data\'" [page-size]="10" [enable-data-filter]="false">\n            <amexio-data-table-column [width]="5" [data-index]="\'No\'" [data-type]="\'string\'" [hidden]="false" [text]="\'No.\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-label size="small" font-color="grey">\n                        {{row.No}}\n                    </amexio-label>\n                </ng-template>\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="10" [data-index]="\'Invoice Subject\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Invoice Subject\'">\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="8" [data-index]="\'client\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Client\'">\n        \n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="6" [data-index]="\'Vat No.\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Vat No.\'">\n        \n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="8" [data-index]="\'Created\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Created\'">\n        \n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="10" [data-index]="\'Status\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Status\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-label class="fa fa-circle fa-lg" [ngClass]="{\'green\': row.Status== \'Paid\' , \'yellow\': row.Status ==\'Pending\' , \'red\' : row.Status==\'Paid Today\'}"></amexio-label>\n                    &nbsp;{{row.Status}}\n                </ng-template>\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="5" [data-index]="\'Price\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Price\'">\n        \n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="15" [data-index]="\'\'" [data-type]="\'string\'" [hidden]="false" [text]="\'\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-row>\n                        <amexio-column [size]="4">\n                            <amexio-button [label]="\'Manage\'" [size]="\'small\'" [type]="\'theme-backgroundcolor\'" [tooltip]="\'Manage\'">\n                            </amexio-button>\n                        </amexio-column>\n                        <amexio-column [size]="5">\n                            <amexio-btn-dropdown [label]="\'Action\'" [type]="\'theme-backgroundcolor\'" [size]="\'small\'">\n                                <amexio-btn-dropdown-item [label]="\'Accept\'">\n                                </amexio-btn-dropdown-item>\n                                <amexio-btn-dropdown-item [label]="\'Reject\'">\n                                </amexio-btn-dropdown-item>\n                            </amexio-btn-dropdown>\n                        </amexio-column>\n                        <amexio-column [size]="3">\n                            <amexio-image style="color:grey;" [icon-class]="\'fa fa-pencil fa-2x\'"></amexio-image>\n                        </amexio-column>\n                    </amexio-row>\n                </ng-template>\n            </amexio-data-table-column>\n        \n        </amexio-datagrid>\n        \n        \x3c!--2--\x3e\n        <br>\n        <amexio-datagrid [enable-checkbox]="false" title="User Activity Details" [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/datagridtemplate.json\'"\n            [data-reader]="\'response.data\'" [page-size]="10" [enable-data-filter]="false">\n            <amexio-data-table-column [width]="40" [data-index]="\'User\'" [data-type]="\'string\'" [hidden]="false" [text]="\'USER\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-row>\n                        <amexio-column [size]="3">\n                            <amexio-image [path]="\'assets/images/profile/\'+row.profile" [c-class]="\'image-round\'">\n                            </amexio-image>\n                         </amexio-column>\n                        <amexio-column [size]="9">\n                            <amexio-label size="small">\n                                {{row.User}}\n                            </amexio-label>\n                            <br>\n                            <amexio-label size="small" font-color="grey">\n                                Registered:{{row.Date}}\n                            </amexio-label>\n                        </amexio-column>\n                    </amexio-row>\n                </ng-template>\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="40" [data-index]="\'Usage\'" [data-type]="\'string\'" [hidden]="false" [text]="\'USAGE\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-label>{{row.Usage}}%</amexio-label>\n        \n                    <amexio-progress-bar [height]="\'10\'" [current-value]="row.Usage" [infinite]="false" [type]="getGridTemplateData(row)"></amexio-progress-bar>\n        \n                    <amexio-label size="small" font-color="grey">\n                        {{row.usageFromDate}}-{{row.usageToDate}}\n                    </amexio-label>\n        \n                </ng-template>\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="20" [data-index]="\'Payment\'" [data-type]="\'string\'" [hidden]="false" [text]="\'PAYMENT\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-label>\n                        <amexio-image [height]="\'59.75px\'" [width]="\'59.75px\'" [path]="\'assets/images/\'+row.Payment" [c-class]="\'image-round\'">\n                        </amexio-image>\n                     </amexio-label>\n                </ng-template>\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="20" [data-index]="\'Activity\'" [data-type]="\'string\'" [hidden]="false" [text]="\'ACTIVITY\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-label size="small" font-color="grey">\n                        Last login\n                    </amexio-label>\n                    <br>\n                    <amexio-label size="small">\n                        {{row.Activity}}\n                    </amexio-label>\n        \n        \n                </ng-template>\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="10" [data-index]="\'\'" [data-type]="\'string\'" [hidden]="false" [text]="\'\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n        \n\n                        <amexio-image  style="color:grey;" [icon-class]="\'fa fa-pencil  fa-2x\'"></amexio-image>\n\n        \n                </ng-template>\n            </amexio-data-table-column>\n        </amexio-datagrid>\n        \n        \x3c!--3--\x3e\n        <br>\n        <amexio-datagrid title="Country Grid" [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/gridtemplate.json\'" [data-reader]="\'data\'"\n            [page-size]="10" [enable-data-filter]="false" (rowSelect)="getRowData($event)">\n            <amexio-data-table-column [width]="70" [data-index]="\'name_official\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Name\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                    <amexio-label class="datagrid-template">\n                        <amexio-label>\n                            <amexio-image [width]="100" [path]="\'assets/images/flags/flags/\'+row.flag_32"></amexio-image>\n                        </amexio-label>\n                        <amexio-label>{{row.name}}</amexio-label>\n        \n                        <amexio-label >( {{row.name_official}} )</amexio-label>\n                    </amexio-label>\n                </ng-template>\n            </amexio-data-table-column>\n            <amexio-data-table-column [width]="20" [data-index]="\'latitude\'" [data-type]="\'number\'" [hidden]="false" [text]="\'Latitude\'"></amexio-data-table-column>\n            <amexio-data-table-column [width]="20" [data-index]="\'longitude\'" [data-type]="\'number\'" [hidden]="false" [text]="\'Longitude\'"></amexio-data-table-column>\n        </amexio-datagrid>\n        <p>\n            <b>Clicked row data :</b> {{clickedRowData | json}}</p>\n\n</amexio-api-demo>\n</amexio-api-structure>\n\n'},oLvU:function(e,t,a){"use strict";a.r(t);var o=a("CcnG"),n=a("gIcY"),i=a("Ip0R"),r=a("d2mR"),l=a("t/Na"),c=a("f4zW"),d=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},m=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.getSelectedData=function(e){this.selectedData=e},e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Amexio Item-Selector",this.customSourceData.description="ItemSelector is a specialized MultiSelect field that renders as a pair of MultiSelect field, one with available options and the other with selected options. A set of buttons in between allows items to be moved between the fields and reordered within the selection.",this.customSourceData.sourceMetadata.htmlUrl="forms/itemselector/form.html",this.customSourceData.sourceMetadata.tsUrl="forms/itemselector/form.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-itemselector?embed=1&file=app/data/itemselector/itemselector.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getDropData=function(e){this.itemRef.removeNode(e)},e.prototype.drag=function(e){e.event.dataTransfer.setData("dragdata",JSON.stringify(e.data))},e.prototype.dragOver=function(e){e.preventDefault()},e.prototype.drop=function(e){e.preventDefault(),this.selectedData=JSON.parse(e.dataTransfer.getData("dragdata"))},d([Object(o.La)("item"),m("design:type",Object)],e.prototype,"itemRef",void 0),e=d([Object(o.n)({selector:"itemselector-demo",template:a("Qp4y")}),m("design:paramtypes",[l.a])],e)}(),p=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},u=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},x=function(){function e(e){this.http=e,this.contextMenuData=[{text:"Add New",icon:"fa fa-arrows",disabled:!0},{text:"Edit",icon:"",seperator:!0},{text:"Send data in email",icon:""}],this.localData={response:{success:!0,message:"Fetching  Data  Request Succeeded: Profile",data:[{name:"Buck Kulkarni",name_official:"Buck Kulkarni",profile:"buck.jpg",email:"XYZ@metamagic.in"},{name:"Araf Karsh Hamid",name_official:"Araf Karsh Hamid",profile:"karsh.jpg",email:"XYZ@metamagic.in"},{name:"ketan Gote",name_official:"Ketan Gote",profile:"ketan.jpg",email:"XYZ@metamagic.in"},{name:"Dattaram Gawas",name_official:"Dattaram Gawas",profile:"dats.jpg",email:"XYZ@metamagic.in"},{name:"Sagar Jadhav",name_official:"Sagar Jadhav",profile:"sagar.jpg",email:"XYZ@metamagic.in"},{name:"Rashmi Thakkar",name_official:"Rashmi Thakkar",profile:"rashmi.jpg",email:"XYZ@metamagic.in"},{name:"Deepali Arvind",name_official:"Deepali Arvind",profile:"dipali.jpg",email:"XYZ@metamagic.in"},{name:"Ashwini Agre",name_official:"Ashwini Agre",profile:"ashwini.jpg",email:"XYZ@metamagic.in"}]}},this.projectData={response:{success:!0,message:"Fetching  Data  Request Succeeded: Profile",data:[{name:"Admin Template\t",status:" 65%"},{name:"Landing Page",status:"Finished"},{name:"Backend UI\t",status:"Rejected"},{name:"Personal Blog",status:"40%"},{name:"E-mail Templates\t",status:"13%"},{name:"Corporate Website",status:"Pending"}]}},this.browserData={response:{success:!0,message:"Fetching  Data  Request Succeeded: Profile",data:[{name:"Google Chrome",usage:"23%",icon:"GoogleChrome.jpg "},{name:"Mozila Firefox",usage:"15%",icon:"MozilaFirefox.png "},{name:"Apple Safari",usage:"7%",icon:"AppleSafari.png "},{name:"Internet Explorer",usage:"9%",icon:"InternetExplorer.jpeg"},{name:"Opera mini",usage:"20%",icon:"Operamini.jpg"},{name:"Microsoft edge",usage:"9%",icon:"Microsoftedge.jpg"}]}}}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.onRowClick=function(e){this.onRowClickData=e},e.prototype.getSelectedData=function(e){this.selectedData=e},e=p([Object(o.n)({selector:"listbox-demo",template:a("WjLg"),styles:["\n    .listbox-StatusYellow {\n      background-color: yellow;\n    }\n    .listbox-StatusGreen  {\n      background-color: green;\n     }\n    .listbox-StatusRed {\n      background-color: red;\n  }\n  \n.red {\n    color: red!important;\n   \n}\n.green {\n    color: green!important;\n   \n}\n.yellow {\n    color: yellow!important;\n    \n}\n.template-progressBar .progress{\n  height:5px !important;\n}  \n"]}),u("design:paramtypes",[l.a])],e)}(),h=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},f=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},g=function(){function e(e){this.http=e}return e.prototype.getDta=function(){var e=this;this.asyncFlag=!0,setTimeout(function(){e.asyncFlag=!1},3e3)},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=h([Object(o.n)({selector:"timeline-demo",template:a("+NDx")}),f("design:paramtypes",[l.a])],e)}(),y=function(){return function(){}}(),b=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},w=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},D=function(){function e(e){this.http=e,this.isBoxShow=!1,this.clickShow=!0,this.buttonShowHide="Show",this.text="Hide",this.colorModel=new j,this.spinnerModel=new y,this.spinnerData={type:[{spinnerType:"rectanglebounce"},{spinnerType:"ring"},{spinnerType:"halfcircle"},{spinnerType:"fadingcircle"},{spinnerType:"ballspin"},{spinnerType:"firespin"},{spinnerType:"threebounce"},{spinnerType:"spinnerround"}],horizontalPosition:[{hposition:"left"},{hposition:"center"},{hposition:"right"}],verticalPosition:[{vposition:"top"},{vposition:"center"},{vposition:"bottom"}]}}return e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.setColorForIndictor=function(e){this.colorModel.color=e.target.value},e.prototype.onButtonClick=function(){this.clickShow?this.text="Show":this.text="Hide",this.clickShow=!this.clickShow},e.prototype.onAdvanceClick=function(){null!=this.spinnerModel.hposition&&null!=this.spinnerModel.spinnerType&&null!=this.spinnerModel.vposition?this.buttonShowHide="Show":this.buttonShowHide="Hide",this.isBoxShow=!this.isBoxShow,this.isBoxShow?this.buttonShowHide="Hide":this.buttonShowHide="Show"},e=b([Object(o.n)({selector:"amexio-spinner-demo",template:a("x9QM")}),w("design:paramtypes",[l.a])],e)}(),j=function(){return function(){}}(),S=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},C=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},v=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.treeLocalData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js"}]},{text:"core",expand:!0,children:[{text:"dom",expand:!0,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]},this.customArrayLocalData={customArray:[{demo:"Web App",expand:!0,object:[{demo:"app",expand:!0,object:[{leaf:!0,demo:"Application.js"}]},{demo:"button",expand:!0,object:[{leaf:!0,demo:"Button.js"},{leaf:!0,demo:"Cycle.js"},{leaf:!0,demo:"Split.js"}]},{demo:"container",expand:!0,object:[{leaf:!0,demo:"ButtonGroup.js"},{leaf:!0,demo:"Container.js"},{leaf:!0,demo:"Viewport.js"}]},{demo:"core",expand:!0,object:[{demo:"dom",expand:!0,object:[{leaf:!0,demo:"Element.form.js"},{leaf:!0,demo:"Element.static-more.js"}]}]}]}]}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="simple Tree",this.customSourceData.description="A Simple Expandable Tree component which create Tree View based on standard datasource attached.",this.customSourceData.sourceMetadata.htmlUrl="data/tree/simpletree/simpletree.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/simpletree/simpletree.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/simpletreeview.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-simple-tree?embed=1&file=app/tree/simpletree/simpletree.demo.html&view=editor"},e.prototype.getNodeData=function(e){this.selectedData=e},e.prototype.getCustomNodeData=function(e){this.selectedCustomData=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=S([Object(o.n)({selector:"simpletree-demo",template:a("MSlN")}),C("design:paramtypes",[l.a])],e)}(),M=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},k=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},R=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.treeLocalData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js"}]},{text:"core",expand:!0,children:[{text:"dom",expand:!0,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Tree With Checkbox",this.customSourceData.description="A Expandable Tree Component for Angular, having Checkbox functionality.",this.customSourceData.sourceMetadata.htmlUrl="data/tree/checkboxtree/checkboxtree.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/checkboxtree/checkboxtree.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/treeview.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-tree-with-checkbox?embed=1&file=app/tree/treewithcheckbox/treewithcheckbox.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getNodeData=function(e){this.selectedData=e},e=M([Object(o.n)({selector:"checkbox-tree-demo",template:a("hlqb")}),k("design:paramtypes",[l.a])],e)}(),z=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},A=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},O=function(){function e(e){this.http=e,this.text="fa fa-minus",this.expand=!0,this.customSourceData=new c.a,this.treeLocalExpandData={item:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js"}]},{text:"core",expand:!0,children:[{text:"dom",expand:!0,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]}}return e.prototype.expandAlldata=function(e){this.expand?(e.collapseAll(),this.text="fa fa-plus"):(e.expandAll(),this.text="fa fa-minus"),this.expand=!this.expand},e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Collapseable And Expandable Tree ",this.customSourceData.description="A Collapse and Expandable Tree component which create Tree View based on standard datasource attached.",this.customSourceData.sourceMetadata.htmlUrl="data/tree/collapsetree/collapsetree.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/collapsetree/collapsetree.text",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-collapseble-tree?embed=1&file=app/collapsetree/simpletree/simpletree.demo.html&view=editor"},e.prototype.getNodeData=function(e){this.selectedData=e},e.prototype.getNodeDataClick=function(e){this.expandSelectedData=e},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=z([Object(o.n)({selector:"collapsetree-demo",template:a("gQuC")}),A("design:paramtypes",[l.a])],e)}(),T=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},U=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},P=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.rightclickdata=[{text:"Add New",icon:"fa fa-plus",disabled:!0},{text:"Edit",icon:"",seperator:!0},{text:"Send data in email",icon:""}],this.treeLocalData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,badge:1,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,badge:3,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,badge:3,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js"}]},{text:"core",expand:!0,badge:1,children:[{text:"dom",expand:!0,badge:2,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Tree With Context Menu",this.customSourceData.description="A Expandable Tree component which create Tree View based on standard datasource with context menu(right-click mouse operation)",this.customSourceData.sourceMetadata.htmlUrl="data/tree/contextmenutree/tree.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/contextmenutree/tree.text",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-tree-contextmenu-demo?embed=1&file=src/app/contextualmenu/tree/tree.demo.component.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=T([Object(o.n)({selector:"contextmenutree-demo",template:a("YPfV")}),U("design:paramtypes",[l.a])],e)}(),N=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},G=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},E=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.treeLocalData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js",expand:!0,children:[],lazy:{"http-url":"data/treeview.json","http-method":"get"}}]},{text:"core",expand:!0,children:[{text:"dom",expand:!0,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Filter Tree",this.customSourceData.description="A Expandable Tree Component for Angular, having Filtering functionality.",this.customSourceData.sourceMetadata.htmlUrl="data/tree/filtertree/filtertree.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/filtertree/filtertree.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/sidenav.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-tree-with-filter?embed=1&file=app/tree/treewithfilter/treewithfilter.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getNodeData=function(e){this.selectedData=e},e=N([Object(o.n)({selector:"tree-filter-demo",template:a("0Hs6")}),G("design:paramtypes",[l.a])],e)}(),B=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},I=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},L=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.treeLocalData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js",expand:!0,children:[],lazy:{"http-url":"data/treeview.json","http-method":"get"}}]},{text:"core",expand:!0,children:[{text:"dom",expand:!0,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="horizontal Tree",this.customSourceData.description="A Horizontal Tree Component.",this.customSourceData.sourceMetadata.htmlUrl="data/tree/horizontaltree/horizontaltree.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/horizontaltree/horizontaltree.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/sidenav.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-tree-horizontal?embed=1&file=app/tree/treehorizontal/treehorizontal.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getNodeData=function(e){this.selectedData=e},e=B([Object(o.n)({selector:"horizontal-tree-demo",template:a("LmjX")}),I("design:paramtypes",[l.a])],e)}(),F=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},W=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},H=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.treeLocalData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,badge:1,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,badge:3,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,badge:3,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js"}]},{text:"core",expand:!0,badge:1,children:[{text:"dom",expand:!0,badge:2,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Tree With Badge",this.customSourceData.description="A Simple Expandable Tree component which create Tree View based on standard datasource attached with badge property    ",this.customSourceData.sourceMetadata.htmlUrl="data/tree/treewithbadge/tree.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/treewithbadge/tree.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/treeviewwithbadge.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-tree-with-badge?embed=1&file=app/tree/simpletree/simpletree.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getNodeData=function(e){this.selectedData=e},e=F([Object(o.n)({selector:"treewithbadge-demo",template:a("d7eH")}),W("design:paramtypes",[l.a])],e)}(),$=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},V=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Y=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.treeData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js"}]},{text:"core",expand:!0,children:[{text:"dom",expand:!0,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]},this.treeLocalData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js"}]},{text:"core",expand:!0,children:[{text:"dom",expand:!0,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]},this.treeLocalData1={data:[{text:"Web App",expand:!0,children:[{text:"Grid",expand:!0,children:[{leaf:!0,text:"Column.js"},{leaf:!0,text:"Boolean.js"},{leaf:!0,text:"Check.js"}]},{text:"Layout",expand:!0,children:[{text:"Component",expand:!0,children:[{leaf:!0,text:"Auto.js"},{leaf:!0,text:"FieldSet.js"},{leaf:!0,text:"Dock.js"}]}]},{text:"Tree",expand:!0,children:[{text:"Plugin",expand:!0,children:[{leaf:!0,text:"TreeViewDragDrop.js"}]}]},{text:"Panel",expand:!0,children:[{leaf:!0,text:"Header.js"}]}]}]}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="drag and drop Tree",this.customSourceData.description="A Expandable Tree component which create Tree View based on standard datasource attached and having functionality of drag and drop (within tree as well as across tree).    ",this.customSourceData.sourceMetadata.htmlUrl="data/tree/dragdroptree/dragdroptree.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/dragdroptree/dragdroptree.text",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-dragdrop?embed=1&file=app/tree/acrosstree/acrosstree.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getDropData=function(e){this.treeRef.removeNode(e)},e.prototype.getDropData1=function(e){this.treeRef1.removeNode(e)},e.prototype.drag=function(e){e.event.dataTransfer.setData("dragdata",JSON.stringify(e.data))},e.prototype.dragOver=function(e){e.preventDefault()},e.prototype.drop=function(e){e.preventDefault(),this.selectedData=JSON.parse(e.dataTransfer.getData("dragdata"))},$([Object(o.La)("tree"),V("design:type",Object)],e.prototype,"treeRef",void 0),$([Object(o.La)("tree1"),V("design:type",Object)],e.prototype,"treeRef1",void 0),e=$([Object(o.n)({selector:"dragdroptree-demo",template:a("7LXE")}),V("design:paramtypes",[l.a])],e)}(),_=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},J=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},q=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.treeLocalData={data:[{text:"Web App",expand:!0,children:[{text:"app",expand:!0,children:[{leaf:!0,text:"Application.js"}]},{text:"button",expand:!0,children:[{leaf:!0,text:"Button.js"},{leaf:!0,text:"Cycle.js"},{leaf:!0,text:"Split.js"}]},{text:"container",expand:!0,children:[{leaf:!0,text:"ButtonGroup.js"},{leaf:!0,text:"Container.js"},{leaf:!0,text:"Viewport.js"}]},{text:"core",expand:!0,children:[{text:"dom",expand:!0,children:[{leaf:!0,text:"Element.form.js"},{leaf:!0,text:"Element.static-more.js"}]}]}]}]}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Tree With template",this.customSourceData.description="To define the detail template, nested ng-template tag inside the AmexioTreeComponent component. The template context is set to the current node.    ",this.customSourceData.sourceMetadata.htmlUrl="data/tree/treetemplate/treetemplate.html",this.customSourceData.sourceMetadata.tsUrl="data/tree/treetemplate/treetemplate.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/sidenav.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-tree-with-template?embed=1&file=app/tree/treewithtemplate/treewithtemplate.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getNodeData=function(e){this.selectedData=e},e=_([Object(o.n)({selector:"tree-template-demo",template:a("a6q8")}),J("design:paramtypes",[l.a])],e)}(),K=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},Z=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},X=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Simple Data Grid",this.customSourceData.description="Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column.",this.customSourceData.sourceMetadata.htmlUrl="data/simplegrid/simplegrid.html",this.customSourceData.sourceMetadata.tsUrl="data/simplegrid/simplegrid.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.sourceMetadata.datasourceUrl1="assets/data/componentdata/personProfile.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-simple-grid?embed=1&file=app/grid/simplegrid/simplegrid.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getSelectedData=function(e){this.selectedData=e},e.prototype.getSelectedRecord=function(e){this.selectedRecord=e},e=K([Object(o.n)({selector:"simplegrid-demo",template:a("b8ol")}),Z("design:paramtypes",[l.a])],e)}(),Q=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},ee=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},te=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Data Grid With Custom Column Size",this.customSourceData.description="Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column.",this.customSourceData.sourceMetadata.htmlUrl="data/customcolsize/customcolsize.html",this.customSourceData.sourceMetadata.tsUrl="data/customcolsize/customcolsize.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/gridtemplate.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-column-sizing-grid?embed=1&file=app/grid/columnsize/columnsize.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getRowData=function(e){this.clickedRowData=e},e=Q([Object(o.n)({selector:"custom-col-size-grid-demo",template:a("quUn")}),ee("design:paramtypes",[l.a])],e)}(),ae=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},oe=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ne=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Data Grid With Filter",this.customSourceData.description="Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection,Filtering(enable only for string and number type data) user define template for rendering for column header and column data, displaying summation of numeric column.",this.customSourceData.sourceMetadata.htmlUrl="data/filter/filter.html",this.customSourceData.sourceMetadata.tsUrl="data/filter/filter.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/datagridgroupby.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-global-filter-grid?embed=1&file=app/grid/filtergrid/filtergrid.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.onRowSelect=function(e){this.selectedData=e},e=ae([Object(o.n)({selector:"filtergrid-demo",template:a("1pYJ")}),oe("design:paramtypes",[l.a])],e)}(),ie=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},re=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},le=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Data Grid With Global Filter",this.customSourceData.description="Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection,Common Filtering for all columns(enable only for string and number)(Filtering Criteria: starts with, ends with and contains) user define template for rendering for column header and column data, displaying summation of numeric column.",this.customSourceData.sourceMetadata.htmlUrl="data/globalfiltergrid/globalfiltergrid.html",this.customSourceData.sourceMetadata.tsUrl="data/globalfiltergrid/globalfiltergrid.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/gridtemplate.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-global-filter-grid?embed=1&file=app/grid/filtergrid/filtergrid.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getRowData=function(e){this.clickedRowData=e},e=ie([Object(o.n)({selector:"global-filter-grid",template:a("Yuhb")}),re("design:paramtypes",[l.a])],e)}(),ce=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},de=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},me=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.projectData={response:{success:!0,message:"Fetching  Data  Request Succeeded: Profile",data:[{name:"Admin Template\t",status:" 65%"},{name:"Landing Page",status:"Finished"},{name:"Backend UI\t",status:"Rejected"},{name:"Personal Blog",status:"40%"},{name:"E-mail Templates\t",status:"13%"},{name:"Corporate Website",status:"Pending"}]}},this.browserData={response:{success:!0,message:"Fetching  Data  Request Succeeded: Profile",data:[{name:"Google Chrome",usage:"23%",icon:"GoogleChrome.jpg "},{name:"Mozila Firefox",usage:"15%",icon:"MozilaFirefox.png "},{name:"Apple Safari",usage:"7%",icon:"AppleSafari.png "},{name:"Internet Explorer",usage:"9%",icon:"InternetExplorer.jpeg"},{name:"Opera mini",usage:"20%",icon:"Operamini.jpg"},{name:"Microsoft edge",usage:"9%",icon:"Microsoftedge.jpg"}]}}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Data Grid With template",this.customSourceData.description="To define the detail template, nest an ng-template tag inside the AmexioColumn component. The template context is set to the current row.",this.customSourceData.sourceMetadata.htmlUrl="data/templategrid/templategrid.html",this.customSourceData.sourceMetadata.tsUrl="data/templategrid/templategrid.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/gridtemplate.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-template-grid?embed=1&file=app/grid/templategrid/templategrid.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getRowData=function(e){this.clickedRowData=e},e.prototype.getGridTemplateData=function(e){return e.Usage>=50?"success":e.Usage<50&&e.Usage>=30?"warning":e.Usage<30?"danger":void 0},e=ce([Object(o.n)({selector:"grid-template-demo",template:a("hwov"),styles:["\n    .listbox-StatusYellow {\n      background-color: yellow;\n    }\n    .listbox-StatusGreen  {\n      background-color: green;\n     }\n    .listbox-StatusRed {\n      background-color: red;\n  }\n  \n.red {\n    color: red!important;\n   \n}\n.green {\n    color: green!important;\n   \n}\n.yellow {\n    color: yellow!important;\n    \n}\n.template-progressBar .progress{\n  height:5px !important;\n}  \n"]}),de("design:paramtypes",[l.a])],e)}(),se=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},pe=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ue=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.contextMenuColData=[{text:"Add State",icon:"fa fa-plus",disabled:!0},{text:"Edit",icon:"",seperator:!0},{text:"Delete",icon:""}],this.contextMenuRowData=[{text:"Reload",icon:"fa fa-refresh",disabled:!1,seperator:!1},{text:"Save",icon:"fa fa-save",seperator:!1},{text:"Delete",icon:"fa fa-close"}]}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Data Grid With Context Menu",this.customSourceData.description="Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column and with context menu(right-click mouse operation).",this.customSourceData.sourceMetadata.htmlUrl="data/contextmenugrid/contextmenugrid.html",this.customSourceData.sourceMetadata.tsUrl="data/contextmenugrid/contextmenugrid.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-grid-contextmenu?embed=1&file=src/app/contextualmenu/grid/grid.demo.component.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=se([Object(o.n)({selector:"grid-context-menu-demo",template:a("VjMS")}),pe("design:paramtypes",[l.a])],e)}(),xe=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},he=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},fe=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Data Grid With Scroll",this.customSourceData.description="Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column.",this.customSourceData.sourceMetadata.htmlUrl="data/scrollgrid/scrollgrid.html",this.customSourceData.sourceMetadata.tsUrl="data/scrollgrid/scrollgrid.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-grid-with-scroll?embed=1&file=app/grid/gridwithscroll/gridwithscroll.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getSelectedData=function(e){this.selectedData=e},e=xe([Object(o.n)({selector:"grid-scroll-demo",template:a("9g6H")}),he("design:paramtypes",[l.a])],e)}(),ge=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},ye=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},be=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Data Grid With toolbar",this.customSourceData.description="Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection, user define template for rendering for column header and column data, displaying summation of numeric column.",this.customSourceData.sourceMetadata.htmlUrl="data/gridwithtoolbar/gridwithtoolbar.html",this.customSourceData.sourceMetadata.tsUrl="data/gridwithtoolbar/gridwithtoolbar.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-grid-with-toolbar?embed=1&file=app/grid/gridwithtoolbar/gridwithtoolbar.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getSelectedData=function(e){this.selectedData=e},e=ge([Object(o.n)({selector:"gridwithtoolbar-demo",template:a("N5qv")}),ye("design:paramtypes",[l.a])],e)}(),we=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},De=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},je=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Data Grid Group By",this.customSourceData.description="Data grid component to render large amount of data-set with various options like sorting in ascending or descending order, client-side pagination, column hide/unhide, single/multi selection,Filtering(enable only for string and number type data), user define template for rendering for column header and column data, displaying summation of numeric column and grouping column.",this.customSourceData.sourceMetadata.htmlUrl="data/groupby/groupby.html",this.customSourceData.sourceMetadata.tsUrl="data/groupby/groupby.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/datagridgroupby.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-groupby-grid?embed=1&file=app/grid/groupbygrid/groupbygrid.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e=we([Object(o.n)({selector:"groupbygrid-demo",template:a("yojS")}),De("design:paramtypes",[l.a])],e)}(),Se=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},Ce=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ve=function(){function e(e){this.http=e,this.customSourceData=new c.a,this.projectData={response:{success:!0,message:"Fetching  Data  Request Succeeded: Profile",data:[{name:"Admin Template\t",status:" 65%"},{name:"Landing Page",status:"Finished"},{name:"Backend UI\t",status:"Rejected"},{name:"Personal Blog",status:"40%"},{name:"E-mail Templates\t",status:"13%"},{name:"Corporate Website",status:"Pending"}]}},this.browserData={response:{success:!0,message:"Fetching  Data  Request Succeeded: Profile",data:[{name:"Google Chrome",usage:"23%",icon:"GoogleChrome.jpg "},{name:"Mozila Firefox",usage:"15%",icon:"MozilaFirefox.png "},{name:"Apple Safari",usage:"7%",icon:"AppleSafari.png "},{name:"Internet Explorer",usage:"9%",icon:"InternetExplorer.jpeg"},{name:"Opera mini",usage:"20%",icon:"Operamini.jpg"},{name:"Microsoft edge",usage:"9%",icon:"Microsoftedge.jpg"}]}}}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Header Template",this.customSourceData.description="Defines header template for user customization AmexioColumn component. The template context is set to the current header.",this.customSourceData.sourceMetadata.htmlUrl="data/headertemplate/headertemplate.html",this.customSourceData.sourceMetadata.tsUrl="data/headertemplate/headertemplate.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/headertemplateemail.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/header-template?embed=1&file=app/data/headertemplate/headertemplate.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getRowData=function(e){this.clickedRowData=e},e.prototype.getGridTemplateData=function(e){return e.Usage>=50?"success":e.Usage<50&&e.Usage>=30?"warning":e.Usage<30?"danger":void 0},e=Se([Object(o.n)({selector:"grid-template-demo",template:a("Zimt"),styles:["\n    .button-dropdown{\n        color:black;\n        padding: 50px;\n    }\n    .listbox-StatusYellow {\n      background-color: yellow;\n    }\n    .listbox-StatusGreen  {\n      background-color: green;\n     }\n    .listbox-StatusRed {\n      background-color: red;\n  }\n  \n.red {\n    color: red!important;\n   \n}\n.green {\n    color: green!important;\n   \n}\n.yellow {\n    color: yellow!important;\n    \n}\n.template-progressBar .progress{\n  height:5px !important;\n}  \n"]}),Ce("design:paramtypes",[l.a])],e)}(),Me=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},ke=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Re=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Tree Data Grid",this.customSourceData.description="Collapsible Data Grid Component displays data in expandable/collapsible rows.",this.customSourceData.sourceMetadata.htmlUrl="data/treedatagrid/treedatagrid.html",this.customSourceData.sourceMetadata.tsUrl="data/treedatagrid/treedatagrid.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/treedatatable.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-tree-data-grid?embed=1&file=app/grid/treedatagrid/treedatagrid.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getSelectedData=function(e){this.selectedData=e},e=Me([Object(o.n)({selector:"treedata-grid-demo",template:a("NL5N")}),ke("design:paramtypes",[l.a])],e)}(),ze=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},Ae=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Oe=function(){function e(e){this.http=e,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData()},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Tree Data Template",this.customSourceData.description="Collapsible Data Grid Component displays data in expandable/collapsible rows.",this.customSourceData.sourceMetadata.htmlUrl="data/treedatatemplate/treedatatemplate.html",this.customSourceData.sourceMetadata.tsUrl="data/treedatatemplate/treedatatemplate.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/treedatatable.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/amexio-v4-tree-data-grid?embed=1&file=app/grid/treedatagrid/treedatagrid.demo.html&view=editor"},e.prototype.onCopyClick=function(){this.copyMsgArray.length>=1?(this.copyMsgArray=[],this.copyMsgArray.push({msg:"Code Copied",type:"info"})):this.copyMsgArray.push({msg:"Code Copied",type:"info"})},e.prototype.getSelectedData=function(e){this.selectedData=e},e.prototype.onCheckClick=function(e){e.hasOwnProperty("children")&&e.children.length>0&&this.checkchild(e)},e.prototype.checkchild=function(e){var t=this;e.children.forEach(function(e){e.done=!e.done,e.hasOwnProperty("children")&&e.children.length>0&&t.checkchild(e)})},e=ze([Object(o.n)({selector:"treedata-grid-demo",template:a("usnh")}),Ae("design:paramtypes",[l.a])],e)}(),Te=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},Ue=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Pe=function(){function e(e){this._httpClient=e,this.countryData=[],this.totalDataCount=239,this.showLoader=!1,this.customSourceData=new c.a}return e.prototype.ngOnInit=function(){this.createCustomSourceData(),this.getData(0,10)},e.prototype.getData=function(e,t){var a=this;this.showLoader=!0,this._httpClient.get("https://restapi.amexio.org:8991/rest-sample-app/api/region/country/"+e+"/"+t).subscribe(function(e){a.countryData=e.response.data,a.showLoader=!1})},e.prototype.createCustomSourceData=function(){this.customSourceData.title="Grid- Lazy Loading",this.customSourceData.description="Data grid With lazy loading enabled for large data sets pagination, user can bring only require data and show. Based on total-count (attribute mapped) and initial datasize number of pages will be shown.",this.customSourceData.sourceMetadata.htmlUrl="data/serversidepagination/serversidepagination.html",this.customSourceData.sourceMetadata.tsUrl="data/serversidepagination/serversidepagination.text",this.customSourceData.sourceMetadata.datasourceUrl="assets/data/componentdata/country.json",this.customSourceData.liveMetadata.stackblitzUrl="https://stackblitz.com/edit/server-side-paging?embed=1&file=src/app/grid/serverside.paging.component.html&view=editor"},e.prototype.loadPageData=function(e){this.getData(e.next.startIndex-1,e.next.endIndex>this.totalDataCount?this.totalDataCount:e.next.endIndex)},e=Te([Object(o.n)({selector:"server-side-pagination-demo",template:a("rJ63")}),Ue("design:paramtypes",[l.a])],e)}(),Ne=[{path:"itemselector-demo",component:s},{path:"listbox-demo",component:x},{path:"timeline-demo",component:g},{path:"amexio-spinner-demo",component:D},{path:"simple-tree-demo",component:v},{path:"collapsetree-demo",component:O},{path:"template-tree-demo",component:q},{path:"filter-tree-demo",component:E},{path:"checkbox-tree-demo",component:R},{path:"dragdrop-tree-demo",component:Y},{path:"badge-tree-demo",component:H},{path:"context-menu-tree-demo",component:P},{path:"horizontal-tree-demo",component:L},{path:"simplegrid-demo",component:X},{path:"custom-col-grid-demo",component:te},{path:"filter-grid-demo",component:ne},{path:"global-filter-grid-demo",component:le},{path:"template-grid-demo",component:me},{path:"scroll-grid-demo",component:fe},{path:"gridwithtoolbar-demo",component:be},{path:"groupby-grid-demo",component:je},{path:"header-template-demo",component:ve},{path:"tree-data-grid-demo",component:Re},{path:"tree-data-template-demo",component:Oe},{path:"grid-context-menu-demo",component:ue},{path:"server-side-pagination-demo",component:Pe}],Ge=a("ZYCi"),Ee=a("O4vx");a.d(t,"DataModule",function(){return Ie});var Be=function(e,t,a,o){var n,i=arguments.length,r=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(r=(i<3?n(r):i>3?n(t,a,r):n(t,a))||r);return i>3&&r&&Object.defineProperty(t,a,r),r},Ie=function(){function e(){}return e=Be([Object(o.J)({declarations:[s,x,g,D,v,R,O,P,E,L,H,Y,q,X,te,ne,le,me,ue,fe,be,je,ve,Re,Oe,Pe],imports:[i.b,n.d,Ee.i,r.a.forRoot(),Ge.d.forChild(Ne)],providers:[]})],e)}()},quUn:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n  <amexio-api-demo>\n  \n    <amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n            Data Grid With Custom Column Size\n          </amexio-header>\n          <amexio-body>\n            <amexio-datagrid title="Country Grid" [http-method]="\'get\'" [http-url]="\'assets/data/componentdata/gridtemplate.json\'"\n              [data-reader]="\'data\'" [page-size]="10" [enable-data-filter]="false" (rowSelect)="getRowData($event)">\n              <amexio-data-table-column [width]="70" [data-index]="\'name_official\'" [data-type]="\'string\'" [hidden]="false"\n                [text]="\'Name\'">\n                <ng-template #amexioBodyTmpl let-column let-row="row">\n                  <span>\n                    <amexio-image [path]="\'assets/images/flags/flags/\'+row.flag_32"></amexio-image>&nbsp;{{row.name}} (\n                    {{row.name_official}} )\n                  </span>\n                </ng-template>\n              </amexio-data-table-column>\n              <amexio-data-table-column [width]="15" [data-index]="\'latitude\'" [data-type]="\'string\'" [hidden]="false"\n                [text]="\'Latitude\'"></amexio-data-table-column>\n              <amexio-data-table-column [width]="15" [data-index]="\'longitude\'" [data-type]="\'number\'" [hidden]="false"\n                [text]="\'Longitude\'"></amexio-data-table-column>\n            </amexio-datagrid>\n            <p><b>Clicked row data :</b> {{clickedRowData | json}}</p>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n  </amexio-api-demo>\n</amexio-api-structure>'},rJ63:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData"  [url]="\'assets/componentjson/data/grid.json\'">\n  <amexio-api-demo>\n    <amexio-row>\n      <amexio-column size="12">\n        <amexio-spinner [show]=showLoader [type]="\'fadingcircle\'" [vertical-position]="\'center\'"\n                        [horizontal-position]="\'center\'">\n        </amexio-spinner>\n        <amexio-card [header]="true">\n          <amexio-header>\n            Grid - Lazy Loading\n          </amexio-header>\n          <amexio-body>\n            <amexio-datagrid\n              title="Country Data "\n              [data]="countryData"\n              [height]="500"\n              [server-side-paging]="true"\n              [total-data-count]="totalDataCount"\n              (onPageChange)="loadPageData($event)">\n              <amexio-data-table-column\n                [data-index]="\'countryName\'"\n                [data-type]="\'string\'"\n                [sort]="true"\n                [text]="\'Name\'">\n              </amexio-data-table-column>\n              <amexio-data-table-column\n                [sort]="true"\n                [data-index]="\'countryCode1\'"\n                [data-type]="\'string\'"\n                [text]="\'Country Code\'">\n              </amexio-data-table-column>\n              <amexio-data-table-column\n                [sort]="true"\n                [data-index]="\'currencyName\'"\n                [data-type]="\'string\'"\n                [text]="\'Currency\'">\n              </amexio-data-table-column>\n            </amexio-datagrid>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  </amexio-api-demo>\n\n</amexio-api-structure>\n\n'},usnh:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/treedatagrid.json\'">\n  <amexio-api-demo>\n  \n\n<amexio-row>\n    <amexio-column size="12">\n      <amexio-card [footer]="false" [header]="true">\n        <amexio-header> Tree Data Template </amexio-header>\n        <amexio-body>\n        <amexio-tree-data-table [http-method]="\'get\'"\n        [http-url]="\'assets/data/componentdata/treedatatable.json\'" \n        [data-reader]="\'data\'" (selectedRecord)="getSelectedData($event)">\n        \n        <amexio-data-table-column [data-index]="\'task\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Task\'">\n        \n        </amexio-data-table-column>\n            <amexio-data-table-column [data-index]="\'user\'" [data-type]="\'string\'" [hidden]="false" [text]="\'User\'"></amexio-data-table-column>\n            <amexio-data-table-column    [data-index]="\'duration\'" [data-type]="\'number\'" [hidden]="false" [text]="\'Duration\'"></amexio-data-table-column>\n            \n           \n\n        \x3c!--checkbox--\x3e\n        <amexio-data-table-column  [data-index]="\'done\'"  \n        [data-type]="\'string\'" [hidden]="false" [text]="\'Done\'">\n\n        <ng-template #amexioHeaderTmpl let-column="column" let-index="index">\n        <span style="padding-left:65px">{{column.text}} </span> \n        </ng-template>\n\n        <ng-template #amexioBodyTmpl let-column let-row="row" >\n    <span  style="display: flex;\n        justify-content: center;">\n        <amexio-checkbox   \n            (onSelection)="onCheckClick(row)" [(ngModel)]="row.done">\n            \n        </amexio-checkbox>\n        \n      </span>\n        </ng-template>\n        </amexio-data-table-column>\n\n        \x3c!--edit--\x3e\n        <amexio-data-table-column   [data-index]="\'edit\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Edit\'">\n        \n        <ng-template #amexioBodyTmpl let-column let-row="row">\n          <amexio-image style="color:grey;" [icon-class]="\'fa fa-edit  fa-2x\'"></amexio-image>\n        </ng-template>\n        </amexio-data-table-column>\n\n        </amexio-tree-data-table> \n\n\n         </amexio-body>\n      </amexio-card>\n    </amexio-column>\n  </amexio-row>   \n</amexio-api-demo>\n</amexio-api-structure>\n\n\n'},x9QM:function(e,t){e.exports='<amexio-api-structure  [url]="\'assets/componentjson/data/spinner.json\'">\n    <amexio-api-demo>\n   \n   <amexio-row>\n        <amexio-column size="12">\n            <amexio-card [header]="true">\n                <amexio-header>\n                    Data Loading Indicator\n                </amexio-header>\n                <amexio-body>\n\n                    <amexio-button [label]="text" [type]="\'yellow\'" [tooltip]="\'show\'" (onClick)="onButtonClick()">\n                    </amexio-button>\n                    <br />\n                    <amexio-label size="small-bold">Select Color For Spinner : -</amexio-label>\n                    <input type="color" id="head" name="color" (input)="setColorForIndictor($event)" value="colorModel.color" />\n\n\n                    <amexio-row>\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true" [body-height]="45" [footer]="true" [footer-align]="\'right\'">\n                                <amexio-header>\n                                    Advanced Spinner\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner *ngIf="isBoxShow" [type]="spinnerModel.spinnerType"\n                                        [vertical-position]="spinnerModel.vposition" [horizontal-position]="spinnerModel.hposition"\n                                        [color]="colorModel.color">\n                                    </amexio-spinner>\n                                    <amexio-dropdown [place-holder]="\'Choose\'" [(ngModel)]="spinnerModel.spinnerType"\n                                        [data-reader]="\'type\'" [field-label]="\'Choose Spinner Type\'" [data]="spinnerData"\n                                        [display-field]="\'spinnerType\'" [value-field]="\'spinnerType\'">\n                                    </amexio-dropdown>\n\n                                    <amexio-dropdown [(ngModel)]="spinnerModel.vposition" [place-holder]="\'Choose\'"\n                                        [data-reader]="\'verticalPosition\'" [field-label]="\'Choose Vertical Position\'"\n                                        [data]="spinnerData" [display-field]="\'vposition\'" [value-field]="\'vposition\'">\n                                    </amexio-dropdown>\n\n                                    <amexio-dropdown [(ngModel)]="spinnerModel.hposition" [place-holder]="\'Choose\'"\n                                        [data-reader]="\'horizontalPosition\'" [field-label]="\'Choose Horizontal Position\'"\n                                        [data]="spinnerData" [display-field]="\'hposition\'" [value-field]="\'hposition\'">\n                                    </amexio-dropdown>\n                                </amexio-body>\n\n                                <amexio-action>\n                                    <amexio-button [label]="buttonShowHide" [type]="\'green\'" [tooltip]="\'show\'"\n                                        (onClick)="onAdvanceClick()">\n                                    </amexio-button>\n                                </amexio-action>\n                            </amexio-card>\n                        </amexio-column>\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true">\n                                <amexio-header>\n                                    fading circle round loader\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner [show]=clickShow [size]="\'10px\'" relative="true" [type]="\'fadingcircle\'"\n                                        [color]="colorModel.color">\n                                    </amexio-spinner>\n                                </amexio-body>\n                            </amexio-card>\n                        </amexio-column>\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true">\n                                <amexio-header>\n                                    ball spin loader\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner [show]=clickShow [size]="\'9px\'" relative="true" [type]="\'ballspin\'"\n                                        [color]="colorModel.color">\n                                    </amexio-spinner>\n                                </amexio-body>\n                            </amexio-card>\n                        </amexio-column>\n                    </amexio-row>\n\n                    <amexio-row>\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true" [body-height]="45">\n                                <amexio-header>\n                                    fire spin loader\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner [show]=clickShow [size]="\'50px\'" relative="true" [type]="\'firespin\'"\n                                        [color]="colorModel.color">\n                                    </amexio-spinner>\n                                </amexio-body>\n                            </amexio-card>\n                        </amexio-column>\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true" [body-height]="45">\n                                <amexio-header>\n                                    three bounce loader\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner [show]=\'clickShow\' [size]="\'8px\'" relative="true" [type]="\'threebounce\'"\n                                        [color]="colorModel.color">\n                                    </amexio-spinner>\n                                </amexio-body>\n                            </amexio-card>\n                        </amexio-column>\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true">\n                                <amexio-header>\n                                    spinner round loader\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner [show]=clickShow [size]="\'6px\'" relative="true" [type]="\'spinnerround\'"\n                                        [color]="colorModel.color">\n                                    </amexio-spinner>\n                                </amexio-body>\n                            </amexio-card>\n                        </amexio-column>\n                    </amexio-row>\n\n                    <amexio-row>\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true" [body-height]="45">\n                                <amexio-header>\n                                    ring loader\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner [show]=clickShow [size]="\'10px\'" [color]="colorModel.color"\n                                        relative="true" [type]="\'ring\'">\n                                    </amexio-spinner>\n                                </amexio-body>\n                            </amexio-card>\n                        </amexio-column>\n\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true" [body-height]="45">\n                                <amexio-header>\n                                    half circle loader\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner [show]=clickShow [size]="\'10px\'" relative="true" [type]="\'halfcircle\'">\n                                    </amexio-spinner>\n                                </amexio-body>\n                            </amexio-card>\n                        </amexio-column>\n                        <amexio-column [size]="4" [fit]=true>\n                            <amexio-card [header]="true" [body-height]="45">\n                                <amexio-header>\n                                    rectangle Bounce loader\n                                </amexio-header>\n                                <amexio-body>\n                                    <amexio-spinner [show]=clickShow [size]="\'9px\'" relative="true" [type]="\'rectanglebounce\'">\n                                    </amexio-spinner>\n                                </amexio-body>\n                            </amexio-card>\n                        </amexio-column>\n                    </amexio-row>\n\n\n\n\n                </amexio-body>\n            </amexio-card>\n\n        </amexio-column>\n    </amexio-row>\n</amexio-api-demo>\n</amexio-api-structure>'},yojS:function(e,t){e.exports='<amexio-api-structure [custom-com-data]="customSourceData" [url]="\'assets/componentjson/data/grid.json\'">\n  <amexio-api-demo>\n  \n\n<amexio-row>\n      <amexio-column size="12">\n        <amexio-card [header]="true">\n          <amexio-header>\n             Data Grid Group By \n          </amexio-header>\n          <amexio-body>\n            <amexio-datagrid\n              [title]="\'Employee Data\'"\n              [page-size] = "10"\n              [data-reader]="\'data\'"\n              [groupby]="true"\n              [groupby-data-index]="\'jobTitle\'"\n              [http-url]="\'assets/data/componentdata/datagridgroupby.json\'"\n              [http-method]="\'get\'">\n              <amexio-data-table-column [width]="30" [data-index]="\'preferredFullName\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Full Name\'"></amexio-data-table-column>\n              <amexio-data-table-column  [width]="30" [data-index]="\'jobTitle\'" [data-type]="\'string\'" [hidden]="false" [text]="\'Job Title\'">\n              </amexio-data-table-column>\n              <amexio-data-table-column [width]="30" [data-index]="\'salary\'" [data-type]="\'number\'" [hidden]="false" [text]="\'Salary\'"></amexio-data-table-column>\n            </amexio-datagrid>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n\n    </amexio-api-demo>\n    </amexio-api-structure>'}}]);